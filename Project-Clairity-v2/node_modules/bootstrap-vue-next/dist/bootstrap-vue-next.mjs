var bs = Object.defineProperty;
var ys = (t, o, e) => o in t ? bs(t, o, { enumerable: !0, configurable: !0, writable: !0, value: e }) : t[o] = e;
var qe = (t, o, e) => (ys(t, typeof o != "symbol" ? o + "" : o, e), e);
import { computed as h, toValue as xe, ref as H, shallowRef as Ca, watch as de, getCurrentScope as uo, onScopeDispose as co, shallowReadonly as Tt, unref as s, isRef as gs, toRef as T, readonly as Fe, customRef as hs, onMounted as De, nextTick as Oe, getCurrentInstance as Bt, reactive as _l, watchEffect as Et, defineComponent as q, mergeModels as be, useModel as we, onBeforeUnmount as Qa, openBlock as b, createElementBlock as F, Fragment as pe, createElementVNode as ae, renderSlot as V, createBlock as L, Teleport as _t, mergeProps as J, normalizeClass as W, normalizeStyle as Me, createTextVNode as ce, toDisplayString as oe, createCommentVNode as ne, render as fo, h as Ie, inject as Ve, provide as We, onActivated as Bs, Transition as el, withCtx as R, useAttrs as Lt, resolveDynamicComponent as fe, createVNode as ge, useSlots as je, withDirectives as dt, normalizeProps as _e, guardReactiveProps as Se, vShow as Kt, renderList as ke, TransitionGroup as vo, vModelCheckbox as _s, vModelRadio as ws, vModelSelect as Cs, withModifiers as xt, createSlots as tl, onUnmounted as ks, withKeys as Zt } from "vue";
const Xt = (t) => h(() => {
  const o = xe(t);
  return o ? `justify-content-${o}` : "";
}), ka = (t, o) => h(() => {
  const e = xe(t), l = xe(o);
  return e === !0 ? "true" : typeof e == "string" ? e : l === !1 ? "true" : e === !1 ? "false" : void 0;
});
class ut {
  constructor(o, e = {}) {
    qe(this, "cancelable", !0);
    qe(this, "componentId", null);
    qe(this, "_defaultPrevented", !1);
    qe(this, "eventType", "");
    qe(this, "nativeEvent", null);
    qe(this, "_preventDefault");
    qe(this, "relatedTarget", null);
    qe(this, "target", null);
    if (!o)
      throw new TypeError(
        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`
      );
    Object.assign(this, ut.Defaults, e, { eventType: o }), this._preventDefault = function() {
      this.cancelable && (this.defaultPrevented = !0);
    };
  }
  // Readable by everyone,
  // But only overwritten by inherrited constructors
  get defaultPrevented() {
    return this._defaultPrevented;
  }
  set defaultPrevented(o) {
    this._defaultPrevented = o;
  }
  // I think this is right
  // We want to be able to have it callable to everyone,
  // But only overwritten by inherrited constructors
  get preventDefault() {
    return this._preventDefault;
  }
  // This may not be correct, because it doesn't get correct type inferences in children
  // Ex overwrite this.preventDefault = () => true is valid. Could be a TS issue
  set preventDefault(o) {
    this._preventDefault = o;
  }
  static get Defaults() {
    return {
      cancelable: !0,
      componentId: null,
      eventType: "",
      nativeEvent: null,
      relatedTarget: null,
      target: null
    };
  }
}
class wt extends ut {
  constructor(e, l = {}) {
    super(e, l);
    qe(this, "trigger", null);
    Object.assign(this, ut.Defaults, l, { eventType: e });
  }
  static get Defaults() {
    return {
      ...super.Defaults,
      trigger: null
    };
  }
}
class po extends ut {
  constructor(e, l) {
    super(e, l);
    qe(this, "from");
    qe(this, "to");
    qe(this, "direction");
    Object.assign(this, ut.Defaults, l, { eventType: e });
    const { from: a, direction: n, to: r } = l;
    this.from = a, this.to = r, this.direction = n;
  }
  static get Defaults() {
    return {
      ...super.Defaults
    };
  }
}
const Ts = (t, o = {}) => {
  const e = (a = []) => {
    const { activeElement: n } = document;
    return n && !a.some((r) => r === n) ? n : null;
  }, l = (a) => a === e();
  try {
    t.focus(o);
  } catch (a) {
    console.error(a);
  }
  return l(t);
}, Pe = (t) => ((t == null ? void 0 : t()) ?? []).length === 0, Ss = (t) => {
  if (t.getAttribute("display") === "none")
    return !1;
  const o = t.getBoundingClientRect();
  return !!(o && o.height > 0 && o.width > 0);
}, La = (t) => {
  const o = window.getComputedStyle(t), e = o.transitionDelay.split(",")[0] || "", l = o.transitionDuration.split(",")[0] || "", a = Number(e.slice(0, -1)) * 1e3, n = Number(l.slice(0, -1)) * 1e3;
  return a + n;
}, al = typeof window < "u" && typeof document < "u" && typeof navigator < "u", xs = (t) => (() => {
  let e = !1;
  if (al)
    try {
      const l = {
        // This function will be called when the browser
        // attempts to access the passive property
        get passive() {
          e = !0;
        }
      };
      WINDOW.addEventListener("test", l, l), WINDOW.removeEventListener("test", l, l);
    } catch {
      e = !1;
    }
  return e;
})() ? typeof t == "object" ? t : { capture: !!t || !1 } : typeof t == "object" ? t.capture : t, $s = (t, o, e, l) => {
  t && t.addEventListener && t.addEventListener(o, e, xs(l));
}, As = (t, o, e, l) => {
  t && t.removeEventListener && t.removeEventListener(o, e, l);
}, wl = (t, o) => {
  (t ? $s : As)(...o);
}, Vs = ["TD", "TH", "TR"], Ns = [
  "a",
  "a *",
  // Include content inside links
  "button",
  "button *",
  // Include content inside buttons
  "input:not(.disabled):not([disabled])",
  "select:not(.disabled):not([disabled])",
  "textarea:not(.disabled):not([disabled])",
  '[role="link"]',
  '[role="link"] *',
  '[role="button"]',
  '[role="button"] *',
  "[tabindex]:not(.disabled):not([disabled])"
].join(","), Jt = (t) => {
  if (!t || !t.target)
    return !1;
  const o = t.target;
  if ("disabled" in o && o.disabled || Vs.indexOf(o.tagName) !== -1)
    return !1;
  if (o.closest(".dropdown-menu"))
    return !0;
  const e = o.tagName === "LABEL" ? o : o.closest("label");
  if (e) {
    const l = e.getAttribute("for"), a = l ? document.getElementById(l) : e.querySelector("input, select, textarea");
    if (a && !a.disabled)
      return !0;
  }
  return o.matches(Ns);
}, mo = ["top", "right", "bottom", "left"], Cl = ["start", "end"], kl = /* @__PURE__ */ mo.reduce((t, o) => t.concat(o, o + "-" + Cl[0], o + "-" + Cl[1]), []), lt = Math.min, at = Math.max, Os = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, Fs = {
  start: "end",
  end: "start"
};
function Ra(t, o, e) {
  return at(t, lt(o, e));
}
function ct(t, o) {
  return typeof t == "function" ? t(o) : t;
}
function Ye(t) {
  return t.split("-")[0];
}
function et(t) {
  return t.split("-")[1];
}
function bo(t) {
  return t === "x" ? "y" : "x";
}
function ll(t) {
  return t === "y" ? "height" : "width";
}
function Rt(t) {
  return ["top", "bottom"].includes(Ye(t)) ? "y" : "x";
}
function ol(t) {
  return bo(Rt(t));
}
function yo(t, o, e) {
  e === void 0 && (e = !1);
  const l = et(t), a = ol(t), n = ll(a);
  let r = a === "x" ? l === (e ? "end" : "start") ? "right" : "left" : l === "start" ? "bottom" : "top";
  return o.reference[n] > o.floating[n] && (r = da(r)), [r, da(r)];
}
function Ps(t) {
  const o = da(t);
  return [ua(t), o, ua(o)];
}
function ua(t) {
  return t.replace(/start|end/g, (o) => Fs[o]);
}
function Is(t, o, e) {
  const l = ["left", "right"], a = ["right", "left"], n = ["top", "bottom"], r = ["bottom", "top"];
  switch (t) {
    case "top":
    case "bottom":
      return e ? o ? a : l : o ? l : a;
    case "left":
    case "right":
      return o ? n : r;
    default:
      return [];
  }
}
function Es(t, o, e, l) {
  const a = et(t);
  let n = Is(Ye(t), e === "start", l);
  return a && (n = n.map((r) => r + "-" + a), o && (n = n.concat(n.map(ua)))), n;
}
function da(t) {
  return t.replace(/left|right|bottom|top/g, (o) => Os[o]);
}
function Ls(t) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...t
  };
}
function nl(t) {
  return typeof t != "number" ? Ls(t) : {
    top: t,
    right: t,
    bottom: t,
    left: t
  };
}
function yt(t) {
  return {
    ...t,
    top: t.y,
    left: t.x,
    right: t.x + t.width,
    bottom: t.y + t.height
  };
}
function Tl(t, o, e) {
  let {
    reference: l,
    floating: a
  } = t;
  const n = Rt(o), r = ol(o), u = ll(r), i = Ye(o), d = n === "y", c = l.x + l.width / 2 - a.width / 2, f = l.y + l.height / 2 - a.height / 2, p = l[u] / 2 - a[u] / 2;
  let v;
  switch (i) {
    case "top":
      v = {
        x: c,
        y: l.y - a.height
      };
      break;
    case "bottom":
      v = {
        x: c,
        y: l.y + l.height
      };
      break;
    case "right":
      v = {
        x: l.x + l.width,
        y: f
      };
      break;
    case "left":
      v = {
        x: l.x - a.width,
        y: f
      };
      break;
    default:
      v = {
        x: l.x,
        y: l.y
      };
  }
  switch (et(o)) {
    case "start":
      v[r] -= p * (e && d ? -1 : 1);
      break;
    case "end":
      v[r] += p * (e && d ? -1 : 1);
      break;
  }
  return v;
}
const Rs = async (t, o, e) => {
  const {
    placement: l = "bottom",
    strategy: a = "absolute",
    middleware: n = [],
    platform: r
  } = e, u = n.filter(Boolean), i = await (r.isRTL == null ? void 0 : r.isRTL(o));
  let d = await r.getElementRects({
    reference: t,
    floating: o,
    strategy: a
  }), {
    x: c,
    y: f
  } = Tl(d, l, i), p = l, v = {}, m = 0;
  for (let B = 0; B < u.length; B++) {
    const {
      name: k,
      fn: _
    } = u[B], {
      x: C,
      y: g,
      data: x,
      reset: y
    } = await _({
      x: c,
      y: f,
      initialPlacement: l,
      placement: p,
      strategy: a,
      middlewareData: v,
      rects: d,
      platform: r,
      elements: {
        reference: t,
        floating: o
      }
    });
    c = C ?? c, f = g ?? f, v = {
      ...v,
      [k]: {
        ...v[k],
        ...x
      }
    }, y && m <= 50 && (m++, typeof y == "object" && (y.placement && (p = y.placement), y.rects && (d = y.rects === !0 ? await r.getElementRects({
      reference: t,
      floating: o,
      strategy: a
    }) : y.rects), {
      x: c,
      y: f
    } = Tl(d, p, i)), B = -1);
  }
  return {
    x: c,
    y: f,
    placement: p,
    strategy: a,
    middlewareData: v
  };
};
async function It(t, o) {
  var e;
  o === void 0 && (o = {});
  const {
    x: l,
    y: a,
    platform: n,
    rects: r,
    elements: u,
    strategy: i
  } = t, {
    boundary: d = "clippingAncestors",
    rootBoundary: c = "viewport",
    elementContext: f = "floating",
    altBoundary: p = !1,
    padding: v = 0
  } = ct(o, t), m = nl(v), k = u[p ? f === "floating" ? "reference" : "floating" : f], _ = yt(await n.getClippingRect({
    element: (e = await (n.isElement == null ? void 0 : n.isElement(k))) == null || e ? k : k.contextElement || await (n.getDocumentElement == null ? void 0 : n.getDocumentElement(u.floating)),
    boundary: d,
    rootBoundary: c,
    strategy: i
  })), C = f === "floating" ? {
    x: l,
    y: a,
    width: r.floating.width,
    height: r.floating.height
  } : r.reference, g = await (n.getOffsetParent == null ? void 0 : n.getOffsetParent(u.floating)), x = await (n.isElement == null ? void 0 : n.isElement(g)) ? await (n.getScale == null ? void 0 : n.getScale(g)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, y = yt(n.convertOffsetParentRelativeRectToViewportRelativeRect ? await n.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: u,
    rect: C,
    offsetParent: g,
    strategy: i
  }) : C);
  return {
    top: (_.top - y.top + m.top) / x.y,
    bottom: (y.bottom - _.bottom + m.bottom) / x.y,
    left: (_.left - y.left + m.left) / x.x,
    right: (y.right - _.right + m.right) / x.x
  };
}
const zs = (t) => ({
  name: "arrow",
  options: t,
  async fn(o) {
    const {
      x: e,
      y: l,
      placement: a,
      rects: n,
      platform: r,
      elements: u,
      middlewareData: i
    } = o, {
      element: d,
      padding: c = 0
    } = ct(t, o) || {};
    if (d == null)
      return {};
    const f = nl(c), p = {
      x: e,
      y: l
    }, v = ol(a), m = ll(v), B = await r.getDimensions(d), k = v === "y", _ = k ? "top" : "left", C = k ? "bottom" : "right", g = k ? "clientHeight" : "clientWidth", x = n.reference[m] + n.reference[v] - p[v] - n.floating[m], y = p[v] - n.reference[v], $ = await (r.getOffsetParent == null ? void 0 : r.getOffsetParent(d));
    let S = $ ? $[g] : 0;
    (!S || !await (r.isElement == null ? void 0 : r.isElement($))) && (S = u.floating[g] || n.floating[m]);
    const Y = x / 2 - y / 2, K = S / 2 - B[m] / 2 - 1, P = lt(f[_], K), j = lt(f[C], K), N = P, O = S - B[m] - j, z = S / 2 - B[m] / 2 + Y, w = Ra(N, z, O), A = !i.arrow && et(a) != null && z !== w && n.reference[m] / 2 - (z < N ? P : j) - B[m] / 2 < 0, E = A ? z < N ? z - N : z - O : 0;
    return {
      [v]: p[v] + E,
      data: {
        [v]: w,
        centerOffset: z - w - E,
        ...A && {
          alignmentOffset: E
        }
      },
      reset: A
    };
  }
});
function Ms(t, o, e) {
  return (t ? [...e.filter((a) => et(a) === t), ...e.filter((a) => et(a) !== t)] : e.filter((a) => Ye(a) === a)).filter((a) => t ? et(a) === t || (o ? ua(a) !== a : !1) : !0);
}
const Hs = function(t) {
  return t === void 0 && (t = {}), {
    name: "autoPlacement",
    options: t,
    async fn(o) {
      var e, l, a;
      const {
        rects: n,
        middlewareData: r,
        placement: u,
        platform: i,
        elements: d
      } = o, {
        crossAxis: c = !1,
        alignment: f,
        allowedPlacements: p = kl,
        autoAlignment: v = !0,
        ...m
      } = ct(t, o), B = f !== void 0 || p === kl ? Ms(f || null, v, p) : p, k = await It(o, m), _ = ((e = r.autoPlacement) == null ? void 0 : e.index) || 0, C = B[_];
      if (C == null)
        return {};
      const g = yo(C, n, await (i.isRTL == null ? void 0 : i.isRTL(d.floating)));
      if (u !== C)
        return {
          reset: {
            placement: B[0]
          }
        };
      const x = [k[Ye(C)], k[g[0]], k[g[1]]], y = [...((l = r.autoPlacement) == null ? void 0 : l.overflows) || [], {
        placement: C,
        overflows: x
      }], $ = B[_ + 1];
      if ($)
        return {
          data: {
            index: _ + 1,
            overflows: y
          },
          reset: {
            placement: $
          }
        };
      const S = y.map((P) => {
        const j = et(P.placement);
        return [P.placement, j && c ? (
          // Check along the mainAxis and main crossAxis side.
          P.overflows.slice(0, 2).reduce((N, O) => N + O, 0)
        ) : (
          // Check only the mainAxis.
          P.overflows[0]
        ), P.overflows];
      }).sort((P, j) => P[1] - j[1]), K = ((a = S.filter((P) => P[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        et(P[0]) ? 2 : 3
      ).every((j) => j <= 0))[0]) == null ? void 0 : a[0]) || S[0][0];
      return K !== u ? {
        data: {
          index: _ + 1,
          overflows: y
        },
        reset: {
          placement: K
        }
      } : {};
    }
  };
}, go = function(t) {
  return t === void 0 && (t = {}), {
    name: "flip",
    options: t,
    async fn(o) {
      var e, l;
      const {
        placement: a,
        middlewareData: n,
        rects: r,
        initialPlacement: u,
        platform: i,
        elements: d
      } = o, {
        mainAxis: c = !0,
        crossAxis: f = !0,
        fallbackPlacements: p,
        fallbackStrategy: v = "bestFit",
        fallbackAxisSideDirection: m = "none",
        flipAlignment: B = !0,
        ...k
      } = ct(t, o);
      if ((e = n.arrow) != null && e.alignmentOffset)
        return {};
      const _ = Ye(a), C = Ye(u) === u, g = await (i.isRTL == null ? void 0 : i.isRTL(d.floating)), x = p || (C || !B ? [da(u)] : Ps(u));
      !p && m !== "none" && x.push(...Es(u, B, m, g));
      const y = [u, ...x], $ = await It(o, k), S = [];
      let Y = ((l = n.flip) == null ? void 0 : l.overflows) || [];
      if (c && S.push($[_]), f) {
        const N = yo(a, r, g);
        S.push($[N[0]], $[N[1]]);
      }
      if (Y = [...Y, {
        placement: a,
        overflows: S
      }], !S.every((N) => N <= 0)) {
        var K, P;
        const N = (((K = n.flip) == null ? void 0 : K.index) || 0) + 1, O = y[N];
        if (O)
          return {
            data: {
              index: N,
              overflows: Y
            },
            reset: {
              placement: O
            }
          };
        let z = (P = Y.filter((w) => w.overflows[0] <= 0).sort((w, A) => w.overflows[1] - A.overflows[1])[0]) == null ? void 0 : P.placement;
        if (!z)
          switch (v) {
            case "bestFit": {
              var j;
              const w = (j = Y.map((A) => [A.placement, A.overflows.filter((E) => E > 0).reduce((E, I) => E + I, 0)]).sort((A, E) => A[1] - E[1])[0]) == null ? void 0 : j[0];
              w && (z = w);
              break;
            }
            case "initialPlacement":
              z = u;
              break;
          }
        if (a !== z)
          return {
            reset: {
              placement: z
            }
          };
      }
      return {};
    }
  };
};
function Sl(t, o) {
  return {
    top: t.top - o.height,
    right: t.right - o.width,
    bottom: t.bottom - o.height,
    left: t.left - o.width
  };
}
function xl(t) {
  return mo.some((o) => t[o] >= 0);
}
const Ds = function(t) {
  return t === void 0 && (t = {}), {
    name: "hide",
    options: t,
    async fn(o) {
      const {
        rects: e
      } = o, {
        strategy: l = "referenceHidden",
        ...a
      } = ct(t, o);
      switch (l) {
        case "referenceHidden": {
          const n = await It(o, {
            ...a,
            elementContext: "reference"
          }), r = Sl(n, e.reference);
          return {
            data: {
              referenceHiddenOffsets: r,
              referenceHidden: xl(r)
            }
          };
        }
        case "escaped": {
          const n = await It(o, {
            ...a,
            altBoundary: !0
          }), r = Sl(n, e.floating);
          return {
            data: {
              escapedOffsets: r,
              escaped: xl(r)
            }
          };
        }
        default:
          return {};
      }
    }
  };
};
function ho(t) {
  const o = lt(...t.map((n) => n.left)), e = lt(...t.map((n) => n.top)), l = at(...t.map((n) => n.right)), a = at(...t.map((n) => n.bottom));
  return {
    x: o,
    y: e,
    width: l - o,
    height: a - e
  };
}
function js(t) {
  const o = t.slice().sort((a, n) => a.y - n.y), e = [];
  let l = null;
  for (let a = 0; a < o.length; a++) {
    const n = o[a];
    !l || n.y - l.y > l.height / 2 ? e.push([n]) : e[e.length - 1].push(n), l = n;
  }
  return e.map((a) => yt(ho(a)));
}
const qs = function(t) {
  return t === void 0 && (t = {}), {
    name: "inline",
    options: t,
    async fn(o) {
      const {
        placement: e,
        elements: l,
        rects: a,
        platform: n,
        strategy: r
      } = o, {
        padding: u = 2,
        x: i,
        y: d
      } = ct(t, o), c = Array.from(await (n.getClientRects == null ? void 0 : n.getClientRects(l.reference)) || []), f = js(c), p = yt(ho(c)), v = nl(u);
      function m() {
        if (f.length === 2 && f[0].left > f[1].right && i != null && d != null)
          return f.find((k) => i > k.left - v.left && i < k.right + v.right && d > k.top - v.top && d < k.bottom + v.bottom) || p;
        if (f.length >= 2) {
          if (Rt(e) === "y") {
            const P = f[0], j = f[f.length - 1], N = Ye(e) === "top", O = P.top, z = j.bottom, w = N ? P.left : j.left, A = N ? P.right : j.right, E = A - w, I = z - O;
            return {
              top: O,
              bottom: z,
              left: w,
              right: A,
              width: E,
              height: I,
              x: w,
              y: O
            };
          }
          const k = Ye(e) === "left", _ = at(...f.map((P) => P.right)), C = lt(...f.map((P) => P.left)), g = f.filter((P) => k ? P.left === C : P.right === _), x = g[0].top, y = g[g.length - 1].bottom, $ = C, S = _, Y = S - $, K = y - x;
          return {
            top: x,
            bottom: y,
            left: $,
            right: S,
            width: Y,
            height: K,
            x: $,
            y: x
          };
        }
        return p;
      }
      const B = await n.getElementRects({
        reference: {
          getBoundingClientRect: m
        },
        floating: l.floating,
        strategy: r
      });
      return a.reference.x !== B.reference.x || a.reference.y !== B.reference.y || a.reference.width !== B.reference.width || a.reference.height !== B.reference.height ? {
        reset: {
          rects: B
        }
      } : {};
    }
  };
};
async function Gs(t, o) {
  const {
    placement: e,
    platform: l,
    elements: a
  } = t, n = await (l.isRTL == null ? void 0 : l.isRTL(a.floating)), r = Ye(e), u = et(e), i = Rt(e) === "y", d = ["left", "top"].includes(r) ? -1 : 1, c = n && i ? -1 : 1, f = ct(o, t);
  let {
    mainAxis: p,
    crossAxis: v,
    alignmentAxis: m
  } = typeof f == "number" ? {
    mainAxis: f,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...f
  };
  return u && typeof m == "number" && (v = u === "end" ? m * -1 : m), i ? {
    x: v * c,
    y: p * d
  } : {
    x: p * d,
    y: v * c
  };
}
const Bo = function(t) {
  return t === void 0 && (t = 0), {
    name: "offset",
    options: t,
    async fn(o) {
      var e, l;
      const {
        x: a,
        y: n,
        placement: r,
        middlewareData: u
      } = o, i = await Gs(o, t);
      return r === ((e = u.offset) == null ? void 0 : e.placement) && (l = u.arrow) != null && l.alignmentOffset ? {} : {
        x: a + i.x,
        y: n + i.y,
        data: {
          ...i,
          placement: r
        }
      };
    }
  };
}, _o = function(t) {
  return t === void 0 && (t = {}), {
    name: "shift",
    options: t,
    async fn(o) {
      const {
        x: e,
        y: l,
        placement: a
      } = o, {
        mainAxis: n = !0,
        crossAxis: r = !1,
        limiter: u = {
          fn: (k) => {
            let {
              x: _,
              y: C
            } = k;
            return {
              x: _,
              y: C
            };
          }
        },
        ...i
      } = ct(t, o), d = {
        x: e,
        y: l
      }, c = await It(o, i), f = Rt(Ye(a)), p = bo(f);
      let v = d[p], m = d[f];
      if (n) {
        const k = p === "y" ? "top" : "left", _ = p === "y" ? "bottom" : "right", C = v + c[k], g = v - c[_];
        v = Ra(C, v, g);
      }
      if (r) {
        const k = f === "y" ? "top" : "left", _ = f === "y" ? "bottom" : "right", C = m + c[k], g = m - c[_];
        m = Ra(C, m, g);
      }
      const B = u.fn({
        ...o,
        [p]: v,
        [f]: m
      });
      return {
        ...B,
        data: {
          x: B.x - e,
          y: B.y - l
        }
      };
    }
  };
}, wo = function(t) {
  return t === void 0 && (t = {}), {
    name: "size",
    options: t,
    async fn(o) {
      const {
        placement: e,
        rects: l,
        platform: a,
        elements: n
      } = o, {
        apply: r = () => {
        },
        ...u
      } = ct(t, o), i = await It(o, u), d = Ye(e), c = et(e), f = Rt(e) === "y", {
        width: p,
        height: v
      } = l.floating;
      let m, B;
      d === "top" || d === "bottom" ? (m = d, B = c === (await (a.isRTL == null ? void 0 : a.isRTL(n.floating)) ? "start" : "end") ? "left" : "right") : (B = d, m = c === "end" ? "top" : "bottom");
      const k = v - i.top - i.bottom, _ = p - i.left - i.right, C = lt(v - i[m], k), g = lt(p - i[B], _), x = !o.middlewareData.shift;
      let y = C, $ = g;
      if (f ? $ = c || x ? lt(g, _) : _ : y = c || x ? lt(C, k) : k, x && !c) {
        const Y = at(i.left, 0), K = at(i.right, 0), P = at(i.top, 0), j = at(i.bottom, 0);
        f ? $ = p - 2 * (Y !== 0 || K !== 0 ? Y + K : at(i.left, i.right)) : y = v - 2 * (P !== 0 || j !== 0 ? P + j : at(i.top, i.bottom));
      }
      await r({
        ...o,
        availableWidth: $,
        availableHeight: y
      });
      const S = await a.getDimensions(n.floating);
      return p !== S.width || v !== S.height ? {
        reset: {
          rects: !0
        }
      } : {};
    }
  };
};
function Ke(t) {
  var o;
  return ((o = t.ownerDocument) == null ? void 0 : o.defaultView) || window;
}
function ot(t) {
  return Ke(t).getComputedStyle(t);
}
const $l = Math.min, jt = Math.max, ca = Math.round;
function Co(t) {
  const o = ot(t);
  let e = parseFloat(o.width), l = parseFloat(o.height);
  const a = t.offsetWidth, n = t.offsetHeight, r = ca(e) !== a || ca(l) !== n;
  return r && (e = a, l = n), { width: e, height: l, fallback: r };
}
function pt(t) {
  return To(t) ? (t.nodeName || "").toLowerCase() : "";
}
let Qt;
function ko() {
  if (Qt)
    return Qt;
  const t = navigator.userAgentData;
  return t && Array.isArray(t.brands) ? (Qt = t.brands.map((o) => o.brand + "/" + o.version).join(" "), Qt) : navigator.userAgent;
}
function nt(t) {
  return t instanceof Ke(t).HTMLElement;
}
function tt(t) {
  return t instanceof Ke(t).Element;
}
function To(t) {
  return t instanceof Ke(t).Node;
}
function Al(t) {
  return typeof ShadowRoot > "u" ? !1 : t instanceof Ke(t).ShadowRoot || t instanceof ShadowRoot;
}
function Ta(t) {
  const { overflow: o, overflowX: e, overflowY: l, display: a } = ot(t);
  return /auto|scroll|overlay|hidden|clip/.test(o + l + e) && !["inline", "contents"].includes(a);
}
function Ws(t) {
  return ["table", "td", "th"].includes(pt(t));
}
function za(t) {
  const o = /firefox/i.test(ko()), e = ot(t), l = e.backdropFilter || e.WebkitBackdropFilter;
  return e.transform !== "none" || e.perspective !== "none" || !!l && l !== "none" || o && e.willChange === "filter" || o && !!e.filter && e.filter !== "none" || ["transform", "perspective"].some((a) => e.willChange.includes(a)) || ["paint", "layout", "strict", "content"].some((a) => {
    const n = e.contain;
    return n != null && n.includes(a);
  });
}
function So() {
  return !/^((?!chrome|android).)*safari/i.test(ko());
}
function sl(t) {
  return ["html", "body", "#document"].includes(pt(t));
}
function xo(t) {
  return tt(t) ? t : t.contextElement;
}
const $o = { x: 1, y: 1 };
function Pt(t) {
  const o = xo(t);
  if (!nt(o))
    return $o;
  const e = o.getBoundingClientRect(), { width: l, height: a, fallback: n } = Co(o);
  let r = (n ? ca(e.width) : e.width) / l, u = (n ? ca(e.height) : e.height) / a;
  return r && Number.isFinite(r) || (r = 1), u && Number.isFinite(u) || (u = 1), { x: r, y: u };
}
function gt(t, o, e, l) {
  var a, n;
  o === void 0 && (o = !1), e === void 0 && (e = !1);
  const r = t.getBoundingClientRect(), u = xo(t);
  let i = $o;
  o && (l ? tt(l) && (i = Pt(l)) : i = Pt(t));
  const d = u ? Ke(u) : window, c = !So() && e;
  let f = (r.left + (c && ((a = d.visualViewport) == null ? void 0 : a.offsetLeft) || 0)) / i.x, p = (r.top + (c && ((n = d.visualViewport) == null ? void 0 : n.offsetTop) || 0)) / i.y, v = r.width / i.x, m = r.height / i.y;
  if (u) {
    const B = Ke(u), k = l && tt(l) ? Ke(l) : l;
    let _ = B.frameElement;
    for (; _ && l && k !== B; ) {
      const C = Pt(_), g = _.getBoundingClientRect(), x = getComputedStyle(_);
      g.x += (_.clientLeft + parseFloat(x.paddingLeft)) * C.x, g.y += (_.clientTop + parseFloat(x.paddingTop)) * C.y, f *= C.x, p *= C.y, v *= C.x, m *= C.y, f += g.x, p += g.y, _ = Ke(_).frameElement;
    }
  }
  return { width: v, height: m, top: p, right: f + v, bottom: p + m, left: f, x: f, y: p };
}
function ft(t) {
  return ((To(t) ? t.ownerDocument : t.document) || window.document).documentElement;
}
function Sa(t) {
  return tt(t) ? { scrollLeft: t.scrollLeft, scrollTop: t.scrollTop } : { scrollLeft: t.pageXOffset, scrollTop: t.pageYOffset };
}
function Ao(t) {
  return gt(ft(t)).left + Sa(t).scrollLeft;
}
function Wt(t) {
  if (pt(t) === "html")
    return t;
  const o = t.assignedSlot || t.parentNode || Al(t) && t.host || ft(t);
  return Al(o) ? o.host : o;
}
function Vo(t) {
  const o = Wt(t);
  return sl(o) ? o.ownerDocument.body : nt(o) && Ta(o) ? o : Vo(o);
}
function qt(t, o) {
  var e;
  o === void 0 && (o = []);
  const l = Vo(t), a = l === ((e = t.ownerDocument) == null ? void 0 : e.body), n = Ke(l);
  return a ? o.concat(n, n.visualViewport || [], Ta(l) ? l : []) : o.concat(l, qt(l));
}
function Vl(t, o, e) {
  return o === "viewport" ? yt(function(l, a) {
    const n = Ke(l), r = ft(l), u = n.visualViewport;
    let i = r.clientWidth, d = r.clientHeight, c = 0, f = 0;
    if (u) {
      i = u.width, d = u.height;
      const p = So();
      (p || !p && a === "fixed") && (c = u.offsetLeft, f = u.offsetTop);
    }
    return { width: i, height: d, x: c, y: f };
  }(t, e)) : tt(o) ? yt(function(l, a) {
    const n = gt(l, !0, a === "fixed"), r = n.top + l.clientTop, u = n.left + l.clientLeft, i = nt(l) ? Pt(l) : { x: 1, y: 1 };
    return { width: l.clientWidth * i.x, height: l.clientHeight * i.y, x: u * i.x, y: r * i.y };
  }(o, e)) : yt(function(l) {
    const a = ft(l), n = Sa(l), r = l.ownerDocument.body, u = jt(a.scrollWidth, a.clientWidth, r.scrollWidth, r.clientWidth), i = jt(a.scrollHeight, a.clientHeight, r.scrollHeight, r.clientHeight);
    let d = -n.scrollLeft + Ao(l);
    const c = -n.scrollTop;
    return ot(r).direction === "rtl" && (d += jt(a.clientWidth, r.clientWidth) - u), { width: u, height: i, x: d, y: c };
  }(ft(t)));
}
function Nl(t) {
  return nt(t) && ot(t).position !== "fixed" ? t.offsetParent : null;
}
function Ol(t) {
  const o = Ke(t);
  let e = Nl(t);
  for (; e && Ws(e) && ot(e).position === "static"; )
    e = Nl(e);
  return e && (pt(e) === "html" || pt(e) === "body" && ot(e).position === "static" && !za(e)) ? o : e || function(l) {
    let a = Wt(l);
    for (; nt(a) && !sl(a); ) {
      if (za(a))
        return a;
      a = Wt(a);
    }
    return null;
  }(t) || o;
}
function Us(t, o, e) {
  const l = nt(o), a = ft(o), n = gt(t, !0, e === "fixed", o);
  let r = { scrollLeft: 0, scrollTop: 0 };
  const u = { x: 0, y: 0 };
  if (l || !l && e !== "fixed")
    if ((pt(o) !== "body" || Ta(a)) && (r = Sa(o)), nt(o)) {
      const i = gt(o, !0);
      u.x = i.x + o.clientLeft, u.y = i.y + o.clientTop;
    } else
      a && (u.x = Ao(a));
  return { x: n.left + r.scrollLeft - u.x, y: n.top + r.scrollTop - u.y, width: n.width, height: n.height };
}
const Ks = { getClippingRect: function(t) {
  let { element: o, boundary: e, rootBoundary: l, strategy: a } = t;
  const n = e === "clippingAncestors" ? function(d, c) {
    const f = c.get(d);
    if (f)
      return f;
    let p = qt(d).filter((k) => tt(k) && pt(k) !== "body"), v = null;
    const m = ot(d).position === "fixed";
    let B = m ? Wt(d) : d;
    for (; tt(B) && !sl(B); ) {
      const k = ot(B), _ = za(B);
      (m ? _ || v : _ || k.position !== "static" || !v || !["absolute", "fixed"].includes(v.position)) ? v = k : p = p.filter((C) => C !== B), B = Wt(B);
    }
    return c.set(d, p), p;
  }(o, this._c) : [].concat(e), r = [...n, l], u = r[0], i = r.reduce((d, c) => {
    const f = Vl(o, c, a);
    return d.top = jt(f.top, d.top), d.right = $l(f.right, d.right), d.bottom = $l(f.bottom, d.bottom), d.left = jt(f.left, d.left), d;
  }, Vl(o, u, a));
  return { width: i.right - i.left, height: i.bottom - i.top, x: i.left, y: i.top };
}, convertOffsetParentRelativeRectToViewportRelativeRect: function(t) {
  let { rect: o, offsetParent: e, strategy: l } = t;
  const a = nt(e), n = ft(e);
  if (e === n)
    return o;
  let r = { scrollLeft: 0, scrollTop: 0 }, u = { x: 1, y: 1 };
  const i = { x: 0, y: 0 };
  if ((a || !a && l !== "fixed") && ((pt(e) !== "body" || Ta(n)) && (r = Sa(e)), nt(e))) {
    const d = gt(e);
    u = Pt(e), i.x = d.x + e.clientLeft, i.y = d.y + e.clientTop;
  }
  return { width: o.width * u.x, height: o.height * u.y, x: o.x * u.x - r.scrollLeft * u.x + i.x, y: o.y * u.y - r.scrollTop * u.y + i.y };
}, isElement: tt, getDimensions: function(t) {
  return nt(t) ? Co(t) : t.getBoundingClientRect();
}, getOffsetParent: Ol, getDocumentElement: ft, getScale: Pt, async getElementRects(t) {
  let { reference: o, floating: e, strategy: l } = t;
  const a = this.getOffsetParent || Ol, n = this.getDimensions;
  return { reference: Us(o, await a(e), l), floating: { x: 0, y: 0, ...await n(e) } };
}, getClientRects: (t) => Array.from(t.getClientRects()), isRTL: (t) => ot(t).direction === "rtl" };
function No(t, o, e, l) {
  l === void 0 && (l = {});
  const { ancestorScroll: a = !0, ancestorResize: n = !0, elementResize: r = !0, animationFrame: u = !1 } = l, i = a && !u, d = i || n ? [...tt(t) ? qt(t) : t.contextElement ? qt(t.contextElement) : [], ...qt(o)] : [];
  d.forEach((v) => {
    i && v.addEventListener("scroll", e, { passive: !0 }), n && v.addEventListener("resize", e);
  });
  let c, f = null;
  if (r) {
    let v = !0;
    f = new ResizeObserver(() => {
      v || e(), v = !1;
    }), tt(t) && !u && f.observe(t), tt(t) || !t.contextElement || u || f.observe(t.contextElement), f.observe(o);
  }
  let p = u ? gt(t) : null;
  return u && function v() {
    const m = gt(t);
    !p || m.x === p.x && m.y === p.y && m.width === p.width && m.height === p.height || e(), p = m, c = requestAnimationFrame(v);
  }(), e(), () => {
    var v;
    d.forEach((m) => {
      i && m.removeEventListener("scroll", e), n && m.removeEventListener("resize", e);
    }), (v = f) == null || v.disconnect(), f = null, u && cancelAnimationFrame(c);
  };
}
const Xs = (t, o, e) => {
  const l = /* @__PURE__ */ new Map(), a = { platform: Ks, ...e }, n = { ...a.platform, _c: l };
  return Rs(t, o, { ...a, platform: n });
};
function Ys(t) {
  return Oo(t) ? (t.nodeName || "").toLowerCase() : "#document";
}
function Zs(t) {
  var o;
  return (t == null || (o = t.ownerDocument) == null ? void 0 : o.defaultView) || window;
}
function Oo(t) {
  return t instanceof Node || t instanceof Zs(t).Node;
}
function Js(t) {
  return t != null && typeof t == "object" && "$el" in t;
}
function Ma(t) {
  if (Js(t)) {
    const o = t.$el;
    return Oo(o) && Ys(o) === "#comment" ? null : o;
  }
  return t;
}
function $t(t) {
  return typeof t == "function" ? t() : s(t);
}
function Qs(t) {
  return {
    name: "arrow",
    options: t,
    fn(o) {
      const e = Ma($t(t.element));
      return e == null ? {} : zs({
        element: e,
        padding: t.padding
      }).fn(o);
    }
  };
}
function Fo(t) {
  return typeof window > "u" ? 1 : (t.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function Fl(t, o) {
  const e = Fo(t);
  return Math.round(o * e) / e;
}
function Po(t, o, e) {
  e === void 0 && (e = {});
  const l = e.whileElementsMounted, a = h(() => {
    var S;
    return (S = $t(e.open)) != null ? S : !0;
  }), n = h(() => $t(e.middleware)), r = h(() => {
    var S;
    return (S = $t(e.placement)) != null ? S : "bottom";
  }), u = h(() => {
    var S;
    return (S = $t(e.strategy)) != null ? S : "absolute";
  }), i = h(() => {
    var S;
    return (S = $t(e.transform)) != null ? S : !0;
  }), d = h(() => Ma(t.value)), c = h(() => Ma(o.value)), f = H(0), p = H(0), v = H(u.value), m = H(r.value), B = Ca({}), k = H(!1), _ = h(() => {
    const S = {
      position: v.value,
      left: "0",
      top: "0"
    };
    if (!c.value)
      return S;
    const Y = Fl(c.value, f.value), K = Fl(c.value, p.value);
    return i.value ? {
      ...S,
      transform: "translate(" + Y + "px, " + K + "px)",
      ...Fo(c.value) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: v.value,
      left: Y + "px",
      top: K + "px"
    };
  });
  let C;
  function g() {
    d.value == null || c.value == null || Xs(d.value, c.value, {
      middleware: n.value,
      placement: r.value,
      strategy: u.value
    }).then((S) => {
      f.value = S.x, p.value = S.y, v.value = S.strategy, m.value = S.placement, B.value = S.middlewareData, k.value = !0;
    });
  }
  function x() {
    typeof C == "function" && (C(), C = void 0);
  }
  function y() {
    if (x(), l === void 0) {
      g();
      return;
    }
    if (d.value != null && c.value != null) {
      C = l(d.value, c.value, g);
      return;
    }
  }
  function $() {
    a.value || (k.value = !1);
  }
  return de([n, r, u], g, {
    flush: "sync"
  }), de([d, c], y, {
    flush: "sync"
  }), de(a, $, {
    flush: "sync"
  }), uo() && co(x), {
    x: Tt(f),
    y: Tt(p),
    strategy: Tt(v),
    placement: Tt(m),
    middlewareData: Tt(B),
    isPositioned: Tt(k),
    floatingStyles: _,
    update: g
  };
}
const er = /* @__PURE__ */ new Set([
  "background",
  "cite",
  "href",
  "itemtype",
  "longdesc",
  "poster",
  "src",
  "xlink:href"
]), tr = /^aria-[\w-]*$/i, ar = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i, lr = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i, or = (t, o) => {
  const e = t.nodeName.toLowerCase();
  return o.includes(e) ? er.has(e) ? !!(ar.test(t.nodeValue || "") || lr.test(t.nodeValue || "")) : !0 : o.filter((l) => l instanceof RegExp).some((l) => l.test(e));
}, Nt = {
  // Global attributes allowed on any supplied element below.
  "*": ["class", "dir", "id", "lang", "role", tr],
  a: ["target", "href", "title", "rel"],
  area: [],
  b: [],
  br: [],
  col: [],
  code: [],
  div: [],
  em: [],
  hr: [],
  h1: [],
  h2: [],
  h3: [],
  h4: [],
  h5: [],
  h6: [],
  i: [],
  img: ["src", "srcset", "alt", "title", "width", "height"],
  li: [],
  ol: [],
  p: [],
  pre: [],
  s: [],
  small: [],
  span: [],
  sub: [],
  sup: [],
  strong: [],
  u: [],
  ul: []
}, Ot = (t, o, e) => {
  if (!t.length)
    return t;
  if (e && typeof e == "function")
    return e(t);
  const a = new window.DOMParser().parseFromString(t, "text/html"), n = a.body.querySelectorAll("*");
  for (const r of n) {
    const u = r.nodeName.toLowerCase();
    if (!Object.keys(o).includes(u)) {
      r.remove();
      continue;
    }
    const i = r.attributes, d = [...o["*"] || [], ...o[u] || []];
    for (const c of i)
      or(c, d) || r.removeAttribute(c.nodeName);
  }
  return a.body.innerHTML;
};
function rt(t) {
  return uo() ? (co(t), !0) : !1;
}
function nr(t, o) {
  if (typeof Symbol < "u") {
    const e = { ...t };
    return Object.defineProperty(e, Symbol.iterator, {
      enumerable: !1,
      value() {
        let l = 0;
        return {
          next: () => ({
            value: o[l++],
            done: l > o.length
          })
        };
      }
    }), e;
  } else
    return Object.assign([...o], t);
}
function Ee(t) {
  return typeof t == "function" ? t() : s(t);
}
const fa = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const Io = (t) => t != null, sr = Object.prototype.toString, rr = (t) => sr.call(t) === "[object Object]", Xe = () => {
}, Ha = /* @__PURE__ */ ir();
function ir() {
  var t, o;
  return fa && ((t = window == null ? void 0 : window.navigator) == null ? void 0 : t.userAgent) && (/iP(?:ad|hone|od)/.test(window.navigator.userAgent) || ((o = window == null ? void 0 : window.navigator) == null ? void 0 : o.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));
}
function Eo(t, o) {
  function e(...l) {
    return new Promise((a, n) => {
      Promise.resolve(t(() => o.apply(this, l), { fn: o, thisArg: this, args: l })).then(a).catch(n);
    });
  }
  return e;
}
const Lo = (t) => t();
function ur(t, o = {}) {
  let e, l, a = Xe;
  const n = (u) => {
    clearTimeout(u), a(), a = Xe;
  };
  return (u) => {
    const i = Ee(t), d = Ee(o.maxWait);
    return e && n(e), i <= 0 || d !== void 0 && d <= 0 ? (l && (n(l), l = null), Promise.resolve(u())) : new Promise((c, f) => {
      a = o.rejectOnCancel ? f : c, d && !l && (l = setTimeout(() => {
        e && n(e), l = null, c(u());
      }, d)), e = setTimeout(() => {
        l && n(l), l = null, c(u());
      }, i);
    });
  };
}
function dr(t = Lo) {
  const o = H(!0);
  function e() {
    o.value = !1;
  }
  function l() {
    o.value = !0;
  }
  const a = (...n) => {
    o.value && t(...n);
  };
  return { isActive: Fe(o), pause: e, resume: l, eventFilter: a };
}
function cr(t) {
  const o = /* @__PURE__ */ Object.create(null);
  return (e) => o[e] || (o[e] = t(e));
}
const fr = /-(\w)/g, vr = cr((t) => t.replace(fr, (o, e) => e ? e.toUpperCase() : ""));
function pr(t, o) {
  var e;
  if (typeof t == "number")
    return t + o;
  const l = ((e = t.match(/^-?\d+\.?\d*/)) == null ? void 0 : e[0]) || "", a = t.slice(l.length), n = Number.parseFloat(l) + o;
  return Number.isNaN(n) ? t : n + a;
}
function mr(t) {
  return t || Bt();
}
function Ro(...t) {
  if (t.length !== 1)
    return T(...t);
  const o = t[0];
  return typeof o == "function" ? Fe(hs(() => ({ get: o, set: Xe }))) : H(o);
}
function br(t, o = 200, e = {}) {
  return Eo(
    ur(o, e),
    t
  );
}
function yr(t, o, e = {}) {
  const {
    eventFilter: l = Lo,
    ...a
  } = e;
  return de(
    t,
    Eo(
      l,
      o
    ),
    a
  );
}
function Da(t, o, e = {}) {
  const {
    eventFilter: l,
    ...a
  } = e, { eventFilter: n, pause: r, resume: u, isActive: i } = dr(l);
  return { stop: yr(
    t,
    o,
    {
      ...a,
      eventFilter: n
    }
  ), pause: r, resume: u, isActive: i };
}
function ja(t, o, ...[e]) {
  const {
    flush: l = "sync",
    deep: a = !1,
    immediate: n = !0,
    direction: r = "both",
    transform: u = {}
  } = e || {}, i = [], d = "ltr" in u && u.ltr || ((p) => p), c = "rtl" in u && u.rtl || ((p) => p);
  return (r === "both" || r === "ltr") && i.push(Da(
    t,
    (p) => {
      i.forEach((v) => v.pause()), o.value = d(p), i.forEach((v) => v.resume());
    },
    { flush: l, deep: a, immediate: n }
  )), (r === "both" || r === "rtl") && i.push(Da(
    o,
    (p) => {
      i.forEach((v) => v.pause()), t.value = c(p), i.forEach((v) => v.resume());
    },
    { flush: l, deep: a, immediate: n }
  )), () => {
    i.forEach((p) => p.stop());
  };
}
function zo(t, o = !0, e) {
  mr() ? De(t, e) : o ? t() : Oe(t);
}
function Mo(t, o = 1e3, e = {}) {
  const {
    immediate: l = !0,
    immediateCallback: a = !1
  } = e;
  let n = null;
  const r = H(!1);
  function u() {
    n && (clearInterval(n), n = null);
  }
  function i() {
    r.value = !1, u();
  }
  function d() {
    const c = Ee(o);
    c <= 0 || (r.value = !0, a && t(), u(), n = setInterval(t, c));
  }
  if (l && fa && d(), gs(o) || typeof o == "function") {
    const c = de(o, () => {
      r.value && fa && d();
    });
    rt(c);
  }
  return rt(i), {
    isActive: r,
    pause: i,
    resume: d
  };
}
function Be(t, o = {}) {
  const {
    method: e = "parseFloat",
    radix: l,
    nanToZero: a
  } = o;
  return h(() => {
    let n = Ee(t);
    return typeof n == "string" && (n = Number[e](n, l)), a && Number.isNaN(n) && (n = 0), n;
  });
}
function va(t = {}) {
  const {
    inheritAttrs: o = !0
  } = t, e = Ca(), l = /* @__PURE__ */ q({
    setup(n, { slots: r }) {
      return () => {
        e.value = r.default;
      };
    }
  }), a = /* @__PURE__ */ q({
    inheritAttrs: o,
    setup(n, { attrs: r, slots: u }) {
      return () => {
        var i;
        if (!e.value && process.env.NODE_ENV !== "production")
          throw new Error("[VueUse] Failed to find the definition of reusable template");
        const d = (i = e.value) == null ? void 0 : i.call(e, { ...gr(r), $slots: u });
        return o && (d == null ? void 0 : d.length) === 1 ? d[0] : d;
      };
    }
  });
  return nr(
    { define: l, reuse: a },
    [l, a]
  );
}
function gr(t) {
  const o = {};
  for (const e in t)
    o[vr(e)] = t[e];
  return o;
}
function Re(t) {
  var o;
  const e = Ee(t);
  return (o = e == null ? void 0 : e.$el) != null ? o : e;
}
const He = fa ? window : void 0;
function $e(...t) {
  let o, e, l, a;
  if (typeof t[0] == "string" || Array.isArray(t[0]) ? ([e, l, a] = t, o = He) : [o, e, l, a] = t, !o)
    return Xe;
  Array.isArray(e) || (e = [e]), Array.isArray(l) || (l = [l]);
  const n = [], r = () => {
    n.forEach((c) => c()), n.length = 0;
  }, u = (c, f, p, v) => (c.addEventListener(f, p, v), () => c.removeEventListener(f, p, v)), i = de(
    () => [Re(o), Ee(a)],
    ([c, f]) => {
      if (r(), !c)
        return;
      const p = rr(f) ? { ...f } : f;
      n.push(
        ...e.flatMap((v) => l.map((m) => u(c, v, m, p)))
      );
    },
    { immediate: !0, flush: "post" }
  ), d = () => {
    i(), r();
  };
  return rt(d), d;
}
let Pl = !1;
function Ho(t, o, e = {}) {
  const { window: l = He, ignore: a = [], capture: n = !0, detectIframe: r = !1 } = e;
  if (!l)
    return Xe;
  Ha && !Pl && (Pl = !0, Array.from(l.document.body.children).forEach((p) => p.addEventListener("click", Xe)), l.document.documentElement.addEventListener("click", Xe));
  let u = !0;
  const i = (p) => a.some((v) => {
    if (typeof v == "string")
      return Array.from(l.document.querySelectorAll(v)).some((m) => m === p.target || p.composedPath().includes(m));
    {
      const m = Re(v);
      return m && (p.target === m || p.composedPath().includes(m));
    }
  }), c = [
    $e(l, "click", (p) => {
      const v = Re(t);
      if (!(!v || v === p.target || p.composedPath().includes(v))) {
        if (p.detail === 0 && (u = !i(p)), !u) {
          u = !0;
          return;
        }
        o(p);
      }
    }, { passive: !0, capture: n }),
    $e(l, "pointerdown", (p) => {
      const v = Re(t);
      u = !i(p) && !!(v && !p.composedPath().includes(v));
    }, { passive: !0 }),
    r && $e(l, "blur", (p) => {
      setTimeout(() => {
        var v;
        const m = Re(t);
        ((v = l.document.activeElement) == null ? void 0 : v.tagName) === "IFRAME" && !(m != null && m.contains(l.document.activeElement)) && o(p);
      }, 0);
    })
  ].filter(Boolean);
  return () => c.forEach((p) => p());
}
function hr(t) {
  return typeof t == "function" ? t : typeof t == "string" ? (o) => o.key === t : Array.isArray(t) ? (o) => t.includes(o.key) : () => !0;
}
function Le(...t) {
  let o, e, l = {};
  t.length === 3 ? (o = t[0], e = t[1], l = t[2]) : t.length === 2 ? typeof t[1] == "object" ? (o = !0, e = t[0], l = t[1]) : (o = t[0], e = t[1]) : (o = !0, e = t[0]);
  const {
    target: a = He,
    eventName: n = "keydown",
    passive: r = !1,
    dedupe: u = !1
  } = l, i = hr(o);
  return $e(a, n, (c) => {
    c.repeat && Ee(u) || i(c) && e(c);
  }, r);
}
function Br() {
  const t = H(!1), o = Bt();
  return o && De(() => {
    t.value = !0;
  }, o), t;
}
function rl(t) {
  const o = Br();
  return h(() => (o.value, !!t()));
}
function Do(t, o, e = {}) {
  const { window: l = He, ...a } = e;
  let n;
  const r = rl(() => l && "MutationObserver" in l), u = () => {
    n && (n.disconnect(), n = void 0);
  }, i = h(() => {
    const p = Ee(t), v = (Array.isArray(p) ? p : [p]).map(Re).filter(Io);
    return new Set(v);
  }), d = de(
    () => i.value,
    (p) => {
      u(), r.value && p.size && (n = new MutationObserver(o), p.forEach((v) => n.observe(v, a)));
    },
    { immediate: !0, flush: "post" }
  ), c = () => n == null ? void 0 : n.takeRecords(), f = () => {
    u(), d();
  };
  return rt(f), {
    isSupported: r,
    stop: f,
    takeRecords: c
  };
}
function At(t, o = {}) {
  const { window: e = He } = o, l = rl(() => e && "matchMedia" in e && typeof e.matchMedia == "function");
  let a;
  const n = H(!1), r = (d) => {
    n.value = d.matches;
  }, u = () => {
    a && ("removeEventListener" in a ? a.removeEventListener("change", r) : a.removeListener(r));
  }, i = Et(() => {
    l.value && (u(), a = e.matchMedia(Ee(t)), "addEventListener" in a ? a.addEventListener("change", r) : a.addListener(r), n.value = a.matches);
  });
  return rt(() => {
    i(), u(), a = void 0;
  }), n;
}
const _r = {
  xs: 0,
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200,
  xxl: 1400
};
function wr(t, o = {}) {
  function e(c, f) {
    let p = Ee(t[Ee(c)]);
    return f != null && (p = pr(p, f)), typeof p == "number" && (p = `${p}px`), p;
  }
  const { window: l = He, strategy: a = "min-width" } = o;
  function n(c) {
    return l ? l.matchMedia(c).matches : !1;
  }
  const r = (c) => At(() => `(min-width: ${e(c)})`, o), u = (c) => At(() => `(max-width: ${e(c)})`, o), i = Object.keys(t).reduce((c, f) => (Object.defineProperty(c, f, {
    get: () => a === "min-width" ? r(f) : u(f),
    enumerable: !0,
    configurable: !0
  }), c), {});
  function d() {
    const c = Object.keys(t).map((f) => [f, r(f)]);
    return h(() => c.filter(([, f]) => f.value).map(([f]) => f));
  }
  return Object.assign(i, {
    greaterOrEqual: r,
    smallerOrEqual: u,
    greater(c) {
      return At(() => `(min-width: ${e(c, 0.1)})`, o);
    },
    smaller(c) {
      return At(() => `(max-width: ${e(c, -0.1)})`, o);
    },
    between(c, f) {
      return At(() => `(min-width: ${e(c)}) and (max-width: ${e(f, -0.1)})`, o);
    },
    isGreater(c) {
      return n(`(min-width: ${e(c, 0.1)})`);
    },
    isGreaterOrEqual(c) {
      return n(`(min-width: ${e(c)})`);
    },
    isSmaller(c) {
      return n(`(max-width: ${e(c, -0.1)})`);
    },
    isSmallerOrEqual(c) {
      return n(`(max-width: ${e(c)})`);
    },
    isInBetween(c, f) {
      return n(`(min-width: ${e(c)}) and (max-width: ${e(f, -0.1)})`);
    },
    current: d,
    active() {
      const c = d();
      return h(() => c.value.length === 0 ? "" : c.value.at(-1));
    }
  });
}
const ea = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, ta = "__vueuse_ssr_handlers__", Cr = /* @__PURE__ */ kr();
function kr() {
  return ta in ea || (ea[ta] = ea[ta] || {}), ea[ta];
}
function il(t, o) {
  return Cr[t] || o;
}
function Tr(t) {
  return t == null ? "any" : t instanceof Set ? "set" : t instanceof Map ? "map" : t instanceof Date ? "date" : typeof t == "boolean" ? "boolean" : typeof t == "string" ? "string" : typeof t == "object" ? "object" : Number.isNaN(t) ? "any" : "number";
}
const Sr = {
  boolean: {
    read: (t) => t === "true",
    write: (t) => String(t)
  },
  object: {
    read: (t) => JSON.parse(t),
    write: (t) => JSON.stringify(t)
  },
  number: {
    read: (t) => Number.parseFloat(t),
    write: (t) => String(t)
  },
  any: {
    read: (t) => t,
    write: (t) => String(t)
  },
  string: {
    read: (t) => t,
    write: (t) => String(t)
  },
  map: {
    read: (t) => new Map(JSON.parse(t)),
    write: (t) => JSON.stringify(Array.from(t.entries()))
  },
  set: {
    read: (t) => new Set(JSON.parse(t)),
    write: (t) => JSON.stringify(Array.from(t))
  },
  date: {
    read: (t) => new Date(t),
    write: (t) => t.toISOString()
  }
}, Il = "vueuse-storage";
function xr(t, o, e, l = {}) {
  var a;
  const {
    flush: n = "pre",
    deep: r = !0,
    listenToStorageChanges: u = !0,
    writeDefaults: i = !0,
    mergeDefaults: d = !1,
    shallow: c,
    window: f = He,
    eventFilter: p,
    onError: v = (P) => {
      console.error(P);
    },
    initOnMounted: m
  } = l, B = (c ? Ca : H)(typeof o == "function" ? o() : o);
  if (!e)
    try {
      e = il("getDefaultStorage", () => {
        var P;
        return (P = He) == null ? void 0 : P.localStorage;
      })();
    } catch (P) {
      v(P);
    }
  if (!e)
    return B;
  const k = Ee(o), _ = Tr(k), C = (a = l.serializer) != null ? a : Sr[_], { pause: g, resume: x } = Da(
    B,
    () => $(B.value),
    { flush: n, deep: r, eventFilter: p }
  );
  f && u && zo(() => {
    $e(f, "storage", Y), $e(f, Il, K), m && Y();
  }), m || Y();
  function y(P, j) {
    f && f.dispatchEvent(new CustomEvent(Il, {
      detail: {
        key: t,
        oldValue: P,
        newValue: j,
        storageArea: e
      }
    }));
  }
  function $(P) {
    try {
      const j = e.getItem(t);
      if (P == null)
        y(j, null), e.removeItem(t);
      else {
        const N = C.write(P);
        j !== N && (e.setItem(t, N), y(j, N));
      }
    } catch (j) {
      v(j);
    }
  }
  function S(P) {
    const j = P ? P.newValue : e.getItem(t);
    if (j == null)
      return i && k != null && e.setItem(t, C.write(k)), k;
    if (!P && d) {
      const N = C.read(j);
      return typeof d == "function" ? d(N, k) : _ === "object" && !Array.isArray(N) ? { ...k, ...N } : N;
    } else
      return typeof j != "string" ? j : C.read(j);
  }
  function Y(P) {
    if (!(P && P.storageArea !== e)) {
      if (P && P.key == null) {
        B.value = k;
        return;
      }
      if (!(P && P.key !== t)) {
        g();
        try {
          (P == null ? void 0 : P.newValue) !== C.write(B.value) && (B.value = S(P));
        } catch (j) {
          v(j);
        } finally {
          P ? Oe(x) : x();
        }
      }
    }
  }
  function K(P) {
    Y(P.detail);
  }
  return B;
}
function $r(t) {
  return At("(prefers-color-scheme: dark)", t);
}
function Ar(t = {}) {
  const {
    selector: o = "html",
    attribute: e = "class",
    initialValue: l = "auto",
    window: a = He,
    storage: n,
    storageKey: r = "vueuse-color-scheme",
    listenToStorageChanges: u = !0,
    storageRef: i,
    emitAuto: d,
    disableTransition: c = !0
  } = t, f = {
    auto: "",
    light: "light",
    dark: "dark",
    ...t.modes || {}
  }, p = $r({ window: a }), v = h(() => p.value ? "dark" : "light"), m = i || (r == null ? Ro(l) : xr(r, l, n, { window: a, listenToStorageChanges: u })), B = h(() => m.value === "auto" ? v.value : m.value), k = il(
    "updateHTMLAttrs",
    (x, y, $) => {
      const S = typeof x == "string" ? a == null ? void 0 : a.document.querySelector(x) : Re(x);
      if (!S)
        return;
      let Y;
      if (c && (Y = a.document.createElement("style"), Y.appendChild(document.createTextNode("*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")), a.document.head.appendChild(Y)), y === "class") {
        const K = $.split(/\s/g);
        Object.values(f).flatMap((P) => (P || "").split(/\s/g)).filter(Boolean).forEach((P) => {
          K.includes(P) ? S.classList.add(P) : S.classList.remove(P);
        });
      } else
        S.setAttribute(y, $);
      c && (a.getComputedStyle(Y).opacity, document.head.removeChild(Y));
    }
  );
  function _(x) {
    var y;
    k(o, e, (y = f[x]) != null ? y : x);
  }
  function C(x) {
    t.onChanged ? t.onChanged(x, _) : _(x);
  }
  de(B, C, { flush: "post", immediate: !0 }), zo(() => C(B.value));
  const g = h({
    get() {
      return d ? m.value : B.value;
    },
    set(x) {
      m.value = x;
    }
  });
  try {
    return Object.assign(g, { store: m, system: v, state: B });
  } catch {
    return g;
  }
}
function ul(t, o = {}) {
  const {
    delayEnter: e = 0,
    delayLeave: l = 0,
    window: a = He
  } = o, n = H(!1);
  let r;
  const u = (i) => {
    const d = i ? e : l;
    r && (clearTimeout(r), r = void 0), d ? r = setTimeout(() => n.value = i, d) : n.value = i;
  };
  return a && ($e(t, "mouseenter", () => u(!0), { passive: !0 }), $e(t, "mouseleave", () => u(!1), { passive: !0 })), n;
}
function Vr(t, o, e = {}) {
  const {
    root: l,
    rootMargin: a = "0px",
    threshold: n = 0.1,
    window: r = He,
    immediate: u = !0
  } = e, i = rl(() => r && "IntersectionObserver" in r), d = h(() => {
    const m = Ee(t);
    return (Array.isArray(m) ? m : [m]).map(Re).filter(Io);
  });
  let c = Xe;
  const f = H(u), p = i.value ? de(
    () => [d.value, Re(l), f.value],
    ([m, B]) => {
      if (c(), !f.value || !m.length)
        return;
      const k = new IntersectionObserver(
        o,
        {
          root: Re(B),
          rootMargin: a,
          threshold: n
        }
      );
      m.forEach((_) => _ && k.observe(_)), c = () => {
        k.disconnect(), c = Xe;
      };
    },
    { immediate: u, flush: "post" }
  ) : Xe, v = () => {
    c(), p(), f.value = !1;
  };
  return rt(v), {
    isSupported: i,
    isActive: f,
    pause() {
      c(), f.value = !1;
    },
    resume() {
      f.value = !0;
    },
    stop: v
  };
}
function ze(t, o = {}) {
  const { initialValue: e = !1, focusVisible: l = !1, preventScroll: a = !1 } = o, n = H(!1), r = h(() => Re(t));
  $e(r, "focus", (i) => {
    var d, c;
    (!l || (c = (d = i.target).matches) != null && c.call(d, ":focus-visible")) && (n.value = !0);
  }), $e(r, "blur", () => n.value = !1);
  const u = h({
    get: () => n.value,
    set(i) {
      var d, c;
      !i && n.value ? (d = r.value) == null || d.blur() : i && !n.value && ((c = r.value) == null || c.focus({ preventScroll: a }));
    }
  });
  return de(
    r,
    () => {
      u.value = e;
    },
    { immediate: !0, flush: "post" }
  ), { focused: u };
}
function Na(t) {
  return typeof Window < "u" && t instanceof Window ? t.document.documentElement : typeof Document < "u" && t instanceof Document ? t.documentElement : t;
}
const Nr = {
  page: (t) => [t.pageX, t.pageY],
  client: (t) => [t.clientX, t.clientY],
  screen: (t) => [t.screenX, t.screenY],
  movement: (t) => t instanceof Touch ? null : [t.movementX, t.movementY]
};
function Or(t = {}) {
  const {
    type: o = "page",
    touch: e = !0,
    resetOnTouchEnds: l = !1,
    initialValue: a = { x: 0, y: 0 },
    window: n = He,
    target: r = n,
    scroll: u = !0,
    eventFilter: i
  } = t;
  let d = null;
  const c = H(a.x), f = H(a.y), p = H(null), v = typeof o == "function" ? o : Nr[o], m = (y) => {
    const $ = v(y);
    d = y, $ && ([c.value, f.value] = $, p.value = "mouse");
  }, B = (y) => {
    if (y.touches.length > 0) {
      const $ = v(y.touches[0]);
      $ && ([c.value, f.value] = $, p.value = "touch");
    }
  }, k = () => {
    if (!d || !n)
      return;
    const y = v(d);
    d instanceof MouseEvent && y && (c.value = y[0] + n.scrollX, f.value = y[1] + n.scrollY);
  }, _ = () => {
    c.value = a.x, f.value = a.y;
  }, C = i ? (y) => i(() => m(y), {}) : (y) => m(y), g = i ? (y) => i(() => B(y), {}) : (y) => B(y), x = i ? () => i(() => k(), {}) : () => k();
  if (r) {
    const y = { passive: !0 };
    $e(r, ["mousemove", "dragover"], C, y), e && o !== "movement" && ($e(r, ["touchstart", "touchmove"], g, y), l && $e(r, "touchend", _, y)), u && o === "page" && $e(n, "scroll", x, { passive: !0 });
  }
  return {
    x: c,
    y: f,
    sourceType: p
  };
}
function El(t, o = {}) {
  const {
    handleOutside: e = !0,
    window: l = He
  } = o, a = o.type || "page", { x: n, y: r, sourceType: u } = Or(o), i = H(t ?? (l == null ? void 0 : l.document.body)), d = H(0), c = H(0), f = H(0), p = H(0), v = H(0), m = H(0), B = H(!0);
  let k = () => {
  };
  return l && (k = de(
    [i, n, r],
    () => {
      const _ = Re(i);
      if (!_)
        return;
      const {
        left: C,
        top: g,
        width: x,
        height: y
      } = _.getBoundingClientRect();
      f.value = C + (a === "page" ? l.pageXOffset : 0), p.value = g + (a === "page" ? l.pageYOffset : 0), v.value = y, m.value = x;
      const $ = n.value - f.value, S = r.value - p.value;
      B.value = x === 0 || y === 0 || $ < 0 || S < 0 || $ > x || S > y, (e || !B.value) && (d.value = $, c.value = S);
    },
    { immediate: !0 }
  ), $e(document, "mouseleave", () => {
    B.value = !0;
  })), {
    x: n,
    y: r,
    sourceType: u,
    elementX: d,
    elementY: c,
    elementPositionX: f,
    elementPositionY: p,
    elementHeight: v,
    elementWidth: m,
    isOutside: B,
    stop: k
  };
}
function jo(t) {
  const o = window.getComputedStyle(t);
  if (o.overflowX === "scroll" || o.overflowY === "scroll" || o.overflowX === "auto" && t.clientWidth < t.scrollWidth || o.overflowY === "auto" && t.clientHeight < t.scrollHeight)
    return !0;
  {
    const e = t.parentNode;
    return !e || e.tagName === "BODY" ? !1 : jo(e);
  }
}
function Fr(t) {
  const o = t || window.event, e = o.target;
  return jo(e) ? !1 : o.touches.length > 1 ? !0 : (o.preventDefault && o.preventDefault(), !1);
}
const Oa = /* @__PURE__ */ new WeakMap();
function Pr(t, o = !1) {
  const e = H(o);
  let l = null, a = "";
  de(Ro(t), (u) => {
    const i = Na(Ee(u));
    if (i) {
      const d = i;
      if (Oa.get(d) || Oa.set(d, d.style.overflow), d.style.overflow !== "hidden" && (a = d.style.overflow), d.style.overflow === "hidden")
        return e.value = !0;
      if (e.value)
        return d.style.overflow = "hidden";
    }
  }, {
    immediate: !0
  });
  const n = () => {
    const u = Na(Ee(t));
    !u || e.value || (Ha && (l = $e(
      u,
      "touchmove",
      (i) => {
        Fr(i);
      },
      { passive: !1 }
    )), u.style.overflow = "hidden", e.value = !0);
  }, r = () => {
    const u = Na(Ee(t));
    !u || !e.value || (Ha && (l == null || l()), u.style.overflow = a, Oa.delete(u), e.value = !1);
  };
  return rt(r), h({
    get() {
      return e.value;
    },
    set(u) {
      u ? n() : r();
    }
  });
}
function Ir(t, o = {}) {
  const {
    threshold: e = 50,
    onSwipe: l,
    onSwipeEnd: a,
    onSwipeStart: n,
    passive: r = !0,
    window: u = He
  } = o, i = _l({ x: 0, y: 0 }), d = _l({ x: 0, y: 0 }), c = h(() => i.x - d.x), f = h(() => i.y - d.y), { max: p, abs: v } = Math, m = h(() => p(v(c.value), v(f.value)) >= e), B = H(!1), k = h(() => m.value ? v(c.value) > v(f.value) ? c.value > 0 ? "left" : "right" : f.value > 0 ? "up" : "down" : "none"), _ = (K) => [K.touches[0].clientX, K.touches[0].clientY], C = (K, P) => {
    i.x = K, i.y = P;
  }, g = (K, P) => {
    d.x = K, d.y = P;
  };
  let x;
  const y = Er(u == null ? void 0 : u.document);
  r ? x = y ? { passive: !0 } : { capture: !1 } : x = y ? { passive: !1, capture: !0 } : { capture: !0 };
  const $ = (K) => {
    B.value && (a == null || a(K, k.value)), B.value = !1;
  }, S = [
    $e(t, "touchstart", (K) => {
      if (K.touches.length !== 1)
        return;
      x.capture && !x.passive && K.preventDefault();
      const [P, j] = _(K);
      C(P, j), g(P, j), n == null || n(K);
    }, x),
    $e(t, "touchmove", (K) => {
      if (K.touches.length !== 1)
        return;
      const [P, j] = _(K);
      g(P, j), !B.value && m.value && (B.value = !0), B.value && (l == null || l(K));
    }, x),
    $e(t, ["touchend", "touchcancel"], $, x)
  ];
  return {
    isPassiveEventSupported: y,
    isSwiping: B,
    direction: k,
    coordsStart: i,
    coordsEnd: d,
    lengthX: c,
    lengthY: f,
    stop: () => S.forEach((K) => K())
  };
}
function Er(t) {
  if (!t)
    return !1;
  let o = !1;
  const e = {
    get passive() {
      return o = !0, !1;
    }
  };
  return t.addEventListener("x", Xe, e), t.removeEventListener("x", Xe), o;
}
const Lr = ["id"], Rr = ["id"], zr = ["innerHTML"], Mr = ["innerHTML"], dl = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BPopover",
  props: /* @__PURE__ */ be({
    boundary: { default: "clippingAncestors" },
    boundaryPadding: { default: void 0 },
    click: { type: Boolean, default: !1 },
    closeOnHide: { type: Boolean, default: !1 },
    content: { default: void 0 },
    customClass: { default: "" },
    delay: { default: () => ({ show: 100, hide: 300 }) },
    floatingMiddleware: { default: void 0 },
    html: { type: Boolean, default: !1 },
    id: { default: void 0 },
    inline: { type: Boolean, default: !1 },
    manual: { type: Boolean, default: !1 },
    modelValue: { type: Boolean },
    noAutoClose: { type: Boolean, default: !1 },
    noFade: { type: Boolean, default: !1 },
    noFlip: { type: Boolean, default: !1 },
    noHide: { type: Boolean, default: !1 },
    noShift: { type: Boolean, default: !1 },
    noSize: { type: Boolean, default: !1 },
    noninteractive: { type: Boolean, default: !1 },
    offset: { default: null },
    placement: { default: "top" },
    persistent: { type: Boolean, default: !1 },
    realtime: { type: Boolean, default: !1 },
    reference: { default: null },
    strategy: { default: "absolute" },
    target: { default: null },
    title: { default: void 0 },
    tooltip: { type: Boolean, default: !1 },
    variant: { default: null },
    teleportDisabled: { default: !1 },
    teleportTo: { default: void 0 }
  }, {
    modelValue: { type: Boolean, default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["hidden", "hide", "hide-prevented", "show", "show-prevented", "shown"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BPopover"), n = e, r = we(t, "modelValue"), u = H(r.value), i = H(r.value);
    Et(() => {
      r.value = u.value;
    }), de(r, (G) => {
      G !== u.value && (G ? D() : M(new Event("update:modelValue")));
    });
    const d = Ce(() => a.id, "popover"), c = H(!1), f = H(null), p = H(null), v = H(null), m = H(null), B = H(null), k = h(
      () => a.title ? Ot(a.title, Nt) : ""
    ), _ = h(
      () => a.content ? Ot(a.content, Nt) : ""
    ), C = T(() => a.placement.startsWith("auto")), g = Be(() => a.offset ?? NaN), x = h(
      () => cl(a.boundary) ? a.boundary : void 0
    ), y = h(
      () => qo(a.boundary) ? a.boundary : void 0
    ), $ = H({}), S = h(() => {
      if (a.floatingMiddleware !== void 0)
        return a.floatingMiddleware;
      const G = a.offset !== null ? g.value : a.tooltip ? 6 : 8, se = [Bo(G)];
      return a.noFlip === !1 && !C.value && se.push(
        go({
          boundary: x.value,
          rootBoundary: y.value,
          padding: a.boundaryPadding
        })
      ), C.value && se.push(
        Hs({
          alignment: a.placement.split("-")[1] || void 0,
          boundary: x.value,
          rootBoundary: y.value,
          padding: a.boundaryPadding
        })
      ), a.noShift === !1 && se.push(
        _o({
          boundary: x.value,
          rootBoundary: y.value,
          padding: a.boundaryPadding
        })
      ), a.noHide === !1 && se.push(
        Ds({
          boundary: x.value,
          rootBoundary: y.value,
          padding: a.boundaryPadding
        })
      ), a.inline === !0 && se.push(qs()), se.push(Qs({ element: v, padding: 10 })), a.noSize === !1 && se.push(
        wo({
          boundary: x.value,
          rootBoundary: y.value,
          padding: a.boundaryPadding,
          apply({ availableWidth: ie, availableHeight: te }) {
            $.value = {
              maxHeight: te ? `${te}px` : void 0,
              maxWidth: ie ? `${ie}px` : void 0
            };
          }
        })
      ), se;
    }), Y = T(
      () => C.value ? void 0 : a.placement
    ), { floatingStyles: K, middlewareData: P, placement: j, update: N } = Po(p, f, {
      placement: Y,
      middleware: S,
      strategy: T(() => a.strategy),
      whileElementsMounted: (...G) => No(...G, { animationFrame: a.realtime })
    }), O = H({ position: "absolute" });
    de(P, (G) => {
      var se;
      if (a.noHide === !1 && (c.value = !!((se = G.hide) != null && se.referenceHidden), a.closeOnHide && c.value && !a.noAutoClose && !a.manual && M(new Event("closeOnHide"))), G.arrow) {
        const { x: ie, y: te } = G.arrow;
        O.value = {
          position: "absolute",
          top: te ? `${te}px` : "",
          left: ie ? `${ie}px` : ""
        };
      }
    });
    const z = h(() => {
      const G = a.tooltip ? "tooltip" : "popover";
      return [
        G,
        `b-${G}`,
        {
          [`b-${G}-${a.variant}`]: a.variant !== null,
          show: u.value && !c.value,
          "pe-none": !u.value,
          fade: !a.noFade,
          "d-none": !u.value && a.noFade,
          [`${a.customClass}`]: a.customClass !== void 0,
          [`bs-${G}-${Dr(j.value)}`]: j.value !== void 0
        }
      ];
    }), { isOutside: w } = El(f), { isOutside: A } = El(m), E = (G) => {
      const se = G ?? new Event("click");
      u.value ? M(se) : D();
    }, I = (G, se = {}) => new wt(G, {
      cancelable: !1,
      target: f.value || null,
      relatedTarget: null,
      trigger: null,
      ...se,
      componentId: d.value
    });
    let X;
    const D = () => {
      const G = I("show", { cancelable: !0 });
      if (n("show", G), G.defaultPrevented) {
        n("show-prevented");
        return;
      }
      i.value = !0, Oe(() => {
        var se;
        N(), X = setTimeout(
          () => {
            N(), u.value = !0, Oe(() => {
              n("shown", I("shown"));
            });
          },
          typeof a.delay == "number" ? a.delay : ((se = a.delay) == null ? void 0 : se.show) || 0
        );
      });
    }, M = (G) => {
      var te;
      const se = I("hide", { cancelable: !0 });
      if (n("hide", se), se.defaultPrevented) {
        n("hide-prevented");
        return;
      }
      X && (clearTimeout(X), X = void 0);
      const ie = typeof a.delay == "number" ? a.delay : ((te = a.delay) == null ? void 0 : te.hide) || 0;
      setTimeout(() => {
        var ve, ue;
        (G == null ? void 0 : G.type) === "click" || (G == null ? void 0 : G.type) === "forceHide" || (G == null ? void 0 : G.type) === "closeOnHide" || (G == null ? void 0 : G.type) === "update:modelValue" && a.manual || !a.noninteractive && w.value && A.value && !((ve = f.value) != null && ve.contains(document == null ? void 0 : document.activeElement)) && !((ue = m.value) != null && ue.contains(document == null ? void 0 : document.activeElement)) || a.noninteractive && A.value ? (u.value = !1, Oe(() => {
          setTimeout(
            () => {
              i.value = !1;
            },
            f.value ? La(f.value) : 150
          ), n("hidden", I("hidden"));
        })) : setTimeout(
          () => {
            M(G);
          },
          ie < 50 ? 50 : ie
        );
      }, ie);
    };
    o({
      hide: M,
      show: D,
      toggle: E
    });
    const Q = () => {
      var G;
      if (a.target) {
        const se = mt(a.target);
        se ? m.value = se : console.warn("Target element not found", a.target);
      } else
        m.value = (G = B.value) == null ? void 0 : G.nextElementSibling;
      if (a.reference) {
        const se = mt(a.reference);
        se ? p.value = se : console.warn("Reference element not found", a.reference);
      } else
        p.value = m.value;
      if (!(!m.value || a.manual) && al) {
        if (m.value.addEventListener("forceHide", M), a.click) {
          m.value.addEventListener("click", E);
          return;
        }
        m.value.addEventListener("pointerenter", D), m.value.addEventListener("pointerleave", M), m.value.addEventListener("focus", D), m.value.addEventListener("blur", M);
      }
    }, Z = () => {
      m.value && (m.value.removeEventListener("forceHide", M), m.value.removeEventListener("click", E), m.value.removeEventListener("pointerenter", D), m.value.removeEventListener("pointerleave", M), m.value.removeEventListener("focus", D), m.value.removeEventListener("blur", M));
    };
    return Ho(
      f,
      () => {
        u.value && a.click && !a.noAutoClose && !a.manual && M(new Event("clickOutside"));
      },
      { ignore: [m] }
    ), de([() => a.click, () => a.target, () => a.reference], () => {
      Z(), Q();
    }), De(Q), Qa(Z), (G, se) => (b(), F(pe, null, [
      ae("span", {
        id: s(d) + "_placeholder",
        ref_key: "placeholder",
        ref: B
      }, null, 8, Lr),
      V(G.$slots, "target", {
        show: D,
        hide: M,
        toggle: E,
        showState: u.value
      }),
      (b(), L(_t, {
        to: s(a).teleportTo,
        disabled: !s(a).teleportTo || s(a).teleportDisabled
      }, [
        i.value || s(a).persistent ? (b(), F("div", J({
          key: 0,
          id: s(d)
        }, G.$attrs, {
          ref_key: "element",
          ref: f,
          class: z.value,
          role: "tooltip",
          tabindex: "-1",
          style: s(K)
        }), [
          ae("div", {
            ref_key: "arrow",
            ref: v,
            class: W(`${s(a).tooltip ? "tooltip" : "popover"}-arrow`),
            style: Me(O.value),
            "data-popper-arrow": ""
          }, null, 6),
          ae("div", {
            class: "overflow-auto",
            style: Me($.value)
          }, [
            s(a).title || G.$slots.title ? (b(), F(pe, { key: 0 }, [
              s(a).html ? (b(), F("div", {
                key: 1,
                class: W(["position-sticky top-0", s(a).tooltip ? "tooltip-inner" : "popover-header"]),
                innerHTML: k.value
              }, null, 10, zr)) : (b(), F("div", {
                key: 0,
                class: W(["position-sticky top-0", s(a).tooltip ? "tooltip-inner" : "popover-header"])
              }, [
                V(G.$slots, "title", {}, () => [
                  ce(oe(s(a).title), 1)
                ])
              ], 2))
            ], 64)) : ne("", !0),
            s(a).tooltip && !G.$slots.title && !s(a).title || !s(a).tooltip ? (b(), F(pe, { key: 1 }, [
              s(a).html ? (b(), F("div", {
                key: 1,
                class: W(s(a).tooltip ? "tooltip-inner" : "popover-body"),
                innerHTML: _.value
              }, null, 10, Mr)) : (b(), F("div", {
                key: 0,
                class: W(s(a).tooltip ? "tooltip-inner" : "popover-body")
              }, [
                V(G.$slots, "default", {}, () => [
                  ce(oe(s(a).content), 1)
                ])
              ], 2))
            ], 64)) : ne("", !0)
          ], 4)
        ], 16, Rr)) : ne("", !0)
      ], 8, ["to", "disabled"]))
    ], 64));
  }
}), Hr = ({
  top: t,
  end: o,
  start: e,
  alignCenter: l,
  alignEnd: a
}) => {
  const n = t ? "top" : e ? "left" : o ? "right" : "bottom", r = a ? "end" : l ? null : "start";
  return `${n}${r ? `-${r}` : ""}`;
}, Dr = (t) => {
  const [o] = t.split("-");
  switch (o) {
    case "left":
      return "start";
    case "right":
      return "end";
    default:
      return o;
  }
}, Ut = (t) => typeof t != "object" || t.active !== !1, pa = (t, o) => {
  if (!Ut(t))
    return {};
  const l = typeof t > "u" || typeof t == "object" && !t.title && !t.content, a = o.getAttribute("title") || o.getAttribute("data-original-title");
  return l ? a ? (o.removeAttribute("title"), o.setAttribute("data-original-title", a), {
    content: Ot(a, Nt)
  }) : {} : typeof t == "string" ? {
    content: Ot(t, Nt)
  } : {
    title: t != null && t.title ? Ot(t == null ? void 0 : t.title, Nt) : void 0,
    content: t != null && t.content ? Ot(t == null ? void 0 : t.content, Nt) : void 0
  };
}, ma = (t, o) => ({
  target: o,
  modelValue: t.modifiers.show,
  inline: t.modifiers.inline,
  click: t.modifiers.click,
  realtime: t.modifiers.realtime,
  persistent: t.modifiers.persistent,
  placement: t.modifiers.left ? "left" : t.modifiers.right ? "right" : t.modifiers.bottom ? "bottom" : t.modifiers.top ? "top" : void 0,
  html: !0,
  ...typeof t.value == "object" ? t.value : {},
  ...t.modifiers.interactive ? { noninteractive: !1 } : {},
  title: null,
  content: null
}), ba = (t, o, e) => {
  var a;
  const l = document.createElement("span");
  o.modifiers.body ? document.body.appendChild(l) : o.modifiers.child ? t.appendChild(l) : (a = t.parentNode) == null || a.insertBefore(l, t.nextSibling), fo(Ie(dl, e), l), t.$__element = l;
}, ya = (t) => {
  const o = t.$__element;
  o && fo(null, o), setTimeout(() => {
    o == null || o.remove();
  }, 0), delete t.$__element;
}, cl = (t) => t === "clippingAncestors" || t instanceof Element || Array.isArray(t), qo = (t) => !cl(t), qa = (t, o, e) => {
  const l = Ne(t, o);
  return e && typeof e == "function" ? e(l, o, t) : l;
}, la = (t, o, e, l = e) => o.reduce((a, n) => (t[n] && a.push(
  [l, n.replace(e, ""), t[n]].filter((r) => r && typeof r != "boolean").join("-").toLowerCase()
), a), []), mt = (t) => {
  if (t)
    return typeof t == "string" ? typeof document > "u" ? void 0 : document.getElementById(t) ?? document.querySelector(t) ?? void 0 : t.$el ?? t;
}, jr = (t, o) => ((t == null ? void 0 : t()) ?? []).reduce((e, l) => (typeof l.type == "symbol" ? e = e.concat(l.children) : e.push(l), e), []).filter((e) => {
  var l;
  return ((l = e.type) == null ? void 0 : l.__name) === o;
}), Go = /_/g, Wo = /([a-z])([A-Z])/g, qr = /^[0-9]*\.?[0-9]+$/, Gr = /(\s|^)(\w)/g, Wr = /(\s|^)(\w)/, oa = /\s+/, Ur = /^#/, Kr = /^#[A-Za-z]+[\w\-:.]*$/, Xr = /[-/\\^$*+?.()|[\]{}]/g, Yr = /[\s\uFEFF\xA0]+/g, na = (t) => t.replace(Go, " ").replace(Wo, (o, e, l) => `${e} ${l}`).replace(Wr, (o, e, l) => e + l.toUpperCase()), Ll = (t) => t.replace(Go, " ").replace(Wo, (o, e, l) => `${e} ${l}`).replace(Gr, (o, e, l) => e + l.toUpperCase()), Zr = (t) => {
  const o = t.trim();
  return o.charAt(0).toUpperCase() + o.slice(1);
}, Jr = (t) => t.replace(Xr, "\\$&"), Qr = (t) => Jr(t).replace(Yr, "\\s"), sa = (t) => typeof t == "string" ? Ll(t) : t.label !== void 0 ? t.label : typeof t.key == "string" ? Ll(t.key) : t.key, ei = (t) => !!(t.href || t.to), Uo = Symbol("bvn::carousel"), Ko = Symbol("bvn::tabs"), Xo = Symbol("bvn::progress"), Yo = Symbol("bvn::listGroup"), Zo = Symbol("bvn::avatarGroup"), Jo = Symbol("bvn::accordion"), Qo = Symbol("bvn::checkboxGroup"), en = Symbol("bvn::radioGroup"), fl = Symbol("bvn::collapse"), tn = Symbol("bvn::collapse"), vl = Symbol("bvn::navbar"), an = Symbol("bvn::toastPlugin"), ln = Symbol("bvn::rtlPlugin"), on = Symbol("bvn::breadcrumbPlugin"), nn = Symbol("bvn::modalControllerPlugin"), sn = Symbol("bvn::modalManagerPlugin"), rn = Symbol("bvn::idPluginKey"), ra = Symbol("bvn::defaults"), un = Symbol("bvn::inputGroup"), dn = (t, o) => {
  if (t === null)
    return;
  let e = t;
  if (o.trim && (e = e.toString().trim()), o.number && typeof e == "string" && e !== "") {
    const l = Number.parseFloat(e);
    e = Number.isNaN(l) ? e : l;
  }
  return e;
}, Mt = (t, o = {}, e = {}) => {
  const l = [t];
  let a;
  for (let n = 0; n < l.length && !a; n++) {
    const r = l[n];
    a = e[r];
  }
  return a && typeof a == "function" ? a(o) : a;
}, xa = (t, o) => Object.keys(t).filter((e) => !o.map((l) => l.toString()).includes(e)).reduce((e, l) => ({ ...e, [l]: t[l] }), {}), pl = (t, o) => [...o].reduce(
  (e, l) => (e[l] = t[l], e),
  {}
), Ne = (t, o, e) => {
  const l = o.split(/[.[\]]/g);
  let a = t;
  for (const n of l) {
    if (a === null || a === void 0)
      return e;
    n.trim() !== "" && (a = a[n]);
  }
  return a === void 0 ? e : a;
}, ti = (t, o, e) => {
  const l = (i) => {
    if (((f) => f == null || typeof f != "object" && typeof f != "function")(i))
      return i;
    if (typeof i == "function")
      return i.bind({});
    const c = new i.constructor();
    return Object.getOwnPropertyNames(i).forEach((f) => {
      c[f] = i[f];
    }), c;
  }, a = (i, d) => {
    const c = d === void 0 ? 0 : d;
    if (i == null)
      return c;
    const f = Number.parseInt(i);
    return Number.isNaN(f) ? c : f;
  };
  if (!t)
    return {};
  if (!o || e === void 0)
    return t;
  const n = o.split(/[.[\]]/g).filter((i) => !!i.trim()), r = (i) => {
    if (n.length > 1) {
      const d = n.shift(), c = a(n[0], null) !== null;
      i[d] = i[d] === void 0 ? c ? [] : {} : i[d], r(i[d]);
    } else
      i[n[0]] = e;
  }, u = l(t);
  return r(u), u;
}, Rl = (t, o) => {
  const { all: e, ...l } = t, a = {};
  e && o.forEach((r) => {
    a[r] = e;
  });
  const n = { ...a, ...l };
  return Object.entries(n).filter(([r, u]) => !!u && o.includes(r)).map(([r]) => r);
}, zl = (t, o) => o + (t ? Zr(t) : ""), ai = {
  "top-start": "top-0 start-0",
  "top-center": "top-0 start-50 translate-middle-x",
  "top-end": "top-0 end-0",
  "middle-start": "top-50 start-0 translate-middle-y",
  "middle-center": "top-50 start-50 translate-middle",
  "middle-end": "top-50 end-0 translate-middle-y",
  "bottom-start": "bottom-0 start-0",
  "bottom-center": "bottom-0 start-50 translate-middle-x",
  "bottom-end": "bottom-0 end-0"
}, Ct = (t, o) => {
  const e = T(o), l = T(t), a = T(() => ei(l.value)), n = h(
    () => a.value ? pl(
      l.value,
      e.value ?? [
        "active",
        "activeClass",
        "append",
        "href",
        "rel",
        "replace",
        "routerComponentName",
        "target",
        "to",
        "variant",
        "opacity",
        "opacityHover",
        "underlineVariant",
        "underlineOffset",
        "underlineOffsetHover",
        "underlineOpacity",
        "underlineOpacityHover"
      ]
    ) : {}
  );
  return { computedLink: a, computedLinkProps: n };
}, cn = () => ({ ...Ve(on) }), li = (t = {}) => {
  const o = t.persist ?? !1, e = "data-bs-theme", l = "body";
  return Ar({
    attribute: e,
    selector: l,
    storageKey: o === !0 ? `bv-color-${t.attribute ?? e}-${t.selector ?? l}` : null,
    ...t
  });
}, st = (t) => h(() => {
  let o = xe(t);
  return o = {
    ...o,
    variant: o.variant ?? null,
    bgVariant: o.bgVariant ?? null,
    textVariant: o.textVariant ?? null
  }, {
    [`text-bg-${o.variant}`]: o.variant !== null,
    [`text-${o.textVariant}`]: o.textVariant !== null && o.variant === null,
    [`bg-${o.bgVariant}`]: o.bgVariant !== null && o.variant === null
  };
}), oi = (t) => h(() => {
  const o = xe(t);
  return {
    container: o === !0,
    [`container-${o}`]: typeof o == "string"
  };
}), fn = (t, o = H(1e3), e = {}) => {
  const l = Fe(T(t)), a = Fe(T(o)), n = H(!1), r = H(0), u = T(() => Math.ceil(l.value / a.value)), i = T(
    () => f.value || n.value ? Math.round(l.value - r.value * a.value) : 0
  ), { pause: d, resume: c, isActive: f } = Mo(
    () => {
      r.value = r.value + 1;
    },
    o,
    e
  ), p = () => {
    n.value = !1, r.value = 0, c();
  }, v = () => {
    n.value = !1, r.value = u.value;
  };
  Et(() => {
    r.value > u.value && (r.value = u.value), r.value === u.value && d();
  }), de([a, l], () => {
    v(), p();
  });
  const m = () => {
    f.value !== !1 && (n.value = !0, d());
  }, B = () => {
    r.value !== u.value && (n.value = !1, c());
  };
  return {
    isActive: Fe(f),
    isPaused: Fe(n),
    restart: p,
    stop: v,
    pause: m,
    resume: B,
    value: i
  };
};
function ni(t, o = vn("injectSelf")) {
  const { provides: e } = o;
  if (e && t in e)
    return e[t];
}
function vn(t, o) {
  const e = Bt();
  if (!e)
    throw new Error(`[Bvn] ${t} ${o || "must be called from inside a setup function"}`);
  return e;
}
const si = (t = "") => t.replace(/[^a-z]/gi, "-").replace(/\B([A-Z])/g, "-$1").toLowerCase(), Ml = (t) => t !== null && typeof t == "object" && !Array.isArray(t);
function pn(t = {}, o = {}, e) {
  const l = {};
  for (const a in t)
    l[a] = t[a];
  for (const a in o) {
    const n = t[a], r = o[a];
    if (Ml(n) && Ml(r)) {
      l[a] = pn(n, r, e);
      continue;
    }
    if (Array.isArray(n) && Array.isArray(r) && e) {
      l[a] = e(n, r);
      continue;
    }
    l[a] = r;
  }
  return l;
}
const ri = (t, o) => {
  var e, l;
  return typeof ((e = t.props) == null ? void 0 : e[o]) < "u" || typeof ((l = t.props) == null ? void 0 : l[si(o)]) < "u";
};
function ii(t = {}, o) {
  const e = Ve(ra, H({})), l = vn("useDefaults");
  if (o = o ?? l.type.name ?? l.type.__name, !o)
    throw new Error("[Bvn] Could not determine component name");
  const a = h(() => {
    var i;
    return (i = e.value) == null ? void 0 : i[t._as ?? o];
  }), n = new Proxy(t, {
    get(i, d) {
      var f, p, v, m;
      const c = Reflect.get(i, d);
      return d === "class" || d === "style" ? [(f = a.value) == null ? void 0 : f[d], c].filter((B) => B != null) : typeof d == "string" && !ri(l.vnode, d) ? ((p = a.value) == null ? void 0 : p[d]) ?? ((m = (v = e.value) == null ? void 0 : v.global) == null ? void 0 : m[d]) ?? c : c;
    }
  }), r = Ca();
  Et(() => {
    if (a.value) {
      const i = Object.entries(a.value).filter(
        ([d]) => d.startsWith(d[0].toUpperCase())
      );
      r.value = i.length ? Object.fromEntries(i) : void 0;
    } else
      r.value = void 0;
  });
  function u() {
    const i = ni(ra, l);
    We(
      ra,
      h(
        () => r.value ? pn((i == null ? void 0 : i.value) ?? {}, r.value) : i == null ? void 0 : i.value
      )
    );
  }
  return { props: n, provideSubDefaults: u };
}
function U(t, o) {
  const { props: e, provideSubDefaults: l } = ii(t, o);
  return l(), e;
}
const kt = (t) => h(() => {
  const o = xe(t);
  return o === !0 ? "is-valid" : o === !1 ? "is-invalid" : null;
}), mn = (t) => h(() => {
  const o = xe(t);
  return {
    "form-check": o.plain === !1 && o.button === !1 && o.hasDefaultSlot,
    "form-check-reverse": o.reverse === !0,
    "form-check-inline": o.inline === !0,
    "form-switch": o.switch === !0,
    [`form-control-${o.size}`]: o.size !== void 0 && o.size !== "md" && o.button === !1
  };
}), bn = (t) => {
  const o = T(t), e = kt(() => o.value.state ?? null);
  return h(() => [
    e.value,
    {
      "form-check-input": o.value.plain === !1 && o.value.button === !1,
      "btn-check": o.value.button === !0
    }
  ]);
}, yn = (t) => h(() => {
  const o = xe(t);
  return {
    "form-check-label": o.plain === !1 && o.button === !1,
    btn: o.button === !0,
    [`btn-${o.buttonVariant}`]: o.button === !0 && o.buttonVariant !== void 0 && o.buttonVariant !== null,
    [`btn-${o.size}`]: o.button && o.size && o.size !== "md"
  };
}), gn = (t) => {
  const o = T(t), e = ka(
    () => o.value.ariaInvalid,
    () => o.value.state
  );
  return h(() => ({
    "aria-invalid": e.value,
    "aria-required": o.value.required === !0 ? !0 : void 0
  }));
}, hn = (t) => h(() => {
  const o = xe(t);
  return {
    "was-validated": o.validated === !0,
    "btn-group": o.buttons === !0 && o.stacked === !1,
    "btn-group-vertical": o.stacked === !0 && o.buttons === !0,
    [`btn-group-${o.size}`]: o.size !== void 0
  };
}), Ce = (t, o) => h(() => xe(t) || ui(o)), ui = (t = "") => `__BVID__${Ve(rn, () => Math.random().toString().slice(2, 8))()}___BV_${t}__`, Bn = (t, o, e) => {
  const l = H(null), a = Ce(() => t.id, "input"), n = Be(() => t.debounce ?? 0), r = Be(() => t.debounceMaxWait ?? NaN), u = br(
    (_) => {
      o.value = _;
    },
    () => e.lazy === !0 ? 0 : n.value,
    { maxWait: () => e.lazy === !0 ? NaN : r.value }
  ), i = (_, C = !1) => {
    e.lazy === !0 && C === !1 || u(_);
  }, { focused: d } = ze(l, {
    initialValue: t.autofocus
  }), c = (_, C, g = !1) => t.formatter !== void 0 && (!t.lazyFormatter || g) ? t.formatter(_, C) : _;
  De(() => {
    var _;
    l.value && (l.value.value = ((_ = o.value) == null ? void 0 : _.toString()) ?? "");
  }), Bs(() => {
    Oe(() => {
      t.autofocus && (d.value = !0);
    });
  });
  const f = ka(
    () => t.ariaInvalid,
    () => t.state
  );
  return {
    input: l,
    computedId: a,
    computedAriaInvalid: f,
    onInput: (_) => {
      const { value: C } = _.target, g = c(C, _);
      if (_.defaultPrevented) {
        _.preventDefault();
        return;
      }
      i(g);
    },
    onChange: (_) => {
      const { value: C } = _.target, g = c(C, _);
      if (_.defaultPrevented) {
        _.preventDefault();
        return;
      }
      const x = g;
      o.value !== x && i(g, !0);
    },
    onBlur: (_) => {
      if (!e.lazy && !t.lazyFormatter)
        return;
      const { value: C } = _.target, g = c(C, _, !0), x = g;
      o.value !== x && i(g, !0);
    },
    focus: () => {
      t.disabled || (d.value = !0);
    },
    blur: () => {
      t.disabled || (d.value = !1);
    }
  };
}, ml = (t, o) => {
  const e = Fe(T(o)), l = Fe(T(t)), a = (i) => typeof i == "object" && i !== null && "label" in i, n = (i) => {
    if (typeof i == "string")
      return { value: i, text: i };
    if (typeof i == "number")
      return { value: i, text: `${i}` };
    if (i instanceof Date)
      return { value: i, text: i.toLocaleString() };
    const d = Ne(i, e.value.valueField), c = Ne(i, e.value.textField), f = Ne(i, e.value.htmlField), p = Ne(i, e.value.disabledField), v = e.value.optionsField ? Ne(i, e.value.optionsField) : void 0;
    return v !== void 0 ? {
      label: Ne(i, e.value.labelField) || c,
      options: v
    } : {
      value: d,
      text: c,
      html: f,
      disabled: p
    };
  }, r = (i) => i.map((d) => n(d));
  return { normalizedOptions: h(() => r(l.value)), isComplex: a };
}, Fa = "modal-open", bl = () => {
  const t = Ve(sn), o = (l) => {
    t == null || t.removeStack(l), t == null || t.removeRegistry(l);
  }, e = il("updateHTMLAttrs", (l, a, n) => {
    const r = typeof l == "string" ? window == null ? void 0 : window.document.querySelector(l) : Re(l);
    r && (a === "class" ? r.classList.toggle(Fa, n === Fa) : r.setAttribute(a, n));
  });
  return rt(() => {
    e("body", "class", "");
  }), de(
    () => t == null ? void 0 : t.countStack.value,
    (l) => {
      l !== void 0 && e("body", "class", l > 0 ? Fa : "");
    }
  ), {
    ...t,
    dispose: o
  };
}, di = (t, o) => {
  const { pushRegistry: e, pushStack: l, removeStack: a, stack: n, dispose: r, countStack: u } = bl(), i = Bt();
  if (!i || i.type.__name !== "BModal")
    throw new Error("useModalManager must only use in BModal component");
  e == null || e(i), rt(() => {
    r(i);
  });
  const d = (c, f) => {
    c ? l == null || l(i) : f && !c && (a == null || a(i));
  };
  return d(o, o), de(t, d), {
    activePosition: h(
      () => n == null ? void 0 : n.value.findIndex((c) => {
        var f, p;
        return ((f = c.exposed) == null ? void 0 : f.id) === ((p = i.exposed) == null ? void 0 : p.id);
      })
    ),
    activeModalCount: u,
    stackWithoutSelf: h(
      () => (n == null ? void 0 : n.value.filter((c) => {
        var f, p;
        return ((f = c.exposed) == null ? void 0 : f.id) !== ((p = i.exposed) == null ? void 0 : p.id);
      })) ?? []
    )
  };
}, ci = (t = void 0) => {
  const { registry: o } = bl(), e = Bt(), l = (r) => r.parent ? r.parent.type.__name === "BModal" ? r.parent : l(r.parent) : null, a = h(() => {
    const r = xe(t);
    return r ? (o == null ? void 0 : o.value.find((u) => {
      var i;
      return ((i = u.exposed) == null ? void 0 : i.id.value) === r;
    })) || null : e ? l(e) : null;
  }), n = T(() => {
    var r;
    return (r = a.value) == null ? void 0 : r.proxy;
  });
  return {
    show() {
      var r, u;
      (u = (r = a.value) == null ? void 0 : r.exposed) == null || u.show();
    },
    hide(r = "") {
      var u, i;
      (i = (u = a.value) == null ? void 0 : u.exposed) == null || i.hide(r);
    },
    modal: n
  };
}, _n = () => {
  const { lastStack: t, stack: o } = bl();
  return {
    ...Ve(nn),
    hide: (n = "") => {
      var r;
      t != null && t.value && ((r = t == null ? void 0 : t.value.exposed) == null || r.hide(n));
    },
    hideAll: (n = "") => {
      o == null || o.value.forEach((r) => {
        var u;
        (u = r.exposed) == null || u.hide(n);
      });
    }
    // Todo: Supports listening events globally in the future
  };
}, ga = (t, o = "px") => h(() => {
  const e = xe(t), l = xe(o);
  return qr.test(String(e)) ? `${Number(e)}${l}` : e;
}), yl = (t) => {
  const o = (e, l) => {
    const a = l === null ? "" : `-${l}`;
    return e === "circle" ? `rounded${a}-circle` : e === "pill" ? `rounded${a}-pill` : typeof e == "number" || e === "0" || e === "1" || e === "2" || e === "3" || e === "4" || e === "5" ? `rounded${a}-${e}` : e === "none" ? `rounded${a}-0` : e === "sm" ? `rounded${a}-1` : e === "lg" ? `rounded${a}-5` : `rounded${a}`;
  };
  return h(() => {
    const e = xe(t);
    return {
      [`${o(e.rounded, null)}`]: !!e.rounded,
      [`${o(e.roundedTop, "top")}`]: !!e.roundedTop,
      [`${o(e.roundedBottom, "bottom")}`]: !!e.roundedBottom,
      [`${o(e.roundedStart, "start")}`]: !!e.roundedStart,
      [`${o(e.roundedEnd, "end")}`]: !!e.roundedEnd
    };
  });
}, fi = () => {
  const t = Ve(ln);
  return De(() => {
    de(
      [() => t == null ? void 0 : t.isRtl.value, () => t == null ? void 0 : t.locale.value],
      ([o, e]) => {
        const l = document.documentElement;
        l.setAttribute("dir", o ?? !1 ? "rtl" : "ltr"), l.setAttribute("lang", e ?? "");
      },
      { immediate: !0 }
    );
  }), { ...t };
}, wn = (t, o) => {
  const e = Fe(T(t)), l = Fe(T(o)), a = T(() => !l.value);
  De(() => {
    const n = Pr(
      document.body,
      e.value && a.value
    );
    de([e, a], ([r, u]) => {
      n.value = r && u;
    });
  });
}, Cn = (t, o, e = {}) => {
  const l = T(t), a = T(o), n = H(mt(l.value)), r = H(mt(a.value));
  de([l, a], () => {
    C();
  });
  const {
    contentQuery: u = ":scope > [id]",
    targetQuery: i = "[href]",
    manual: d = !1,
    root: c,
    rootMargin: f = "0px 0px -25%",
    threshold: p = [0.1, 0.5, 1],
    watchChanges: v = !0
  } = e, m = H(null), B = H([]), k = H([]);
  Bt() ? De(() => {
    ja(l, n, {
      transform: {
        ltr: (P) => mt(P)
      },
      direction: "ltr",
      immediate: !0
    }), ja(a, r, {
      transform: {
        ltr: (P) => mt(P)
      },
      direction: "ltr",
      immediate: !0
    }), C();
  }) : Oe(() => {
    C();
  });
  const C = () => {
    k.value = n.value ? Array.from(n.value.querySelectorAll(u)) : [], B.value = k.value.map((P) => ({
      id: P.id,
      el: P,
      visible: !1,
      text: P.textContent
    }));
  };
  let g = !0, x = 0;
  const y = h(
    () => n.value && getComputedStyle(n.value).overflowY === "visible" ? null : n.value
  ), $ = Vr(
    k,
    (P) => {
      var O, z, w, A;
      const j = (O = y.value || (document == null ? void 0 : document.documentElement)) == null ? void 0 : O.scrollTop;
      g = j > x, x = j, P.forEach((E) => {
        if (E.isIntersecting) {
          B.value.forEach((I) => {
            I.el === E.target && (I.visible = !0);
          });
          return;
        }
        B.value.forEach((I) => {
          I.el === E.target && (I.visible = !1);
        });
      });
      let N = null;
      g ? N = ((z = [...B.value].reverse().find((E) => E.visible)) == null ? void 0 : z.id) || null : N = ((w = B.value.find((E) => E.visible)) == null ? void 0 : w.id) || null, N !== null && (m.value = N), m.value || (m.value = ((A = B.value[0]) == null ? void 0 : A.id) || null);
    },
    {
      root: c ? mt(c) : y,
      rootMargin: f,
      threshold: p
    }
  );
  de(m, (P) => {
    var z;
    if (d)
      return;
    const j = (z = r.value) == null ? void 0 : z.querySelectorAll(i);
    if (j === void 0)
      return;
    let N = !1, O = null;
    j.forEach((w) => {
      var E, I, X, D, M, Q, Z, G, se, ie, te;
      const A = w.closest(".dropdown");
      if ((E = w.getAttribute("href")) != null && E.includes(`#${P}`)) {
        O = w, w.classList.add("active"), A && ((I = A == null ? void 0 : A.querySelector(".dropdown-toggle")) == null || I.classList.add("active"), N = !0);
        let ve = (X = w.closest(".nav")) == null ? void 0 : X.previousSibling;
        for (; (D = ve == null ? void 0 : ve.classList) != null && D.contains("nav-item"); )
          N = !0, (M = ve.querySelector(".nav-link")) == null || M.classList.add("active"), ve = (Q = ve.closest(".nav")) == null ? void 0 : Q.previousSibling;
      } else if (w.classList.remove("active"), A && !N && ((Z = A == null ? void 0 : A.querySelector(".dropdown-toggle")) == null || Z.classList.remove("active")), !N) {
        let ve = (G = w.closest(".nav")) == null ? void 0 : G.previousSibling;
        for (; (se = ve == null ? void 0 : ve.classList) != null && se.contains("nav-item"); )
          N = !0, ve.querySelector(".nav-link") !== O && ((ie = ve.querySelector(".nav-link")) == null || ie.classList.remove("active")), ve = (te = ve.closest(".nav")) == null ? void 0 : te.previousSibling;
      }
    });
  });
  const S = v ? Do(
    n,
    () => {
      C();
    },
    {
      childList: !0
    }
  ) : { stop: () => {
  } }, Y = (P, j = !1) => {
    var z, w;
    P.preventDefault();
    const N = (w = (z = P.target) == null ? void 0 : z.getAttribute) == null ? void 0 : w.call(z, "href"), O = N ? document == null ? void 0 : document.querySelector(N) : null;
    O && n.value && (n.value.scrollTo ? n.value.scrollTo({ top: O.offsetTop, behavior: j ? "smooth" : "auto" }) : n.value.scrollTop = O.offsetTop);
  }, K = () => {
    $.stop(), S.stop();
  };
  return {
    current: Fe(m),
    list: B,
    content: n,
    target: r,
    scrollIntoView: Y,
    updateList: C,
    cleanup: K
  };
}, kn = () => ({ ...Ve(an) }), vi = (t) => h(() => {
  const o = {
    name: "",
    enterActiveClass: "",
    enterToClass: "",
    leaveActiveClass: "",
    leaveToClass: "showing",
    enterFromClass: "showing",
    leaveFromClass: "",
    css: !0
  }, e = {
    ...o,
    name: "fade",
    enterActiveClass: "fade showing",
    leaveActiveClass: "fade showing"
  };
  return xe(t) ? o : e;
}), $a = /* @__PURE__ */ q({
  __name: "BTransition",
  props: {
    appear: { type: Boolean, default: !1 },
    mode: { default: void 0 },
    noFade: { type: Boolean, default: !1 },
    transProps: { default: void 0 }
  },
  emits: ["after-appear", "after-enter", "after-leave", "appear", "before-appear", "before-enter", "before-leave", "enter", "appear-cancelled", "enter-cancelled", "leave", "leave-cancelled"],
  setup(t, { emit: o }) {
    const l = U(t, "BTransition"), a = o, n = h(() => {
      const u = {
        name: "",
        enterActiveClass: "",
        enterToClass: "",
        leaveActiveClass: "",
        leaveToClass: "showing",
        enterFromClass: "showing",
        leaveFromClass: ""
      }, i = {
        ...u,
        enterActiveClass: "fade showing",
        leaveActiveClass: "fade showing"
      };
      return l.noFade ? u : i;
    }), r = h(() => ({ mode: l.mode, css: !0, ...n.value }));
    return (u, i) => (b(), L(el, J({ ...r.value, ...s(l).transProps }, {
      appear: s(l).appear,
      onAfterAppear: i[0] || (i[0] = (d) => a("after-appear", d)),
      onAfterEnter: i[1] || (i[1] = (d) => a("after-enter", d)),
      onAfterLeave: i[2] || (i[2] = (d) => a("after-leave", d)),
      onAppear: i[3] || (i[3] = (d) => a("appear", d)),
      onBeforeAppear: i[4] || (i[4] = (d) => a("before-appear", d)),
      onBeforeEnter: i[5] || (i[5] = (d) => a("before-enter", d)),
      onBeforeLeave: i[6] || (i[6] = (d) => a("before-leave", d)),
      onEnter: i[7] || (i[7] = (d) => a("enter", d)),
      onAppearCancelled: i[8] || (i[8] = (d) => a("appear-cancelled", d)),
      onEnterCancelled: i[9] || (i[9] = (d) => a("enter-cancelled", d)),
      onLeave: i[10] || (i[10] = (d) => a("leave", d)),
      onLeaveCancelled: i[11] || (i[11] = (d) => a("leave-cancelled", d))
    }), {
      default: R(() => [
        V(u.$slots, "default")
      ]),
      _: 3
    }, 16, ["appear"]));
  }
}), pi = ["type", "disabled", "aria-label"], zt = /* @__PURE__ */ q({
  __name: "BCloseButton",
  props: {
    ariaLabel: { default: "Close" },
    disabled: { type: Boolean, default: !1 },
    type: { default: "button" }
  },
  emits: ["click"],
  setup(t, { emit: o }) {
    const l = U(t, "BCloseButton"), a = o;
    return (n, r) => (b(), F("button", {
      type: s(l).type,
      class: "btn-close",
      disabled: s(l).disabled,
      "aria-label": s(l).ariaLabel,
      onClick: r[0] || (r[0] = (u) => a("click", u))
    }, null, 8, pi));
  }
}), Tn = (t) => h(() => {
  const o = xe(t);
  return {
    [`link-${o.variant}`]: o.variant !== null,
    [`link-opacity-${o.opacity}`]: o.opacity !== void 0,
    [`link-opacity-${o.opacityHover}-hover`]: o.opacityHover !== void 0,
    [`link-underline-${o.underlineVariant}`]: o.underlineVariant !== null,
    [`link-offset-${o.underlineOffset}`]: o.underlineOffset !== void 0,
    [`link-offset-${o.underlineOffsetHover}-hover`]: o.underlineOffsetHover !== void 0,
    "link-underline": o.underlineVariant === null && (o.underlineOpacity !== void 0 || o.underlineOpacityHover !== void 0),
    [`link-underline-opacity-${o.underlineOpacity}`]: o.underlineOpacity !== void 0,
    [`link-underline-opacity-${o.underlineOpacityHover}-hover`]: o.underlineOpacityHover !== void 0,
    "icon-link": o.icon === !0
  };
}), Hl = "active", it = /* @__PURE__ */ q({
  __name: "BLink",
  props: {
    active: { type: Boolean, default: void 0 },
    activeClass: { default: "router-link-active" },
    disabled: { type: Boolean, default: !1 },
    exactActiveClass: { default: "router-link-exact-active" },
    href: { default: void 0 },
    icon: { type: Boolean, default: !1 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: !1 },
    routerComponentName: { default: "router-link" },
    routerTag: { default: "a" },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: null },
    variant: { default: null }
  },
  emits: ["click"],
  setup(t, { emit: o }) {
    const l = U(t, "BLink"), a = o, n = Lt(), r = Ve(fl, null), u = Ve(vl, null), i = Bt(), d = h(() => {
      const k = l.routerComponentName.split("-").map((C) => C.charAt(0).toUpperCase() + C.slice(1)).join("");
      return !((i == null ? void 0 : i.appContext.app.component(k)) !== void 0) || l.disabled || !l.to ? "a" : l.routerComponentName;
    }), c = h(() => {
      const k = "#";
      if (l.href)
        return l.href;
      if (typeof l.to == "string")
        return l.to || k;
      const { to: _ } = l;
      if (_ !== void 0 && "path" in _) {
        const C = _.path || "", g = _.query ? `?${Object.keys(_.query).map((y) => {
          var $;
          return `${y}=${($ = _.query) == null ? void 0 : $[y]}`;
        }).join("=")}` : "", x = !_.hash || _.hash.charAt(0) === "#" ? _.hash || "" : `#${_.hash}`;
        return `${C}${g}${x}` || k;
      }
      return k;
    }), f = Tn(l), p = h(() => [
      f.value,
      {
        "stretched-link": l.stretched === !0
      }
    ]), v = h(() => ({
      class: p.value,
      to: l.to,
      replace: l.replace,
      href: c.value,
      target: l.target,
      rel: l.target === "_blank" ? l.rel ?? "noopener" : void 0,
      tabindex: l.disabled ? "-1" : typeof n.tabindex > "u" ? null : n.tabindex,
      "aria-disabled": l.disabled ? !0 : null
    })), m = h(() => ({
      [Hl]: l.active,
      disabled: l.disabled
    })), B = (k) => {
      var _, C, g;
      if (l.disabled) {
        k.preventDefault(), k.stopImmediatePropagation();
        return;
      }
      (((_ = r == null ? void 0 : r.isNav) == null ? void 0 : _.value) === !0 && u === null || u !== null && ((C = u.autoClose) == null ? void 0 : C.value) === !0) && ((g = r == null ? void 0 : r.hide) == null || g.call(r)), a("click", k);
    };
    return (k, _) => d.value === "router-link" ? (b(), L(fe(d.value), J({ key: 0 }, v.value, { custom: "" }), {
      default: R(({ href: C, navigate: g, isActive: x, isExactActive: y }) => [
        (b(), L(fe(s(l).routerTag), J({
          href: C,
          target: s(l).target,
          class: {
            [Hl]: s(l).active,
            [s(l).activeClass]: x,
            [s(l).exactActiveClass]: y
          }
        }, k.$attrs, {
          onClick: ($) => {
            g($), B($);
          }
        }), {
          default: R(() => [
            V(k.$slots, "default")
          ]),
          _: 2
        }, 1040, ["href", "target", "class", "onClick"]))
      ]),
      _: 3
    }, 16)) : (b(), L(fe(d.value), J({
      key: 1,
      class: m.value
    }, v.value, { onClick: B }), {
      default: R(() => [
        V(k.$slots, "default")
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), mi = ["aria-valuenow", "aria-valuemax"], Sn = /* @__PURE__ */ q({
  __name: "BProgressBar",
  props: {
    animated: { type: Boolean, default: !1 },
    label: { default: void 0 },
    labelHtml: { default: void 0 },
    max: { default: void 0 },
    precision: { default: 0 },
    showProgress: { type: Boolean, default: !1 },
    showValue: { type: Boolean, default: !1 },
    striped: { type: Boolean, default: !1 },
    value: { default: 0 },
    variant: { default: null },
    bgVariant: { default: null },
    textVariant: { default: null }
  },
  setup(t) {
    const e = U(t, "BProgressBar"), l = Ve(Xo, null), a = st(e), n = h(() => [
      a.value,
      {
        "progress-bar-animated": e.animated || (l == null ? void 0 : l.animated.value),
        "progress-bar-striped": e.striped || (l == null ? void 0 : l.striped.value) || e.animated || (l == null ? void 0 : l.animated.value)
      }
    ]), r = Be(() => e.precision), u = Be(() => e.value), i = Be(() => e.max ?? NaN), d = Be(() => (l == null ? void 0 : l.max.value) ?? NaN), c = h(
      () => e.labelHtml !== void 0 ? e.labelHtml : e.showValue || l != null && l.showValue.value ? u.value.toFixed(r.value) : e.showProgress || l != null && l.showProgress.value ? (u.value * 100 / (i.value || 100)).toFixed(r.value) : e.label !== void 0 ? e.label : ""
    ), f = h(
      () => d.value ? `${u.value * 100 / d.value}%` : i.value ? `${u.value * 100 / i.value}%` : typeof e.value == "string" ? e.value : `${e.value}%`
    );
    return (p, v) => (b(), F("div", {
      class: W(["progress-bar", n.value]),
      role: "progressbar",
      "aria-valuenow": s(e).value,
      "aria-valuemin": "0",
      "aria-valuemax": s(e).max,
      style: Me({ width: f.value })
    }, [
      V(p.$slots, "default", {}, () => [
        ce(oe(c.value), 1)
      ])
    ], 14, mi));
  }
}), xn = /* @__PURE__ */ q({
  __name: "BProgress",
  props: {
    height: { default: void 0 },
    animated: { type: Boolean, default: void 0 },
    max: { default: 100 },
    precision: { default: void 0 },
    showProgress: { type: Boolean, default: void 0 },
    showValue: { type: Boolean, default: void 0 },
    striped: { type: Boolean, default: void 0 },
    value: { default: void 0 },
    variant: { default: void 0 },
    bgVariant: { default: void 0 },
    textVariant: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BProgress");
    return We(Xo, {
      animated: T(() => e.animated),
      max: T(() => e.max),
      showProgress: T(() => e.showProgress),
      showValue: T(() => e.showValue),
      striped: T(() => e.striped)
    }), (l, a) => (b(), F("div", {
      class: "progress",
      style: Me({ height: s(e).height })
    }, [
      V(l.$slots, "default", {}, () => [
        ge(Sn, {
          animated: s(e).animated,
          max: s(e).max,
          precision: s(e).precision,
          "show-progress": s(e).showProgress,
          "show-value": s(e).showValue,
          striped: s(e).striped,
          value: s(e).value,
          variant: s(e).variant,
          "text-variant": s(e).textVariant,
          "bg-variant": s(e).bgVariant
        }, null, 8, ["animated", "max", "precision", "show-progress", "show-value", "striped", "value", "variant", "text-variant", "bg-variant"])
      ])
    ], 4));
  }
}), bi = ["id", "role", "aria-live", "aria-atomic"], yi = { class: "me-auto" }, $n = /* @__PURE__ */ q({
  __name: "BToast",
  props: /* @__PURE__ */ be({
    body: { default: void 0 },
    bodyClass: { default: void 0 },
    headerClass: { default: void 0 },
    headerTag: { default: "div" },
    id: { default: void 0 },
    interval: { default: 1e3 },
    isStatus: { type: Boolean, default: !1 },
    modelValue: { type: [Boolean, Number] },
    noCloseButton: { type: Boolean, default: !1 },
    noFade: { type: Boolean, default: !1 },
    noHoverPause: { type: Boolean, default: !1 },
    progressProps: { default: void 0 },
    showOnPause: { type: Boolean, default: !0 },
    solid: { type: Boolean, default: !1 },
    title: { default: void 0 },
    toastClass: { default: void 0 },
    transProps: { default: void 0 },
    variant: { default: void 0 },
    bgVariant: { default: null },
    textVariant: { default: null },
    active: { type: Boolean, default: void 0 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    icon: { type: Boolean, default: void 0 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: void 0 }
  }, {
    modelValue: { type: [Boolean, Number], default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["close", "close-countdown", "hide", "hidden", "show", "shown", "show-prevented", "hide-prevented"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BToast"), n = e, r = H(null), u = ul(r), i = we(t, "modelValue"), { computedLink: d, computedLinkProps: c } = Ct(a), f = Be(() => a.interval), p = st(a), v = T(() => typeof i.value == "boolean" ? 0 : i.value), {
      isActive: m,
      pause: B,
      restart: k,
      resume: _,
      stop: C,
      isPaused: g,
      value: x
    } = fn(v, f, {
      immediate: typeof i.value == "number"
    });
    Et(() => {
      n("close-countdown", x.value);
    });
    const y = T(() => d.value ? it : "div"), $ = T(
      () => typeof i.value == "boolean" ? i.value : m.value || a.showOnPause && g.value
    ), S = h(() => [
      p.value,
      {
        show: $.value
      }
    ]), Y = () => {
      a.noHoverPause || B();
    };
    de(u, (w) => {
      if (w) {
        Y();
        return;
      }
      _();
    });
    const K = (w, A = {}) => new wt(w, {
      cancelable: !1,
      target: r.value || null,
      relatedTarget: null,
      trigger: null,
      ...A,
      componentId: a.id
    }), P = () => {
      const w = K("show", { cancelable: !0 });
      if (n("show", w), w.defaultPrevented) {
        i.value && (i.value = !1), n("show-prevented");
        return;
      }
      i.value || (i.value = !0);
    }, j = (w = "") => {
      const A = K("hide", { cancelable: w !== "", trigger: w });
      if (n("hide", A), w === "close" && n("close", A), A.defaultPrevented) {
        n("hide-prevented"), i.value || (i.value = !0);
        return;
      }
      typeof i.value == "boolean" ? i.value = !1 : (i.value = 0, C());
    }, N = () => {
      P();
    }, O = () => {
      n("shown", K("shown"));
    }, z = () => {
      n("hidden", K("hidden"));
    };
    return de(m, (w) => {
      w === !1 && g.value === !1 && i.value && j();
    }), Qa(C), o({
      pause: B,
      restart: k,
      resume: _,
      stop: C
    }), (w, A) => (b(), L($a, J({
      "no-fade": s(a).noFade
    }, s(a).transProps, {
      onBeforeEnter: N,
      onAfterEnter: O,
      onAfterLeave: z
    }), {
      default: R(() => [
        $.value ? (b(), F("div", {
          key: 0,
          id: s(a).id,
          ref_key: "element",
          ref: r,
          class: W(["toast", [s(a).toastClass, S.value]]),
          tabindex: "0",
          role: $.value ? s(a).isStatus ? "status" : "alert" : void 0,
          "aria-live": $.value ? s(a).isStatus ? "polite" : "assertive" : void 0,
          "aria-atomic": $.value ? !0 : void 0
        }, [
          w.$slots.title || s(a).title ? (b(), L(fe(s(a).headerTag), {
            key: 0,
            class: W(["toast-header", s(a).headerClass])
          }, {
            default: R(() => [
              V(w.$slots, "title", { hide: j }, () => [
                ae("strong", yi, oe(s(a).title), 1)
              ]),
              s(a).noCloseButton ? ne("", !0) : (b(), L(zt, {
                key: 0,
                onClick: A[0] || (A[0] = (E) => j("close"))
              }))
            ]),
            _: 3
          }, 8, ["class"])) : ne("", !0),
          w.$slots.default || s(a).body ? (b(), L(fe(y.value), J({
            key: 1,
            class: ["toast-body", s(a).bodyClass],
            style: { display: "block" }
          }, s(c), {
            onClick: A[1] || (A[1] = (E) => s(d) ? j() : () => {
            })
          }), {
            default: R(() => [
              V(w.$slots, "default", { hide: j }, () => [
                ce(oe(s(a).body), 1)
              ])
            ]),
            _: 3
          }, 16, ["class"])) : ne("", !0),
          typeof i.value == "number" && s(a).progressProps !== void 0 ? (b(), L(xn, {
            key: 2,
            animated: s(a).progressProps.animated,
            precision: s(a).progressProps.precision,
            "show-progress": s(a).progressProps.showProgress,
            "show-value": s(a).progressProps.showValue,
            striped: s(a).progressProps.striped,
            variant: s(a).progressProps.variant,
            max: i.value,
            value: s(x),
            height: "4px"
          }, null, 8, ["animated", "precision", "show-progress", "show-value", "striped", "variant", "max", "value"])) : ne("", !0)
        ], 10, bi)) : ne("", !0)
      ]),
      _: 3
    }, 16, ["no-fade"]));
  }
}), gi = "top-end", An = {
  install(t) {
    const o = H([]), e = H(!1), l = (u) => {
      e.value = u;
    }, a = (u = {}) => {
      var f;
      const i = Symbol(), d = H(((f = xe(u.props)) == null ? void 0 : f.value) || 5e3), c = h({
        get: () => {
          const p = xe(u.props);
          return {
            component: xe(u.component) ?? $n,
            props: {
              ...p,
              pos: (p == null ? void 0 : p.pos) || gi,
              _modelValue: d.value,
              _self: i
            }
          };
        },
        set: (p) => {
          d.value = p.props._modelValue;
        }
      });
      return (c.value.props.appendToast !== void 0 ? c.value.props.appendToast : e.value) ? o.value.push(c) : o.value.unshift(c), i;
    }, n = (u) => {
      o.value = o.value.filter((i) => i.value.props._self !== u);
    }, r = (u) => {
      const i = o.value.find((d) => d.value.props._self === u);
      i !== void 0 && (i.value = {
        ...i.value,
        props: {
          ...i.value.props,
          _modelValue: !1
        }
      });
    };
    t.provide(an, {
      _setIsAppend: l,
      toasts: o,
      show: a,
      remove: n,
      leave: r
    });
  }
}, Vn = {
  install(t) {
    const o = H([]), e = () => {
      o.value.splice(0, o.value.length);
    };
    t.provide(on, { items: o, reset: e });
  }
}, Nn = {
  install(t, o) {
    (o == null ? void 0 : o.id) instanceof Object && typeof o.id.getId == "function" && t.provide(rn, o.id.getId);
  }
};
/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
var On = ["input:not([inert])", "select:not([inert])", "textarea:not([inert])", "a[href]:not([inert])", "button:not([inert])", "[tabindex]:not(slot):not([inert])", "audio[controls]:not([inert])", "video[controls]:not([inert])", '[contenteditable]:not([contenteditable="false"]):not([inert])', "details>summary:first-of-type:not([inert])", "details:not([inert])"], ha = /* @__PURE__ */ On.join(","), Fn = typeof Element > "u", ht = Fn ? function() {
} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector, Ba = !Fn && Element.prototype.getRootNode ? function(t) {
  var o;
  return t == null || (o = t.getRootNode) === null || o === void 0 ? void 0 : o.call(t);
} : function(t) {
  return t == null ? void 0 : t.ownerDocument;
}, _a = function t(o, e) {
  var l;
  e === void 0 && (e = !0);
  var a = o == null || (l = o.getAttribute) === null || l === void 0 ? void 0 : l.call(o, "inert"), n = a === "" || a === "true", r = n || e && o && t(o.parentNode);
  return r;
}, hi = function(o) {
  var e, l = o == null || (e = o.getAttribute) === null || e === void 0 ? void 0 : e.call(o, "contenteditable");
  return l === "" || l === "true";
}, Pn = function(o, e, l) {
  if (_a(o))
    return [];
  var a = Array.prototype.slice.apply(o.querySelectorAll(ha));
  return e && ht.call(o, ha) && a.unshift(o), a = a.filter(l), a;
}, In = function t(o, e, l) {
  for (var a = [], n = Array.from(o); n.length; ) {
    var r = n.shift();
    if (!_a(r, !1))
      if (r.tagName === "SLOT") {
        var u = r.assignedElements(), i = u.length ? u : r.children, d = t(i, !0, l);
        l.flatten ? a.push.apply(a, d) : a.push({
          scopeParent: r,
          candidates: d
        });
      } else {
        var c = ht.call(r, ha);
        c && l.filter(r) && (e || !o.includes(r)) && a.push(r);
        var f = r.shadowRoot || // check for an undisclosed shadow
        typeof l.getShadowRoot == "function" && l.getShadowRoot(r), p = !_a(f, !1) && (!l.shadowRootFilter || l.shadowRootFilter(r));
        if (f && p) {
          var v = t(f === !0 ? r.children : f.children, !0, l);
          l.flatten ? a.push.apply(a, v) : a.push({
            scopeParent: r,
            candidates: v
          });
        } else
          n.unshift.apply(n, r.children);
      }
  }
  return a;
}, En = function(o) {
  return !isNaN(parseInt(o.getAttribute("tabindex"), 10));
}, bt = function(o) {
  if (!o)
    throw new Error("No node provided");
  return o.tabIndex < 0 && (/^(AUDIO|VIDEO|DETAILS)$/.test(o.tagName) || hi(o)) && !En(o) ? 0 : o.tabIndex;
}, Bi = function(o, e) {
  var l = bt(o);
  return l < 0 && e && !En(o) ? 0 : l;
}, _i = function(o, e) {
  return o.tabIndex === e.tabIndex ? o.documentOrder - e.documentOrder : o.tabIndex - e.tabIndex;
}, Ln = function(o) {
  return o.tagName === "INPUT";
}, wi = function(o) {
  return Ln(o) && o.type === "hidden";
}, Ci = function(o) {
  var e = o.tagName === "DETAILS" && Array.prototype.slice.apply(o.children).some(function(l) {
    return l.tagName === "SUMMARY";
  });
  return e;
}, ki = function(o, e) {
  for (var l = 0; l < o.length; l++)
    if (o[l].checked && o[l].form === e)
      return o[l];
}, Ti = function(o) {
  if (!o.name)
    return !0;
  var e = o.form || Ba(o), l = function(u) {
    return e.querySelectorAll('input[type="radio"][name="' + u + '"]');
  }, a;
  if (typeof window < "u" && typeof window.CSS < "u" && typeof window.CSS.escape == "function")
    a = l(window.CSS.escape(o.name));
  else
    try {
      a = l(o.name);
    } catch (r) {
      return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", r.message), !1;
    }
  var n = ki(a, o.form);
  return !n || n === o;
}, Si = function(o) {
  return Ln(o) && o.type === "radio";
}, xi = function(o) {
  return Si(o) && !Ti(o);
}, $i = function(o) {
  var e, l = o && Ba(o), a = (e = l) === null || e === void 0 ? void 0 : e.host, n = !1;
  if (l && l !== o) {
    var r, u, i;
    for (n = !!((r = a) !== null && r !== void 0 && (u = r.ownerDocument) !== null && u !== void 0 && u.contains(a) || o != null && (i = o.ownerDocument) !== null && i !== void 0 && i.contains(o)); !n && a; ) {
      var d, c, f;
      l = Ba(a), a = (d = l) === null || d === void 0 ? void 0 : d.host, n = !!((c = a) !== null && c !== void 0 && (f = c.ownerDocument) !== null && f !== void 0 && f.contains(a));
    }
  }
  return n;
}, Dl = function(o) {
  var e = o.getBoundingClientRect(), l = e.width, a = e.height;
  return l === 0 && a === 0;
}, Ai = function(o, e) {
  var l = e.displayCheck, a = e.getShadowRoot;
  if (getComputedStyle(o).visibility === "hidden")
    return !0;
  var n = ht.call(o, "details>summary:first-of-type"), r = n ? o.parentElement : o;
  if (ht.call(r, "details:not([open]) *"))
    return !0;
  if (!l || l === "full" || l === "legacy-full") {
    if (typeof a == "function") {
      for (var u = o; o; ) {
        var i = o.parentElement, d = Ba(o);
        if (i && !i.shadowRoot && a(i) === !0)
          return Dl(o);
        o.assignedSlot ? o = o.assignedSlot : !i && d !== o.ownerDocument ? o = d.host : o = i;
      }
      o = u;
    }
    if ($i(o))
      return !o.getClientRects().length;
    if (l !== "legacy-full")
      return !0;
  } else if (l === "non-zero-area")
    return Dl(o);
  return !1;
}, Vi = function(o) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(o.tagName))
    for (var e = o.parentElement; e; ) {
      if (e.tagName === "FIELDSET" && e.disabled) {
        for (var l = 0; l < e.children.length; l++) {
          var a = e.children.item(l);
          if (a.tagName === "LEGEND")
            return ht.call(e, "fieldset[disabled] *") ? !0 : !a.contains(o);
        }
        return !0;
      }
      e = e.parentElement;
    }
  return !1;
}, wa = function(o, e) {
  return !(e.disabled || // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  _a(e) || wi(e) || Ai(e, o) || // For a details element with a summary, the summary element gets the focus
  Ci(e) || Vi(e));
}, Ga = function(o, e) {
  return !(xi(e) || bt(e) < 0 || !wa(o, e));
}, Ni = function(o) {
  var e = parseInt(o.getAttribute("tabindex"), 10);
  return !!(isNaN(e) || e >= 0);
}, Oi = function t(o) {
  var e = [], l = [];
  return o.forEach(function(a, n) {
    var r = !!a.scopeParent, u = r ? a.scopeParent : a, i = Bi(u, r), d = r ? t(a.candidates) : u;
    i === 0 ? r ? e.push.apply(e, d) : e.push(u) : l.push({
      documentOrder: n,
      tabIndex: i,
      item: a,
      isScope: r,
      content: d
    });
  }), l.sort(_i).reduce(function(a, n) {
    return n.isScope ? a.push.apply(a, n.content) : a.push(n.content), a;
  }, []).concat(e);
}, Fi = function(o, e) {
  e = e || {};
  var l;
  return e.getShadowRoot ? l = In([o], e.includeContainer, {
    filter: Ga.bind(null, e),
    flatten: !1,
    getShadowRoot: e.getShadowRoot,
    shadowRootFilter: Ni
  }) : l = Pn(o, e.includeContainer, Ga.bind(null, e)), Oi(l);
}, Pi = function(o, e) {
  e = e || {};
  var l;
  return e.getShadowRoot ? l = In([o], e.includeContainer, {
    filter: wa.bind(null, e),
    flatten: !0,
    getShadowRoot: e.getShadowRoot
  }) : l = Pn(o, e.includeContainer, wa.bind(null, e)), l;
}, St = function(o, e) {
  if (e = e || {}, !o)
    throw new Error("No node provided");
  return ht.call(o, ha) === !1 ? !1 : Ga(e, o);
}, Ii = /* @__PURE__ */ On.concat("iframe").join(","), Pa = function(o, e) {
  if (e = e || {}, !o)
    throw new Error("No node provided");
  return ht.call(o, Ii) === !1 ? !1 : wa(e, o);
};
/*!
* focus-trap 7.5.4
* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
*/
function jl(t, o) {
  var e = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var l = Object.getOwnPropertySymbols(t);
    o && (l = l.filter(function(a) {
      return Object.getOwnPropertyDescriptor(t, a).enumerable;
    })), e.push.apply(e, l);
  }
  return e;
}
function ql(t) {
  for (var o = 1; o < arguments.length; o++) {
    var e = arguments[o] != null ? arguments[o] : {};
    o % 2 ? jl(Object(e), !0).forEach(function(l) {
      Ei(t, l, e[l]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(e)) : jl(Object(e)).forEach(function(l) {
      Object.defineProperty(t, l, Object.getOwnPropertyDescriptor(e, l));
    });
  }
  return t;
}
function Ei(t, o, e) {
  return o = Ri(o), o in t ? Object.defineProperty(t, o, {
    value: e,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[o] = e, t;
}
function Li(t, o) {
  if (typeof t != "object" || t === null)
    return t;
  var e = t[Symbol.toPrimitive];
  if (e !== void 0) {
    var l = e.call(t, o || "default");
    if (typeof l != "object")
      return l;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (o === "string" ? String : Number)(t);
}
function Ri(t) {
  var o = Li(t, "string");
  return typeof o == "symbol" ? o : String(o);
}
var Gl = {
  activateTrap: function(o, e) {
    if (o.length > 0) {
      var l = o[o.length - 1];
      l !== e && l.pause();
    }
    var a = o.indexOf(e);
    a === -1 || o.splice(a, 1), o.push(e);
  },
  deactivateTrap: function(o, e) {
    var l = o.indexOf(e);
    l !== -1 && o.splice(l, 1), o.length > 0 && o[o.length - 1].unpause();
  }
}, zi = function(o) {
  return o.tagName && o.tagName.toLowerCase() === "input" && typeof o.select == "function";
}, Mi = function(o) {
  return (o == null ? void 0 : o.key) === "Escape" || (o == null ? void 0 : o.key) === "Esc" || (o == null ? void 0 : o.keyCode) === 27;
}, Gt = function(o) {
  return (o == null ? void 0 : o.key) === "Tab" || (o == null ? void 0 : o.keyCode) === 9;
}, Hi = function(o) {
  return Gt(o) && !o.shiftKey;
}, Di = function(o) {
  return Gt(o) && o.shiftKey;
}, Wl = function(o) {
  return setTimeout(o, 0);
}, Ul = function(o, e) {
  var l = -1;
  return o.every(function(a, n) {
    return e(a) ? (l = n, !1) : !0;
  }), l;
}, Ht = function(o) {
  for (var e = arguments.length, l = new Array(e > 1 ? e - 1 : 0), a = 1; a < e; a++)
    l[a - 1] = arguments[a];
  return typeof o == "function" ? o.apply(void 0, l) : o;
}, aa = function(o) {
  return o.target.shadowRoot && typeof o.composedPath == "function" ? o.composedPath()[0] : o.target;
}, ji = [], qi = function(o, e) {
  var l = (e == null ? void 0 : e.document) || document, a = (e == null ? void 0 : e.trapStack) || ji, n = ql({
    returnFocusOnDeactivate: !0,
    escapeDeactivates: !0,
    delayInitialFocus: !0,
    isKeyForward: Hi,
    isKeyBackward: Di
  }, e), r = {
    // containers given to createFocusTrap()
    // @type {Array<HTMLElement>}
    containers: [],
    // list of objects identifying tabbable nodes in `containers` in the trap
    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap
    //  is active, but the trap should never get to a state where there isn't at least one group
    //  with at least one tabbable node in it (that would lead to an error condition that would
    //  result in an error being thrown)
    // @type {Array<{
    //   container: HTMLElement,
    //   tabbableNodes: Array<HTMLElement>, // empty if none
    //   focusableNodes: Array<HTMLElement>, // empty if none
    //   posTabIndexesFound: boolean,
    //   firstTabbableNode: HTMLElement|undefined,
    //   lastTabbableNode: HTMLElement|undefined,
    //   firstDomTabbableNode: HTMLElement|undefined,
    //   lastDomTabbableNode: HTMLElement|undefined,
    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined
    // }>}
    containerGroups: [],
    // same order/length as `containers` list
    // references to objects in `containerGroups`, but only those that actually have
    //  tabbable nodes in them
    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__
    //  the same length
    tabbableGroups: [],
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: !1,
    paused: !1,
    // timer ID for when delayInitialFocus is true and initial focus in this trap
    //  has been delayed during activation
    delayInitialFocusTimer: void 0,
    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any
    recentNavEvent: void 0
  }, u, i = function(N, O, z) {
    return N && N[O] !== void 0 ? N[O] : n[z || O];
  }, d = function(N, O) {
    var z = typeof (O == null ? void 0 : O.composedPath) == "function" ? O.composedPath() : void 0;
    return r.containerGroups.findIndex(function(w) {
      var A = w.container, E = w.tabbableNodes;
      return A.contains(N) || // fall back to explicit tabbable search which will take into consideration any
      //  web components if the `tabbableOptions.getShadowRoot` option was used for
      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't
      //  look inside web components even if open)
      (z == null ? void 0 : z.includes(A)) || E.find(function(I) {
        return I === N;
      });
    });
  }, c = function(N) {
    var O = n[N];
    if (typeof O == "function") {
      for (var z = arguments.length, w = new Array(z > 1 ? z - 1 : 0), A = 1; A < z; A++)
        w[A - 1] = arguments[A];
      O = O.apply(void 0, w);
    }
    if (O === !0 && (O = void 0), !O) {
      if (O === void 0 || O === !1)
        return O;
      throw new Error("`".concat(N, "` was specified but was not a node, or did not return a node"));
    }
    var E = O;
    if (typeof O == "string" && (E = l.querySelector(O), !E))
      throw new Error("`".concat(N, "` as selector refers to no known node"));
    return E;
  }, f = function() {
    var N = c("initialFocus");
    if (N === !1)
      return !1;
    if (N === void 0 || !Pa(N, n.tabbableOptions))
      if (d(l.activeElement) >= 0)
        N = l.activeElement;
      else {
        var O = r.tabbableGroups[0], z = O && O.firstTabbableNode;
        N = z || c("fallbackFocus");
      }
    if (!N)
      throw new Error("Your focus-trap needs to have at least one focusable element");
    return N;
  }, p = function() {
    if (r.containerGroups = r.containers.map(function(N) {
      var O = Fi(N, n.tabbableOptions), z = Pi(N, n.tabbableOptions), w = O.length > 0 ? O[0] : void 0, A = O.length > 0 ? O[O.length - 1] : void 0, E = z.find(function(D) {
        return St(D);
      }), I = z.slice().reverse().find(function(D) {
        return St(D);
      }), X = !!O.find(function(D) {
        return bt(D) > 0;
      });
      return {
        container: N,
        tabbableNodes: O,
        focusableNodes: z,
        /** True if at least one node with positive `tabindex` was found in this container. */
        posTabIndexesFound: X,
        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */
        firstTabbableNode: w,
        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */
        lastTabbableNode: A,
        // NOTE: DOM order is NOT NECESSARILY "document position" order, but figuring that out
        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
        //  because that API doesn't work with Shadow DOM as well as it should (@see
        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,
        //  to address an edge case related to positive tabindex support, this seems like a much easier,
        //  "close enough most of the time" alternative for positive tabindexes which should generally
        //  be avoided anyway...
        /** First tabbable node in container, __DOM__ order; `undefined` if none. */
        firstDomTabbableNode: E,
        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */
        lastDomTabbableNode: I,
        /**
         * Finds the __tabbable__ node that follows the given node in the specified direction,
         *  in this container, if any.
         * @param {HTMLElement} node
         * @param {boolean} [forward] True if going in forward tab order; false if going
         *  in reverse.
         * @returns {HTMLElement|undefined} The next tabbable node, if any.
         */
        nextTabbableNode: function(M) {
          var Q = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, Z = O.indexOf(M);
          return Z < 0 ? Q ? z.slice(z.indexOf(M) + 1).find(function(G) {
            return St(G);
          }) : z.slice(0, z.indexOf(M)).reverse().find(function(G) {
            return St(G);
          }) : O[Z + (Q ? 1 : -1)];
        }
      };
    }), r.tabbableGroups = r.containerGroups.filter(function(N) {
      return N.tabbableNodes.length > 0;
    }), r.tabbableGroups.length <= 0 && !c("fallbackFocus"))
      throw new Error("Your focus-trap must have at least one container with at least one tabbable node in it at all times");
    if (r.containerGroups.find(function(N) {
      return N.posTabIndexesFound;
    }) && r.containerGroups.length > 1)
      throw new Error("At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.");
  }, v = function j(N) {
    var O = N.activeElement;
    if (O)
      return O.shadowRoot && O.shadowRoot.activeElement !== null ? j(O.shadowRoot) : O;
  }, m = function j(N) {
    if (N !== !1 && N !== v(document)) {
      if (!N || !N.focus) {
        j(f());
        return;
      }
      N.focus({
        preventScroll: !!n.preventScroll
      }), r.mostRecentlyFocusedNode = N, zi(N) && N.select();
    }
  }, B = function(N) {
    var O = c("setReturnFocus", N);
    return O || (O === !1 ? !1 : N);
  }, k = function(N) {
    var O = N.target, z = N.event, w = N.isBackward, A = w === void 0 ? !1 : w;
    O = O || aa(z), p();
    var E = null;
    if (r.tabbableGroups.length > 0) {
      var I = d(O, z), X = I >= 0 ? r.containerGroups[I] : void 0;
      if (I < 0)
        A ? E = r.tabbableGroups[r.tabbableGroups.length - 1].lastTabbableNode : E = r.tabbableGroups[0].firstTabbableNode;
      else if (A) {
        var D = Ul(r.tabbableGroups, function(ie) {
          var te = ie.firstTabbableNode;
          return O === te;
        });
        if (D < 0 && (X.container === O || Pa(O, n.tabbableOptions) && !St(O, n.tabbableOptions) && !X.nextTabbableNode(O, !1)) && (D = I), D >= 0) {
          var M = D === 0 ? r.tabbableGroups.length - 1 : D - 1, Q = r.tabbableGroups[M];
          E = bt(O) >= 0 ? Q.lastTabbableNode : Q.lastDomTabbableNode;
        } else
          Gt(z) || (E = X.nextTabbableNode(O, !1));
      } else {
        var Z = Ul(r.tabbableGroups, function(ie) {
          var te = ie.lastTabbableNode;
          return O === te;
        });
        if (Z < 0 && (X.container === O || Pa(O, n.tabbableOptions) && !St(O, n.tabbableOptions) && !X.nextTabbableNode(O)) && (Z = I), Z >= 0) {
          var G = Z === r.tabbableGroups.length - 1 ? 0 : Z + 1, se = r.tabbableGroups[G];
          E = bt(O) >= 0 ? se.firstTabbableNode : se.firstDomTabbableNode;
        } else
          Gt(z) || (E = X.nextTabbableNode(O));
      }
    } else
      E = c("fallbackFocus");
    return E;
  }, _ = function(N) {
    var O = aa(N);
    if (!(d(O, N) >= 0)) {
      if (Ht(n.clickOutsideDeactivates, N)) {
        u.deactivate({
          // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,
          //  which will result in the outside click setting focus to the node
          //  that was clicked (and if not focusable, to "nothing"); by setting
          //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused
          //  on activation (or the configured `setReturnFocus` node), whether the
          //  outside click was on a focusable node or not
          returnFocus: n.returnFocusOnDeactivate
        });
        return;
      }
      Ht(n.allowOutsideClick, N) || N.preventDefault();
    }
  }, C = function(N) {
    var O = aa(N), z = d(O, N) >= 0;
    if (z || O instanceof Document)
      z && (r.mostRecentlyFocusedNode = O);
    else {
      N.stopImmediatePropagation();
      var w, A = !0;
      if (r.mostRecentlyFocusedNode)
        if (bt(r.mostRecentlyFocusedNode) > 0) {
          var E = d(r.mostRecentlyFocusedNode), I = r.containerGroups[E].tabbableNodes;
          if (I.length > 0) {
            var X = I.findIndex(function(D) {
              return D === r.mostRecentlyFocusedNode;
            });
            X >= 0 && (n.isKeyForward(r.recentNavEvent) ? X + 1 < I.length && (w = I[X + 1], A = !1) : X - 1 >= 0 && (w = I[X - 1], A = !1));
          }
        } else
          r.containerGroups.some(function(D) {
            return D.tabbableNodes.some(function(M) {
              return bt(M) > 0;
            });
          }) || (A = !1);
      else
        A = !1;
      A && (w = k({
        // move FROM the MRU node, not event-related node (which will be the node that is
        //  outside the trap causing the focus escape we're trying to fix)
        target: r.mostRecentlyFocusedNode,
        isBackward: n.isKeyBackward(r.recentNavEvent)
      })), m(w || r.mostRecentlyFocusedNode || f());
    }
    r.recentNavEvent = void 0;
  }, g = function(N) {
    var O = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    r.recentNavEvent = N;
    var z = k({
      event: N,
      isBackward: O
    });
    z && (Gt(N) && N.preventDefault(), m(z));
  }, x = function(N) {
    if (Mi(N) && Ht(n.escapeDeactivates, N) !== !1) {
      N.preventDefault(), u.deactivate();
      return;
    }
    (n.isKeyForward(N) || n.isKeyBackward(N)) && g(N, n.isKeyBackward(N));
  }, y = function(N) {
    var O = aa(N);
    d(O, N) >= 0 || Ht(n.clickOutsideDeactivates, N) || Ht(n.allowOutsideClick, N) || (N.preventDefault(), N.stopImmediatePropagation());
  }, $ = function() {
    if (r.active)
      return Gl.activateTrap(a, u), r.delayInitialFocusTimer = n.delayInitialFocus ? Wl(function() {
        m(f());
      }) : m(f()), l.addEventListener("focusin", C, !0), l.addEventListener("mousedown", _, {
        capture: !0,
        passive: !1
      }), l.addEventListener("touchstart", _, {
        capture: !0,
        passive: !1
      }), l.addEventListener("click", y, {
        capture: !0,
        passive: !1
      }), l.addEventListener("keydown", x, {
        capture: !0,
        passive: !1
      }), u;
  }, S = function() {
    if (r.active)
      return l.removeEventListener("focusin", C, !0), l.removeEventListener("mousedown", _, !0), l.removeEventListener("touchstart", _, !0), l.removeEventListener("click", y, !0), l.removeEventListener("keydown", x, !0), u;
  }, Y = function(N) {
    var O = N.some(function(z) {
      var w = Array.from(z.removedNodes);
      return w.some(function(A) {
        return A === r.mostRecentlyFocusedNode;
      });
    });
    O && m(f());
  }, K = typeof window < "u" && "MutationObserver" in window ? new MutationObserver(Y) : void 0, P = function() {
    K && (K.disconnect(), r.active && !r.paused && r.containers.map(function(N) {
      K.observe(N, {
        subtree: !0,
        childList: !0
      });
    }));
  };
  return u = {
    get active() {
      return r.active;
    },
    get paused() {
      return r.paused;
    },
    activate: function(N) {
      if (r.active)
        return this;
      var O = i(N, "onActivate"), z = i(N, "onPostActivate"), w = i(N, "checkCanFocusTrap");
      w || p(), r.active = !0, r.paused = !1, r.nodeFocusedBeforeActivation = l.activeElement, O == null || O();
      var A = function() {
        w && p(), $(), P(), z == null || z();
      };
      return w ? (w(r.containers.concat()).then(A, A), this) : (A(), this);
    },
    deactivate: function(N) {
      if (!r.active)
        return this;
      var O = ql({
        onDeactivate: n.onDeactivate,
        onPostDeactivate: n.onPostDeactivate,
        checkCanReturnFocus: n.checkCanReturnFocus
      }, N);
      clearTimeout(r.delayInitialFocusTimer), r.delayInitialFocusTimer = void 0, S(), r.active = !1, r.paused = !1, P(), Gl.deactivateTrap(a, u);
      var z = i(O, "onDeactivate"), w = i(O, "onPostDeactivate"), A = i(O, "checkCanReturnFocus"), E = i(O, "returnFocus", "returnFocusOnDeactivate");
      z == null || z();
      var I = function() {
        Wl(function() {
          E && m(B(r.nodeFocusedBeforeActivation)), w == null || w();
        });
      };
      return E && A ? (A(B(r.nodeFocusedBeforeActivation)).then(I, I), this) : (I(), this);
    },
    pause: function(N) {
      if (r.paused || !r.active)
        return this;
      var O = i(N, "onPause"), z = i(N, "onPostPause");
      return r.paused = !0, O == null || O(), S(), P(), z == null || z(), this;
    },
    unpause: function(N) {
      if (!r.paused || !r.active)
        return this;
      var O = i(N, "onUnpause"), z = i(N, "onPostUnpause");
      return r.paused = !1, O == null || O(), p(), $(), P(), z == null || z(), this;
    },
    updateContainerElements: function(N) {
      var O = [].concat(N).filter(Boolean);
      return r.containers = O.map(function(z) {
        return typeof z == "string" ? l.querySelector(z) : z;
      }), r.active && p(), P(), this;
    }
  }, u.updateContainerElements(o), u;
};
function Gi(t, o = {}) {
  let e;
  const { immediate: l, ...a } = o, n = H(!1), r = H(!1), u = (f) => e && e.activate(f), i = (f) => e && e.deactivate(f), d = () => {
    e && (e.pause(), r.value = !0);
  }, c = () => {
    e && (e.unpause(), r.value = !1);
  };
  return de(
    () => Re(t),
    (f) => {
      f && (e = qi(f, {
        ...a,
        onActivate() {
          n.value = !0, o.onActivate && o.onActivate();
        },
        onDeactivate() {
          n.value = !1, o.onDeactivate && o.onDeactivate();
        }
      }), l && u());
    },
    { flush: "post" }
  ), rt(() => i()), {
    hasFocus: n,
    isPaused: r,
    activate: u,
    deactivate: i,
    pause: d,
    unpause: c
  };
}
const Rn = ({
  element: t,
  isActive: o,
  noTrap: e,
  fallbackFocus: l
}, a = {
  allowOutsideClick: !0,
  fallbackFocus: l.ref.value ?? void 0
}) => {
  const n = Fe(T(o)), r = Fe(T(e)), u = () => {
    var f;
    const c = (f = t.value) == null ? void 0 : f.querySelectorAll(
      `a, button, input, select, textarea, [tabindex]:not([tabindex="-1"]):not(.${l.classSelector})`
    );
    return !c || c.length === 0;
  }, i = H(u());
  De(() => {
    Do(
      t,
      () => {
        i.value = u();
      },
      { childList: !0, subtree: !0 }
    );
  });
  const d = Gi(t, a);
  return de(n, async (c) => {
    await Oe(), c && r.value === !1 ? d.activate() : d.deactivate();
  }), de(r, (c) => {
    c === !0 && d.deactivate();
  }), {
    needsFallback: Fe(i)
  };
}, Wi = {
  key: 0,
  class: "visually-hidden"
}, Aa = /* @__PURE__ */ q({
  __name: "BSpinner",
  props: {
    label: { default: void 0 },
    role: { default: "status" },
    small: { type: Boolean, default: !1 },
    tag: { default: "span" },
    type: { default: "border" },
    variant: { default: null }
  },
  setup(t) {
    const e = U(t, "BSpinner"), l = je(), a = h(() => [
      `spinner-${e.type}`,
      {
        [`spinner-${e.type}-sm`]: e.small,
        [`text-${e.variant}`]: e.variant !== null
      }
    ]), n = T(() => !Pe(l.label));
    return (r, u) => (b(), L(fe(s(e).tag), {
      class: W(a.value),
      role: s(e).label || n.value ? s(e).role : null,
      "aria-hidden": s(e).label || n.value ? null : !0
    }, {
      default: R(() => [
        s(e).label || n.value ? (b(), F("span", Wi, [
          V(r.$slots, "label", {}, () => [
            ce(oe(s(e).label), 1)
          ])
        ])) : ne("", !0)
      ]),
      _: 3
    }, 8, ["class", "role", "aria-hidden"]));
  }
}), vt = /* @__PURE__ */ q({
  __name: "BButton",
  props: /* @__PURE__ */ be({
    loading: { type: Boolean, default: !1 },
    loadingFill: { type: Boolean, default: !1 },
    loadingText: { default: "Loading..." },
    pill: { type: Boolean, default: !1 },
    pressed: { type: Boolean },
    size: { default: "md" },
    squared: { type: Boolean, default: !1 },
    tag: { default: "button" },
    type: { default: "button" },
    variant: { default: "secondary" },
    active: { type: Boolean, default: !1 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    icon: { type: Boolean, default: !1 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    routerTag: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: null }
  }, {
    pressed: { type: Boolean, default: void 0 },
    pressedModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["click"], ["update:pressed"]),
  setup(t, { emit: o }) {
    const l = U(t, "BButton"), a = o, n = H(null), r = we(t, "pressed"), { computedLink: u, computedLinkProps: i } = Ct(l, [
      "active-class",
      "exact-active-class",
      "replace",
      "routerComponentName",
      "routerTag"
    ]), d = T(() => typeof r.value == "boolean"), c = T(
      () => l.tag === "button" && l.href === void 0 && l.to === void 0
    ), f = T(() => l.to !== void 0), p = T(() => l.href !== void 0 ? !1 : !c.value), v = h(() => f.value ? i.value : []), m = h(() => l.href === "#" && l.disabled ? !0 : p.value ? l.disabled : null), B = h(
      () => {
        var x;
        return u.value === !1 && ((x = l.variant) == null ? void 0 : x.startsWith("link-")) || !1;
      }
    ), k = Tn(
      h(() => ({
        ...l.variant && l.variant.startsWith("link") && {
          icon: l.icon,
          opacity: l.opacity,
          opacityHover: l.opacityHover,
          underlineOffset: l.underlineOffset,
          underlineOffsetHover: l.underlineOffsetHover,
          underlineOpacity: l.underlineOpacity,
          underlineOpacityHover: l.underlineOpacityHover,
          underlineVariant: l.underlineVariant,
          variant: B.value === !0 ? l.variant.slice(5) : null
        }
      }))
    ), _ = h(() => [
      u.value === !0 ? void 0 : k.value,
      [`btn-${l.size}`],
      {
        [`btn-${l.variant}`]: l.variant !== null && B.value === !1,
        active: l.active || r.value,
        "rounded-pill": l.pill,
        "rounded-0": l.squared,
        disabled: l.disabled
      }
    ]), C = T(() => f.value ? it : l.href ? "a" : l.tag), g = (x) => {
      if (l.disabled) {
        x.preventDefault(), x.stopPropagation();
        return;
      }
      a("click", x), d.value && (r.value = !r.value);
    };
    return Le(
      [" ", "enter"],
      (x) => {
        var y;
        l.href === "#" && (x.preventDefault(), (y = n.value) == null || y.click());
      },
      { target: n }
    ), (x, y) => (b(), L(fe(C.value), J({
      ref_key: "element",
      ref: n,
      class: "btn"
    }, v.value, {
      class: _.value,
      "aria-disabled": m.value,
      "aria-pressed": d.value ? r.value : null,
      autocomplete: d.value ? "off" : null,
      disabled: c.value ? s(l).disabled : null,
      href: s(l).href,
      rel: s(u) ? s(l).rel : null,
      role: p.value || s(u) ? "button" : null,
      target: s(u) ? s(l).target : null,
      type: c.value ? s(l).type : null,
      to: c.value ? null : s(l).to,
      onClick: g
    }), {
      default: R(() => [
        s(l).loading ? V(x.$slots, "loading", { key: 0 }, () => [
          s(l).loadingFill ? ne("", !0) : (b(), F(pe, { key: 0 }, [
            ce(oe(s(l).loadingText), 1)
          ], 64)),
          V(x.$slots, "loading-spinner", {}, () => [
            ge(Aa, {
              small: s(l).size !== "lg",
              label: s(l).loadingFill ? s(l).loadingText : void 0
            }, null, 8, ["small", "label"])
          ])
        ]) : V(x.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 16, ["class", "aria-disabled", "aria-pressed", "autocomplete", "disabled", "href", "rel", "role", "target", "type", "to"]));
  }
}), Ui = ["id", "aria-labelledby", "aria-describedby"], Ki = ["id"], Kl = "modal-fallback-focus", Xl = 1056, Xi = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BModal",
  props: /* @__PURE__ */ be({
    autofocus: { type: Boolean, default: !0 },
    autofocusButton: { default: void 0 },
    body: { default: void 0 },
    bodyAttrs: { default: void 0 },
    bodyBgVariant: { default: null },
    bodyClass: { default: null },
    bodyScrolling: { type: Boolean, default: !1 },
    bodyTextVariant: { default: null },
    bodyVariant: { default: null },
    busy: { type: Boolean, default: !1 },
    buttonSize: { default: "md" },
    cancelDisabled: { type: Boolean, default: !1 },
    cancelTitle: { default: "Cancel" },
    cancelVariant: { default: "secondary" },
    centered: { type: Boolean, default: !1 },
    contentClass: { default: void 0 },
    dialogClass: { default: void 0 },
    footerBgVariant: { default: null },
    footerBorderVariant: { default: null },
    footerClass: { default: void 0 },
    footerTextVariant: { default: null },
    footerVariant: { default: null },
    fullscreen: { type: [Boolean, String], default: !1 },
    headerBgVariant: { default: null },
    headerBorderVariant: { default: null },
    headerClass: { default: void 0 },
    headerCloseClass: { default: void 0 },
    headerCloseLabel: { default: "Close" },
    headerCloseVariant: { default: "secondary" },
    headerTextVariant: { default: null },
    headerVariant: { default: null },
    hideBackdrop: { type: Boolean, default: !1 },
    hideFooter: { type: Boolean, default: !1 },
    hideHeader: { type: Boolean, default: !1 },
    hideHeaderClose: { type: Boolean, default: !1 },
    id: { default: void 0 },
    lazy: { type: Boolean, default: !1 },
    modalClass: { default: void 0 },
    modelValue: { type: Boolean },
    noCloseOnBackdrop: { type: Boolean, default: !1 },
    noCloseOnEsc: { type: Boolean, default: !1 },
    noFade: { type: Boolean, default: !1 },
    noTrap: { type: Boolean, default: !1 },
    noStacking: { type: Boolean },
    okDisabled: { type: Boolean, default: !1 },
    okOnly: { type: Boolean, default: !1 },
    okTitle: { default: "OK" },
    okVariant: { default: "primary" },
    scrollable: { type: Boolean, default: !1 },
    size: { default: "md" },
    title: { default: void 0 },
    titleClass: { default: void 0 },
    titleSrOnly: { type: Boolean, default: !1 },
    titleTag: { default: "h5" },
    transProps: { default: void 0 },
    teleportDisabled: { default: !1 },
    teleportTo: { default: "body" }
  }, {
    modelValue: { type: Boolean, default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["backdrop", "cancel", "close", "esc", "hidden", "hide", "hide-prevented", "ok", "show", "show-prevented", "shown"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BModal"), n = e, r = je(), u = Ce(() => a.id, "modal"), i = we(t, "modelValue"), d = H(null), c = H(null), f = H(null), p = H(null), v = H(null), m = H(!1), B = H(!1), { needsFallback: k } = Rn({
      element: d,
      isActive: m,
      noTrap: () => a.noTrap,
      fallbackFocus: {
        ref: c,
        classSelector: Kl
      }
    }), _ = vi(!0);
    Le(
      "Escape",
      () => {
        M("esc");
      },
      { target: d }
    ), wn(i, () => a.bodyScrolling);
    const { focused: C } = ze(d, {
      initialValue: i.value && a.autofocusButton === void 0 && a.autofocus === !0
    }), { focused: g } = ze(f, {
      initialValue: i.value && a.autofocusButton === "ok" && a.autofocus === !0
    }), { focused: x } = ze(p, {
      initialValue: i.value && a.autofocusButton === "cancel" && a.autofocus === !0
    }), { focused: y } = ze(v, {
      initialValue: i.value && a.autofocusButton === "close" && a.autofocus === !0
    }), $ = h(() => [
      a.modalClass,
      {
        fade: !a.noFade,
        show: m.value
      }
    ]), S = T(
      () => a.lazy === !1 || a.lazy === !0 && B.value === !0 || a.lazy === !0 && i.value === !0
    ), Y = T(() => !Pe(r["header-close"])), K = h(() => [
      a.dialogClass,
      {
        "modal-fullscreen": a.fullscreen === !0,
        [`modal-fullscreen-${a.fullscreen}-down`]: typeof a.fullscreen == "string",
        [`modal-${a.size}`]: a.size !== "md",
        "modal-dialog-centered": a.centered,
        "modal-dialog-scrollable": a.scrollable
      }
    ]), P = st(() => ({
      bgVariant: a.bodyBgVariant,
      textVariant: a.bodyTextVariant,
      variant: a.bodyVariant
    })), j = h(() => [a.bodyClass, P.value]), N = st(() => ({
      bgVariant: a.headerBgVariant,
      textVariant: a.headerTextVariant,
      variant: a.headerVariant
    })), O = h(() => [
      a.headerClass,
      N.value,
      {
        [`border-${a.headerBorderVariant}`]: a.headerBorderVariant !== null
      }
    ]), z = h(() => ({
      variant: Y.value ? a.headerCloseVariant : void 0,
      class: a.headerCloseClass
    })), w = st(() => ({
      bgVariant: a.footerBgVariant,
      textVariant: a.footerTextVariant,
      variant: a.footerVariant
    })), A = h(() => [
      a.footerClass,
      w.value,
      {
        [`border-${a.footerBorderVariant}`]: a.footerBorderVariant !== null
      }
    ]), E = h(() => [
      a.titleClass,
      {
        "visually-hidden": a.titleSrOnly
      }
    ]), I = T(() => a.cancelDisabled || a.busy), X = T(() => a.okDisabled || a.busy), D = (ee, ye = {}) => new wt(ee, {
      cancelable: !1,
      target: d.value || null,
      relatedTarget: null,
      trigger: null,
      ...ye,
      componentId: u.value
    });
    de(i, (ee, ye) => {
      ee !== ye && (ee === !0 ? Q() : M());
    });
    const M = (ee = "") => {
      if (ee === "backdrop" && a.noCloseOnBackdrop || ee === "esc" && a.noCloseOnEsc) {
        n("hide-prevented");
        return;
      }
      const ye = D("hide", { cancelable: ee !== "", trigger: ee });
      if (ee === "ok" && n(ee, ye), ee === "cancel" && n(ee, ye), ee === "close" && n(ee, ye), ee === "backdrop" && n(ee, ye), ee === "esc" && n(ee, ye), n("hide", ye), ye.defaultPrevented) {
        n("hide-prevented"), i.value || (i.value = !0);
        return;
      }
      i.value && (i.value = !1);
    }, Q = () => {
      if (m.value)
        return;
      const ee = D("show", { cancelable: !0 });
      if (n("show", ee), ee.defaultPrevented) {
        i.value && (i.value = !1), n("show-prevented");
        return;
      }
      i.value || (i.value = !0);
    }, Z = () => {
      a.autofocus !== !1 && (a.autofocusButton === "ok" ? g.value = !0 : a.autofocusButton === "close" ? y.value = !0 : a.autofocusButton === "cancel" ? x.value = !0 : C.value = !0);
    }, G = () => {
      Q();
    }, se = () => {
      m.value = !0, Z(), n("shown", D("shown")), a.lazy === !0 && (B.value = !0);
    }, ie = H(!1), te = () => {
      m.value = !1, ie.value = !0;
    }, ve = () => {
      n("hidden", D("hidden")), a.lazy === !0 && (B.value = !1), ie.value = !1;
    }, { activePosition: ue, activeModalCount: me, stackWithoutSelf: le } = di(
      m,
      i.value
    );
    de(le, (ee, ye) => {
      ee.length > ye.length && m.value === !0 && a.noStacking === !0 && M();
    });
    const re = h(() => ({
      // Make sure that newly opened modals have a higher z-index than currently active ones.
      // All active modals have a z-index of ('defaultZIndex' - 'stackSize' - 'positionInStack').
      //
      // This means inactive modals will already be higher than active ones when opened.
      "z-index": m.value || ie.value ? (
        // Just for reference there is a single frame in which the modal is not active but still has a higher z-index than the active ones due to _when_ it calculates its position. It's a small visual effect
        Xl - (((me == null ? void 0 : me.value) ?? 0) - ((ue == null ? void 0 : ue.value) ?? 0))
      ) : Xl
    }));
    $e(d, "bv-toggle", () => {
      i.value ? M() : Q();
    });
    const he = h(() => ({
      cancel: () => {
        M("cancel");
      },
      close: () => {
        M("close");
      },
      hide: M,
      ok: () => {
        M("ok");
      },
      visible: i.value
    }));
    return o({
      hide: M,
      id: u,
      show: Q
    }), (ee, ye) => (b(), L(_t, {
      to: s(a).teleportTo,
      disabled: s(a).teleportDisabled
    }, [
      ge(el, J({ ...s(_), ...s(a).transProps, enterToClass: "show" }, {
        appear: i.value,
        onBeforeEnter: G,
        onAfterEnter: se,
        onLeave: te,
        onAfterLeave: ve
      }), {
        default: R(() => [
          dt(ae("div", J({
            id: s(u),
            ref_key: "element",
            ref: d,
            class: ["modal", $.value],
            role: "dialog",
            "aria-labelledby": s(a).hideHeader ? void 0 : `${s(u)}-label`,
            "aria-describedby": `${s(u)}-body`,
            tabindex: "-1"
          }, ee.$attrs, { style: re.value }), [
            ae("div", {
              class: W(["modal-dialog", K.value])
            }, [
              S.value ? (b(), F("div", {
                key: 0,
                class: W(["modal-content", s(a).contentClass])
              }, [
                s(a).hideHeader ? ne("", !0) : (b(), F("div", {
                  key: 0,
                  class: W(["modal-header", O.value])
                }, [
                  V(ee.$slots, "header", _e(Se(he.value)), () => [
                    (b(), L(fe(s(a).titleTag), {
                      id: `${s(u)}-label`,
                      class: W(["modal-title", E.value])
                    }, {
                      default: R(() => [
                        V(ee.$slots, "title", _e(Se(he.value)), () => [
                          ce(oe(s(a).title), 1)
                        ], !0)
                      ]),
                      _: 3
                    }, 8, ["id", "class"])),
                    s(a).hideHeaderClose ? ne("", !0) : (b(), F(pe, { key: 0 }, [
                      Y.value ? (b(), L(vt, J({ key: 0 }, z.value, {
                        onClick: ye[0] || (ye[0] = (Te) => M("close"))
                      }), {
                        default: R(() => [
                          V(ee.$slots, "header-close", {}, void 0, !0)
                        ]),
                        _: 3
                      }, 16)) : (b(), L(zt, J({
                        key: 1,
                        "aria-label": s(a).headerCloseLabel
                      }, z.value, {
                        onClick: ye[1] || (ye[1] = (Te) => M("close"))
                      }), null, 16, ["aria-label"]))
                    ], 64))
                  ], !0)
                ], 2)),
                ae("div", J({
                  id: `${s(u)}-body`,
                  class: ["modal-body", j.value]
                }, s(a).bodyAttrs), [
                  V(ee.$slots, "default", _e(Se(he.value)), () => [
                    ce(oe(s(a).body), 1)
                  ], !0)
                ], 16, Ki),
                s(a).hideFooter ? ne("", !0) : (b(), F("div", {
                  key: 1,
                  class: W(["modal-footer", A.value])
                }, [
                  V(ee.$slots, "footer", _e(Se(he.value)), () => [
                    V(ee.$slots, "cancel", _e(Se(he.value)), () => [
                      s(a).okOnly ? ne("", !0) : (b(), L(vt, {
                        key: 0,
                        ref_key: "cancelButton",
                        ref: p,
                        disabled: I.value,
                        size: s(a).buttonSize,
                        variant: s(a).cancelVariant,
                        onClick: ye[2] || (ye[2] = (Te) => M("cancel"))
                      }, {
                        default: R(() => [
                          ce(oe(s(a).cancelTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"]))
                    ], !0),
                    V(ee.$slots, "ok", _e(Se(he.value)), () => [
                      ge(vt, {
                        ref_key: "okButton",
                        ref: f,
                        disabled: X.value,
                        size: s(a).buttonSize,
                        variant: s(a).okVariant,
                        onClick: ye[3] || (ye[3] = (Te) => M("ok"))
                      }, {
                        default: R(() => [
                          ce(oe(s(a).okTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"])
                    ], !0)
                  ], !0)
                ], 2))
              ], 2)) : ne("", !0)
            ], 2),
            s(a).hideBackdrop ? ne("", !0) : V(ee.$slots, "backdrop", { key: 0 }, () => [
              ae("div", {
                class: "modal-backdrop fade show",
                onClick: ye[4] || (ye[4] = (Te) => M("backdrop"))
              })
            ], !0),
            s(k) ? (b(), F("div", {
              key: 1,
              ref_key: "fallbackFocusElement",
              ref: c,
              class: W(Kl),
              tabindex: "0",
              style: { width: "0", height: "0", overflow: "hidden" }
            }, null, 512)) : ne("", !0)
          ], 16, Ui), [
            [Kt, i.value]
          ])
        ]),
        _: 3
      }, 16, ["appear"])
    ], 8, ["to", "disabled"]));
  }
}), zn = (t, o) => {
  const e = t.__vccOpts || t;
  for (const [l, a] of o)
    e[l] = a;
  return e;
}, Wa = /* @__PURE__ */ zn(Xi, [["__scopeId", "data-v-4f028742"]]), Mn = {
  install(t) {
    const o = H([]), e = () => {
      let i = () => {
      };
      return {
        value: new Promise((c) => {
          i = c;
        }),
        resolve: i
      };
    }, l = () => [e(), Symbol(), H(!0)], a = (i = {}) => {
      const [d, c, f] = l();
      return o.value.push(
        h({
          get: () => ({
            component: xe(i.component) ?? Wa,
            props: {
              ...xe(i.props),
              _isConfirm: !1,
              _promise: d,
              _self: c,
              _modelValue: f.value
            }
          }),
          set: (p) => {
            f.value = p.props._modelValue;
          }
        })
      ), d.value;
    }, n = (i = {}) => {
      const [d, c, f] = l();
      return o.value.push(
        h({
          get: () => ({
            component: xe(i.component) ?? Wa,
            props: {
              ...xe(i.props),
              _isConfirm: !0,
              _promise: d,
              _self: c,
              _modelValue: f.value
            }
          }),
          set: (p) => {
            f.value = p.props._modelValue;
          }
        })
      ), d.value;
    }, r = (i) => {
      const d = o.value.find((c) => c.value.props._self === i);
      d !== void 0 && (d.value = {
        ...d.value,
        props: {
          ...d.value.props,
          _modelValue: !1
        }
      });
    }, u = (i) => {
      o.value = o.value.filter((d) => d.value.props._self !== i);
    };
    t.provide(nn, {
      modals: o,
      remove: u,
      show: a,
      confirm: n,
      leave: r
    });
  }
}, Hn = {
  install(t) {
    const o = H(/* @__PURE__ */ new Map()), e = h(() => o.value.size), l = h(() => [...o.value.values()].pop()), a = (d) => {
      o.value.set(d.uid, d);
    }, n = (d) => {
      o.value.delete(d.uid);
    }, r = H(/* @__PURE__ */ new Map()), u = (d) => {
      r.value.set(d.uid, d);
    }, i = (d) => {
      r.value.delete(d.uid);
    };
    t.provide(sn, {
      stack: h(() => [...o.value.values()]),
      countStack: e,
      lastStack: l,
      registry: h(() => [...r.value.values()]),
      pushStack: a,
      removeStack: n,
      pushRegistry: u,
      removeRegistry: i
    });
  }
}, Dn = {
  install(t, o) {
    var i, d;
    const a = typeof (o == null ? void 0 : o.rtl) == "boolean" ? !1 : ((i = o == null ? void 0 : o.rtl) == null ? void 0 : i.rtlInitial) ?? !1, n = typeof (o == null ? void 0 : o.rtl) == "boolean" ? void 0 : ((d = o == null ? void 0 : o.rtl) == null ? void 0 : d.localeInitial) ?? void 0, r = H(a), u = H(n);
    t.provide(ln, { isRtl: r, locale: u });
  }
}, jn = {
  install(t, o) {
    const e = (o == null ? void 0 : o.components) ?? {};
    t.provide(ra, H(e));
  }
}, vf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  breadcrumbPlugin: Vn,
  defaultsPlugin: jn,
  idPlugin: Nn,
  modalControllerPlugin: Mn,
  modalManagerPlugin: Hn,
  rtlPlugin: Dn,
  toastPlugin: An
}, Symbol.toStringTag, { value: "Module" })), qn = Object.freeze(
  Object.keys({
    BAccordion: null,
    BAccordionItem: null,
    BAlert: null,
    BAvatar: null,
    BAvatarGroup: null,
    BBadge: null,
    BBreadcrumb: null,
    BBreadcrumbItem: null,
    BButton: null,
    BButtonGroup: null,
    BButtonToolbar: null,
    BCard: null,
    BCardBody: null,
    BCardFooter: null,
    BCardGroup: null,
    BCardHeader: null,
    BCardImg: null,
    BCardSubtitle: null,
    BCardText: null,
    BCardTitle: null,
    BCarousel: null,
    BCarouselSlide: null,
    BCloseButton: null,
    BCol: null,
    BCollapse: null,
    BContainer: null,
    BDropdown: null,
    BDropdownDivider: null,
    BDropdownForm: null,
    BDropdownGroup: null,
    BDropdownHeader: null,
    BDropdownItem: null,
    BDropdownItemButton: null,
    BDropdownText: null,
    BForm: null,
    BFormCheckbox: null,
    BFormCheckboxGroup: null,
    BFormDatalist: null,
    BFormFile: null,
    BFormFloatingLabel: null,
    BFormGroup: null,
    BFormInput: null,
    BFormInvalidFeedback: null,
    BFormRadio: null,
    BFormRadioGroup: null,
    BFormRow: null,
    BFormSelect: null,
    BFormSelectOption: null,
    BFormSelectOptionGroup: null,
    BFormSpinbutton: null,
    BFormTag: null,
    BFormTags: null,
    BFormText: null,
    BFormTextarea: null,
    BFormValidFeedback: null,
    BImg: null,
    BInput: null,
    BInputGroup: null,
    BInputGroupText: null,
    BListGroup: null,
    BListGroupItem: null,
    BModal: null,
    BModalOrchestrator: null,
    BNav: null,
    BNavForm: null,
    BNavItem: null,
    BNavItemDropdown: null,
    BNavText: null,
    BNavbar: null,
    BNavbarBrand: null,
    BNavbarNav: null,
    BNavbarToggle: null,
    BOffcanvas: null,
    BOverlay: null,
    BPagination: null,
    BPlaceholder: null,
    BPlaceholderButton: null,
    BPlaceholderCard: null,
    BPlaceholderTable: null,
    BPlaceholderWrapper: null,
    BPopover: null,
    BProgress: null,
    BRow: null,
    BSpinner: null,
    BTab: null,
    BTabs: null,
    BToast: null,
    BToastOrchestrator: null,
    BTooltip: null,
    BLink: null,
    BProgressBar: null,
    BTableSimple: null,
    BTableLite: null,
    BTable: null,
    BTbody: null,
    BTd: null,
    BTh: null,
    BThead: null,
    BTfoot: null,
    BTr: null,
    BTransition: null
  })
), Gn = Object.freeze(
  Object.keys({
    vBColorMode: null,
    vBModal: null,
    vBPopover: null,
    vBScrollspy: null,
    vBToggle: null,
    vBTooltip: null
  })
), Yi = Object.freeze(
  Object.keys({
    useBreadcrumb: null,
    useColorMode: null,
    useModal: null,
    useModalController: null,
    useScrollspy: null,
    useToast: null
  })
), Zi = ["id"], Ji = /* @__PURE__ */ q({
  __name: "BAccordion",
  props: /* @__PURE__ */ be({
    flush: { type: Boolean, default: !1 },
    free: { type: Boolean, default: !1 },
    id: { default: void 0 },
    modelValue: {}
  }, {
    modelValue: {
      default: void 0
    },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t) {
    const e = U(t, "BAccordion"), l = we(t, "modelValue"), a = Ce(() => e.id, "accordion"), n = h(() => ({
      "accordion-flush": e.flush
    }));
    return We(Jo, {
      openItem: Fe(l),
      free: T(() => e.free),
      setOpenItem: (r) => {
        l.value = r;
      }
    }), (r, u) => (b(), F("div", {
      id: s(a),
      class: W(["accordion", n.value])
    }, [
      V(r.$slots, "default")
    ], 10, Zi));
  }
}), Wn = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BCollapse",
  props: /* @__PURE__ */ be({
    horizontal: { type: Boolean, default: !1 },
    id: { default: void 0 },
    isNav: { type: Boolean, default: !1 },
    modelValue: { type: Boolean },
    skipAnimation: { type: Boolean, default: !1 },
    tag: { default: "div" },
    toggle: { type: Boolean, default: !1 },
    visible: { type: Boolean, default: !1 }
  }, {
    modelValue: { type: Boolean, default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["hidden", "hide", "hide-prevented", "show", "show-prevented", "shown"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BCollapse"), n = e, r = ($, S = {}) => new wt($, {
      cancelable: !1,
      target: d.value || null,
      relatedTarget: null,
      trigger: null,
      ...S,
      componentId: i.value
    }), u = we(t, "modelValue"), i = Ce(() => a.id, "collapse"), d = H(null), c = H(!1), f = H(u.value), p = h(() => ({
      show: f.value,
      "navbar-collapse": a.isNav,
      collapsing: c.value,
      closing: f.value && !u.value,
      "collapse-horizontal": a.horizontal
    })), v = () => {
      u.value = !1;
    }, m = () => {
      u.value = !0;
    }, B = () => {
      u.value = !u.value;
    }, k = h(() => ({
      toggle: B,
      show: m,
      hide: v,
      id: i.value,
      visible: u.value
    }));
    let _, C, g = a.skipAnimation;
    const x = () => {
      const $ = r("show", { cancelable: !0 });
      if (n("show", $), $.defaultPrevented) {
        n("show-prevented");
        return;
      }
      clearTimeout(C), clearTimeout(_), f.value = !0, !g && (c.value = !0, Oe(() => {
        d.value !== null && (a.horizontal ? d.value.style.width = `${d.value.scrollWidth}px` : d.value.style.height = `${d.value.scrollHeight}px`, _ = setTimeout(() => {
          c.value = !1, n("shown"), d.value !== null && (d.value.style.height = "", d.value.style.width = "");
        }, La(d.value)));
      }));
    }, y = () => {
      const $ = r("hide", { cancelable: !0 });
      if (n("hide", $), $.defaultPrevented) {
        n("hide-prevented");
        return;
      }
      if (clearTimeout(_), clearTimeout(C), d.value !== null) {
        if (g) {
          f.value = !1;
          return;
        }
        c.value ? (d.value.style.height = "", d.value.style.width = "") : a.horizontal ? d.value.style.width = `${d.value.scrollWidth}px` : d.value.style.height = `${d.value.scrollHeight}px`, d.value.offsetHeight, c.value = !0, Oe(() => {
          d.value !== null && (d.value.style.height = "", d.value.style.width = "", C = setTimeout(() => {
            f.value = !1, c.value = !1, n("hidden");
          }, La(d.value)));
        });
      }
    };
    return de(u, () => {
      u.value ? x() : y();
    }), De(() => {
      d.value !== null && !u.value && a.toggle && Oe(() => {
        u.value = !0;
      });
    }), de(
      () => a.skipAnimation,
      ($) => {
        g = $;
      }
    ), a.visible && (g = !0, u.value = !0, Oe(() => {
      g = a.skipAnimation;
    })), de(
      () => a.visible,
      ($) => {
        g = !0, $ ? m() : v(), Oe(() => {
          g = a.skipAnimation;
        });
      }
    ), $e(d, "bv-toggle", () => {
      u.value = !u.value;
    }), o({
      hide: v,
      isNav: a.isNav,
      show: m,
      toggle: B,
      visible: Fe(f)
    }), We(fl, {
      id: i,
      hide: v,
      show: m,
      toggle: B,
      visible: Fe(f),
      isNav: T(() => a.isNav)
    }), ($, S) => (b(), F(pe, null, [
      V($.$slots, "header", _e(Se(k.value))),
      (b(), L(fe(s(a).tag), J({
        id: s(i),
        ref_key: "element",
        ref: d,
        class: ["collapse", p.value],
        "is-nav": s(a).isNav
      }, $.$attrs), {
        default: R(() => [
          V($.$slots, "default", _e(Se(k.value)))
        ]),
        _: 3
      }, 16, ["id", "class", "is-nav"])),
      V($.$slots, "footer", _e(Se(k.value)))
    ], 64));
  }
}), Qi = ["aria-expanded", "aria-controls", "onClick"], eu = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BAccordionItem",
  props: /* @__PURE__ */ be({
    bodyAttrs: { default: void 0 },
    bodyClass: { default: void 0 },
    buttonAttrs: { default: void 0 },
    buttonClass: { default: void 0 },
    collapseClass: { default: void 0 },
    headerAttrs: { default: void 0 },
    headerClass: { default: void 0 },
    headerTag: { default: "h2" },
    horizontal: { type: Boolean, default: void 0 },
    id: { default: void 0 },
    isNav: { type: Boolean, default: void 0 },
    modelValue: { type: Boolean },
    tag: { default: void 0 },
    title: { default: void 0 },
    toggle: { type: Boolean, default: void 0 },
    visible: { type: Boolean, default: !1 },
    wrapperAttrs: { default: void 0 }
  }, {
    modelValue: { type: Boolean, default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["hidden", "hide", "hide-prevented", "show", "show-prevented", "shown"], ["update:modelValue"]),
  setup(t, { emit: o }) {
    const { class: e, ...l } = Lt(), n = U(t, "BAccordionItem"), r = o, u = we(t, "modelValue"), i = Ve(Jo, null), d = Ce(() => n.id, "accordion_item");
    return De(() => {
      u.value && !(i != null && i.free.value) && (i == null || i.setOpenItem(d.value)), !u.value && (i == null ? void 0 : i.openItem.value) === d.value && (u.value = !0);
    }), de(
      () => i == null ? void 0 : i.openItem.value,
      () => u.value = (i == null ? void 0 : i.openItem.value) === d.value && !(i != null && i.free.value)
    ), de(u, () => {
      u.value && !(i != null && i.free.value) && (i == null || i.setOpenItem(d.value));
    }), (c, f) => (b(), F("div", J({ class: "accordion-item" }, s(n).wrapperAttrs, { class: s(e) }), [
      ge(Wn, J({
        id: s(d),
        modelValue: u.value,
        "onUpdate:modelValue": f[0] || (f[0] = (p) => u.value = p),
        class: ["accordion-collapse", s(n).collapseClass],
        "aria-labelledby": `${s(d)}-heading`
      }, l, {
        tag: s(n).tag,
        toggle: s(n).toggle,
        horizontal: s(n).horizontal,
        visible: s(n).visible,
        "is-nav": s(n).isNav,
        onShow: f[1] || (f[1] = (p) => r("show", p)),
        onShown: f[2] || (f[2] = (p) => r("shown")),
        onHide: f[3] || (f[3] = (p) => r("hide", p)),
        onHidden: f[4] || (f[4] = (p) => r("hidden")),
        onHidePrevented: f[5] || (f[5] = (p) => r("hide-prevented")),
        onShowPrevented: f[6] || (f[6] = (p) => r("show-prevented"))
      }), {
        header: R(({ visible: p, toggle: v }) => [
          (b(), L(fe(s(n).headerTag), J({
            id: `${s(d)}-heading`,
            class: ["accordion-header", s(n).headerClass]
          }, s(n).headerAttrs), {
            default: R(() => [
              ae("button", J({ class: "accordion-button" }, s(n).buttonAttrs, {
                class: [{ collapsed: !p }, s(n).buttonClass],
                type: "button",
                "aria-expanded": p ? "true" : "false",
                "aria-controls": s(d),
                onClick: v
              }), [
                V(c.$slots, "title", {}, () => [
                  ce(oe(s(n).title), 1)
                ])
              ], 16, Qi)
            ]),
            _: 2
          }, 1040, ["id", "class"]))
        ]),
        default: R(() => [
          ae("div", J({ class: "accordion-body" }, s(n).bodyAttrs, {
            class: s(n).bodyClass
          }), [
            V(c.$slots, "default")
          ], 16)
        ]),
        _: 3
      }, 16, ["id", "modelValue", "class", "aria-labelledby", "tag", "toggle", "horizontal", "visible", "is-nav"])
    ], 16));
  }
}), tu = /* @__PURE__ */ q({
  __name: "BAlert",
  props: /* @__PURE__ */ be({
    closeClass: { default: void 0 },
    closeContent: { default: void 0 },
    closeLabel: { default: "Close" },
    closeVariant: { default: "secondary" },
    dismissible: { type: Boolean, default: !1 },
    fade: { type: Boolean, default: !1 },
    immediate: { type: Boolean, default: !0 },
    interval: { default: 1e3 },
    modelValue: { type: [Boolean, Number] },
    noHoverPause: { type: Boolean, default: !1 },
    showOnPause: { type: Boolean, default: !0 },
    variant: { default: "info" }
  }, {
    modelValue: { type: [Boolean, Number], default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["close", "close-countdown", "closed"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BAlert"), n = e, r = je(), u = H(null), i = we(t, "modelValue"), d = ul(u), c = Be(() => a.interval), f = T(() => !Pe(r.close)), p = T(() => typeof i.value == "boolean" ? 0 : i.value), v = h(() => ({
      [`alert-${a.variant}`]: a.variant !== null,
      "alert-dismissible": a.dismissible
    })), m = h(() => [a.closeClass, { "btn-close-custom": f.value }]), {
      isActive: B,
      pause: k,
      restart: _,
      resume: C,
      stop: g,
      isPaused: x,
      value: y
    } = fn(p, c, {
      immediate: typeof i.value == "number" && a.immediate
    }), $ = T(
      () => typeof i.value == "boolean" ? i.value : B.value || a.showOnPause && x.value
    ), S = h(() => ({
      variant: f.value ? a.closeVariant : void 0,
      class: m.value
    }));
    Et(() => {
      n("close-countdown", y.value);
    });
    const Y = () => {
      n("close"), typeof i.value == "boolean" ? i.value = !1 : (i.value = 0, g()), n("closed");
    }, K = () => {
      a.noHoverPause || k();
    };
    return de(d, (P) => {
      if (P) {
        K();
        return;
      }
      C();
    }), Qa(g), o({
      pause: k,
      restart: _,
      resume: C,
      stop: g
    }), (P, j) => (b(), L($a, {
      "no-fade": !s(a).fade,
      "trans-props": { enterToClass: "show" }
    }, {
      default: R(() => [
        $.value ? (b(), F("div", {
          key: 0,
          ref_key: "element",
          ref: u,
          class: W(["alert", v.value]),
          role: "alert",
          "aria-live": "polite",
          "aria-atomic": "true"
        }, [
          V(P.$slots, "default", {}, void 0, !0),
          s(a).dismissible ? (b(), F(pe, { key: 0 }, [
            f.value || s(a).closeContent ? (b(), L(vt, J({ key: 0 }, S.value, { onClick: Y }), {
              default: R(() => [
                V(P.$slots, "close", {}, () => [
                  ce(oe(s(a).closeContent), 1)
                ], !0)
              ]),
              _: 3
            }, 16)) : (b(), L(zt, J({
              key: 1,
              "aria-label": s(a).closeLabel
            }, S.value, { onClick: Y }), null, 16, ["aria-label"]))
          ], 64)) : ne("", !0)
        ], 2)) : ne("", !0)
      ]),
      _: 3
    }, 8, ["no-fade"]));
  }
}), au = /* @__PURE__ */ zn(tu, [["__scopeId", "data-v-96a91b13"]]), Yt = q({
  name: "RenderComponentOrSkip",
  inheritAttrs: !1,
  slots: Object,
  props: {
    tag: {
      type: String,
      default: "div"
    },
    to: {
      type: [String, Object],
      default: null
    },
    skip: {
      type: Boolean,
      default: !1
    }
  },
  setup(t, { slots: o, attrs: e }) {
    return () => {
      var l, a, n;
      return t.skip ? (l = o.default) == null ? void 0 : l.call(o) : t.tag === "Teleport" ? Ie(_t, { to: t.to }, [(a = o.default) == null ? void 0 : a.call(o)]) : Ie(t.tag, { ...e }, [(n = o.default) == null ? void 0 : n.call(o)]);
    };
  }
}), Un = /* @__PURE__ */ q({
  __name: "BBadge",
  props: {
    dotIndicator: { type: Boolean, default: !1 },
    pill: { type: Boolean, default: !1 },
    placement: { default: void 0 },
    tag: { default: "span" },
    active: { type: Boolean, default: void 0 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    icon: { type: Boolean, default: void 0 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: void 0 },
    variant: { default: "secondary" },
    bgVariant: { default: null },
    textVariant: { default: null }
  },
  setup(t) {
    const e = U(t, "BBadge"), l = st(e), { computedLink: a, computedLinkProps: n } = Ct(e, [
      "active",
      "activeClass",
      "append",
      "disabled",
      "href",
      "rel",
      "replace",
      "routerComponentName",
      "target",
      "to",
      "opacity",
      "opacityHover",
      "underlineVariant",
      "underlineOffset",
      "underlineOffsetHover",
      "underlineOpacity",
      "underlineOpacityHover",
      "icon"
    ]), r = T(() => a.value ? it : e.tag), u = h(() => {
      const d = e.placement ?? (e.dotIndicator ? "top-end" : void 0);
      return [
        "position-absolute",
        "translate-middle",
        {
          "start-0 top-0": d === "top-start",
          "start-0 top-50": d === "start",
          "start-0 top-100": d === "bottom-start",
          "start-50 top-0": d === "top",
          "start-50 top-100": d === "bottom",
          "start-100 top-0": d === "top-end",
          "start-100 top-50": d === "end",
          "start-100 top-100": d === "bottom-end"
        }
      ];
    }), i = h(() => [
      l.value,
      e.placement !== void 0 || e.dotIndicator === !0 ? u.value : void 0,
      {
        active: e.active,
        disabled: e.disabled,
        "rounded-pill": e.pill,
        "p-2 border border-light rounded-circle": e.dotIndicator,
        "text-decoration-none": a.value
      }
    ]);
    return (d, c) => (b(), L(fe(r.value), J({
      class: ["badge", i.value]
    }, s(n)), {
      default: R(() => [
        ge(Yt, J({
          skip: s(e).dotIndicator !== !0,
          tag: "span"
        }, s(e).dotIndicator ? { class: "visually-hidden" } : {}), {
          default: R(() => [
            V(d.$slots, "default")
          ]),
          _: 3
        }, 16, ["skip"])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), lu = {
  key: 0,
  class: "b-avatar-custom"
}, ou = {
  key: 1,
  class: "b-avatar-img"
}, nu = ["src", "alt"], su = {
  key: 3,
  class: "b-avatar-img"
}, ru = /* @__PURE__ */ ae("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "80%",
  height: "80%",
  fill: "currentColor",
  class: "bi bi-person-fill",
  viewBox: "0 0 16 16"
}, [
  /* @__PURE__ */ ae("path", { d: "M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6" })
], -1), iu = [
  ru
], Yl = 0.4, uu = /* @__PURE__ */ q({
  __name: "BAvatar",
  props: {
    alt: { default: "avatar" },
    badge: { type: [Boolean, String], default: !1 },
    badgeBgVariant: { default: null },
    badgePlacement: { default: "bottom-end" },
    badgeTextVariant: { default: null },
    badgeVariant: { default: "primary" },
    badgePill: { type: Boolean, default: !1 },
    badgeDotIndicator: { type: Boolean, default: !1 },
    button: { type: Boolean, default: !1 },
    buttonType: { default: "button" },
    size: { default: void 0 },
    square: { type: Boolean, default: !1 },
    src: { default: void 0 },
    text: { default: void 0 },
    active: { type: Boolean, default: void 0 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: {},
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: void 0 },
    variant: { default: "secondary" },
    bgVariant: { default: null },
    textVariant: { default: null },
    rounded: { type: [Boolean, String, Number], default: "circle" },
    roundedTop: { type: [Boolean, String, Number], default: void 0 },
    roundedBottom: { type: [Boolean, String, Number], default: void 0 },
    roundedStart: { type: [Boolean, String, Number], default: void 0 },
    roundedEnd: { type: [Boolean, String, Number], default: void 0 }
  },
  emits: ["click", "img-error"],
  setup(t, { emit: o }) {
    const e = t, l = o, a = je(), { computedLink: n, computedLinkProps: r } = Ct(e), u = Ve(Zo, null), i = ["sm", null, "lg"], d = Yl * 0.7, c = T(() => !Pe(a.default)), f = T(() => !Pe(a.badge)), p = T(() => !!e.badge || e.badge === "" || f.value), v = T(() => (u == null ? void 0 : u.square.value) || e.square), m = ga(() => e.size), B = ga(() => u == null ? void 0 : u.size.value), k = h(() => B.value ?? m.value), _ = T(() => (u == null ? void 0 : u.variant.value) ?? e.variant), C = T(() => (u == null ? void 0 : u.rounded.value) ?? e.rounded), g = T(() => (u == null ? void 0 : u.roundedTop.value) ?? e.roundedTop), x = T(() => (u == null ? void 0 : u.roundedBottom.value) ?? e.roundedBottom), y = T(() => (u == null ? void 0 : u.roundedStart.value) ?? e.roundedStart), $ = T(() => (u == null ? void 0 : u.roundedEnd.value) ?? e.roundedEnd), S = yl(() => ({
      rounded: C.value,
      roundedTop: g.value,
      roundedBottom: x.value,
      roundedStart: y.value,
      roundedEnd: $.value
    })), Y = T(() => e.badge === !0 ? "" : e.badge), K = h(() => !Y.value && !f.value), P = T(() => (u == null ? void 0 : u.textVariant.value) ?? e.textVariant), j = T(() => (u == null ? void 0 : u.bgVariant.value) ?? e.bgVariant), N = st(() => ({
      bgVariant: j.value,
      textVariant: P.value,
      variant: _.value
    })), O = h(() => [
      N.value,
      // Square overwrites all else
      v.value === !0 ? void 0 : S.value,
      {
        [`b-avatar-${e.size}`]: !!e.size && i.indexOf(m.value) !== -1,
        [`btn-${_.value}`]: e.button ? _.value !== null : !1,
        badge: !e.button && _.value !== null && c.value,
        btn: e.button,
        // Square is the same as rounded-0 class
        "rounded-0": v.value === !0
      }
    ]), z = h(() => ({
      fontSize: i.indexOf(k.value || null) === -1 ? `calc(${k.value} * ${d})` : ""
    })), w = h(() => {
      const M = i.indexOf(k.value || null) === -1 ? `calc(${k.value} * ${Yl})` : null;
      return M ? { fontSize: M } : {};
    }), A = h(() => {
      var Z;
      const M = ((Z = u == null ? void 0 : u.overlapScale) == null ? void 0 : Z.value) || 0, Q = k.value && M ? `calc(${k.value} * -${M})` : null;
      return Q ? { marginLeft: Q, marginRight: Q } : {};
    }), E = T(() => n.value ? it : e.button ? "button" : "span"), I = h(() => ({
      ...A.value,
      width: k.value ?? void 0,
      height: k.value ?? void 0
    })), X = (M) => {
      !e.disabled && (n.value || e.button) && l("click", M);
    }, D = (M) => {
      l("img-error", M);
    };
    return (M, Q) => (b(), L(fe(E.value), J({
      class: ["b-avatar", O.value],
      style: I.value
    }, s(r), {
      type: e.button && !s(n) ? e.buttonType : void 0,
      disabled: e.disabled || null,
      onClick: X
    }), {
      default: R(() => [
        c.value ? (b(), F("span", lu, [
          V(M.$slots, "default")
        ])) : e.src ? (b(), F("span", ou, [
          ae("img", {
            src: e.src,
            alt: e.alt,
            onError: D
          }, null, 40, nu)
        ])) : e.text ? (b(), F("span", {
          key: 2,
          class: "b-avatar-text",
          style: Me(w.value)
        }, oe(e.text), 5)) : (b(), F("span", su, iu)),
        p.value ? (b(), L(Un, {
          key: 4,
          pill: e.badgePill,
          "dot-indicator": e.badgeDotIndicator || K.value,
          variant: e.badgeVariant,
          "bg-variant": e.badgeBgVariant,
          "text-variant": e.badgeTextVariant,
          style: Me(z.value),
          placement: e.badgePlacement
        }, {
          default: R(() => [
            V(M.$slots, "badge", {}, () => [
              ce(oe(Y.value), 1)
            ])
          ]),
          _: 3
        }, 8, ["pill", "dot-indicator", "variant", "bg-variant", "text-variant", "style", "placement"])) : ne("", !0)
      ]),
      _: 3
    }, 16, ["class", "style", "type", "disabled"]));
  }
}), du = /* @__PURE__ */ q({
  __name: "BAvatarGroup",
  props: {
    overlap: { default: 0.3 },
    size: { default: void 0 },
    square: { type: Boolean, default: !1 },
    tag: { default: "div" },
    variant: { default: null },
    bgVariant: { default: null },
    textVariant: { default: null },
    rounded: { type: [Boolean, String, Number], default: "circle" },
    roundedTop: { type: [Boolean, String, Number], default: void 0 },
    roundedBottom: { type: [Boolean, String, Number], default: void 0 },
    roundedStart: { type: [Boolean, String, Number], default: void 0 },
    roundedEnd: { type: [Boolean, String, Number], default: void 0 }
  },
  setup(t) {
    const e = U(t, "BAvatarGroup"), l = Be(() => e.overlap), a = ga(() => e.size), n = T(() => Math.min(Math.max(l.value, 0), 1) / 2), r = h(() => {
      const u = a.value ? `calc(${a.value} * ${n.value})` : null;
      return u ? { paddingLeft: u, paddingRight: u } : {};
    });
    return We(Zo, {
      overlapScale: n,
      size: T(() => e.size),
      square: T(() => e.square),
      rounded: T(() => e.rounded),
      roundedTop: T(() => e.roundedTop),
      roundedBottom: T(() => e.roundedBottom),
      roundedStart: T(() => e.roundedStart),
      roundedEnd: T(() => e.roundedEnd),
      variant: T(() => e.variant),
      bgVariant: T(() => e.bgVariant),
      textVariant: T(() => e.textVariant)
    }), (u, i) => (b(), L(fe(s(e).tag), {
      class: "b-avatar-group",
      role: "group"
    }, {
      default: R(() => [
        ae("div", {
          class: "b-avatar-group-inner",
          style: Me(r.value)
        }, [
          V(u.$slots, "default")
        ], 4)
      ]),
      _: 3
    }));
  }
}), Kn = /* @__PURE__ */ q({
  __name: "BBreadcrumbItem",
  props: {
    ariaCurrent: { default: "location" },
    text: { default: void 0 },
    active: { type: Boolean, default: !1 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    icon: { type: Boolean, default: void 0 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: void 0 },
    variant: { default: void 0 }
  },
  emits: ["click"],
  setup(t, { emit: o }) {
    const l = U(t, "BBreadcrumbItem"), a = o, n = h(() => ({
      active: l.active
    })), r = T(() => l.active ? "span" : it), u = T(() => l.active ? l.ariaCurrent : void 0), i = h(
      () => r.value !== "span" ? pl(l, [
        "active",
        "activeClass",
        "append",
        "disabled",
        "href",
        "rel",
        "replace",
        "routerComponentName",
        "target",
        "to",
        "variant",
        "opacity",
        "opacityHover",
        "underlineVariant",
        "underlineOffset",
        "underlineOffsetHover",
        "underlineOpacity",
        "underlineOpacityHover",
        "icon"
      ]) : {}
    ), d = (c) => {
      if (l.disabled || l.active) {
        c.preventDefault(), c.stopImmediatePropagation();
        return;
      }
      l.disabled || a("click", c);
    };
    return (c, f) => (b(), F("li", {
      class: W(["breadcrumb-item", n.value])
    }, [
      (b(), L(fe(r.value), J({ "aria-current": u.value }, i.value, { onClick: d }), {
        default: R(() => [
          V(c.$slots, "default", {}, () => [
            ce(oe(s(l).text), 1)
          ])
        ]),
        _: 3
      }, 16, ["aria-current"]))
    ], 2));
  }
}), cu = { "aria-label": "breadcrumb" }, fu = { class: "breadcrumb" }, vu = /* @__PURE__ */ q({
  __name: "BBreadcrumb",
  props: {
    items: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BBreadcrumb"), l = cn(), a = h(() => {
      var i;
      const n = e.items || ((i = l.items) == null ? void 0 : i.value) || [];
      let r = !1;
      return n.map((d, c) => (typeof d == "string" && (d = { text: d }, c < n.length - 1 && (d.href = "#")), d.active && (r = !0), !d.active && !r && (d.active = c + 1 === n.length), d));
    });
    return (n, r) => (b(), F("nav", cu, [
      ae("ol", fu, [
        V(n.$slots, "prepend"),
        (b(!0), F(pe, null, ke(a.value, (u, i) => (b(), L(Kn, J({
          key: i,
          ref_for: !0
        }, u), {
          default: R(() => [
            ce(oe(u.text), 1)
          ]),
          _: 2
        }, 1040))), 128)),
        V(n.$slots, "default"),
        V(n.$slots, "append")
      ])
    ]));
  }
}), pu = /* @__PURE__ */ q({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: { default: "md" },
    tag: { default: "div" },
    vertical: { type: Boolean, default: !1 }
  },
  setup(t) {
    const e = U(t, "BButtonGroup"), l = h(() => ({
      "btn-group": !e.vertical,
      [`btn-group-${e.size}`]: e.size !== "md",
      "btn-group-vertical": e.vertical
    }));
    return (a, n) => (b(), L(fe(s(e).tag), {
      class: W(l.value),
      role: "group",
      "aria-label": s(e).ariaLabel
    }, {
      default: R(() => [
        V(a.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "aria-label"]));
  }
}), mu = ["role", "aria-label"], bu = /* @__PURE__ */ q({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { type: Boolean, default: !1 },
    role: { default: "toolbar" }
  },
  setup(t) {
    const e = U(t, "BButtonToolbar"), l = h(() => ({
      "justify-content-between": e.justify
    }));
    return (a, n) => (b(), F("div", {
      class: W([l.value, "btn-toolbar"]),
      role: s(e).role,
      "aria-label": s(e).ariaLabel
    }, [
      V(a.$slots, "default")
    ], 10, mu));
  }
}), gl = /* @__PURE__ */ q({
  __name: "BImg",
  props: {
    blank: { type: Boolean, default: !1 },
    blankColor: { default: "transparent" },
    block: { type: Boolean, default: !1 },
    fluid: { type: Boolean, default: !1 },
    fluidGrow: { type: Boolean, default: !1 },
    height: { default: void 0 },
    tag: { default: "img" },
    lazy: { type: Boolean, default: !1 },
    sizes: { default: void 0 },
    src: { default: void 0 },
    srcset: { default: void 0 },
    thumbnail: { type: Boolean, default: !1 },
    width: { default: void 0 },
    placement: { default: void 0 },
    rounded: { type: [Boolean, String, Number], default: !1 },
    roundedTop: { type: [Boolean, String, Number], default: void 0 },
    roundedBottom: { type: [Boolean, String, Number], default: void 0 },
    roundedStart: { type: [Boolean, String, Number], default: void 0 },
    roundedEnd: { type: [Boolean, String, Number], default: void 0 }
  },
  setup(t) {
    const e = U(t, "BImg"), l = Be(() => e.height ?? NaN), a = Be(() => e.width ?? NaN), n = yl(() => ({
      rounded: e.rounded,
      roundedTop: e.roundedTop,
      roundedBottom: e.roundedBottom,
      roundedStart: e.roundedStart,
      roundedEnd: e.roundedEnd
    })), r = h(
      () => typeof e.srcset == "string" ? e.srcset.split(",").filter((v) => v).join(",") : Array.isArray(e.srcset) ? e.srcset.filter((v) => v).join(",") : void 0
    ), u = h(
      () => typeof e.sizes == "string" ? e.sizes.split(",").filter((v) => v).join(",") : Array.isArray(e.sizes) ? e.sizes.filter((v) => v).join(",") : void 0
    ), i = h(() => {
      const v = Number.isNaN(a.value) ? void 0 : a.value, m = Number.isNaN(l.value) ? void 0 : l.value;
      if (e.blank) {
        if (v !== void 0 && m === void 0)
          return { height: v, width: v };
        if (v === void 0 && m !== void 0)
          return { height: m, width: m };
        if (v === void 0 && m === void 0)
          return { height: 1, width: 1 };
      }
      return {
        width: v,
        height: m
      };
    }), d = T(
      () => p(i.value.width, i.value.height, e.blankColor)
    ), c = h(() => ({
      "float-start": e.placement === "start",
      "float-end": e.placement === "end",
      "mx-auto": e.placement === "center"
    })), f = h(() => [
      n.value,
      c.value,
      {
        "img-thumbnail": e.thumbnail,
        "img-fluid": e.fluid || e.fluidGrow,
        "w-100": e.fluidGrow,
        "d-block": e.block || e.placement === "center"
      }
    ]), p = (v, m, B) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(`<svg width="${v}" height="${m}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ${v} ${m}" preserveAspectRatio="none">
    <rect width="100%" height="100%" style="fill:${B};"></rect>
    </svg>`)}`;
    return (v, m) => (b(), L(fe(s(e).tag), {
      class: W(f.value),
      src: s(e).blank ? d.value : s(e).src,
      width: i.value.width || void 0,
      height: i.value.height || void 0,
      srcset: s(e).blank ? void 0 : r.value,
      sizes: s(e).blank ? void 0 : u.value,
      loading: s(e).lazy ? "lazy" : "eager"
    }, null, 8, ["class", "src", "width", "height", "srcset", "sizes", "loading"]));
  }
}), hl = /* @__PURE__ */ q({
  __name: "BCardImg",
  props: {
    placement: { default: "top" },
    blank: { type: Boolean, default: void 0 },
    blankColor: { default: void 0 },
    block: { type: Boolean, default: void 0 },
    fluid: { type: Boolean, default: void 0 },
    fluidGrow: { type: Boolean, default: void 0 },
    height: { default: void 0 },
    tag: {},
    lazy: { type: Boolean, default: void 0 },
    sizes: { default: void 0 },
    src: { default: void 0 },
    srcset: { default: void 0 },
    thumbnail: { type: Boolean, default: void 0 },
    width: { default: void 0 },
    rounded: { type: [Boolean, String, Number], default: void 0 },
    roundedTop: { type: [Boolean, String, Number], default: void 0 },
    roundedBottom: { type: [Boolean, String, Number], default: void 0 },
    roundedStart: { type: [Boolean, String, Number], default: void 0 },
    roundedEnd: { type: [Boolean, String, Number], default: void 0 }
  },
  setup(t) {
    const e = U(t, "BCardImg"), l = h(() => ({
      "card-img-top": e.placement === "top",
      // TODO implement this class
      "card-img-end": e.placement === "end",
      "card-img-bottom": e.placement === "bottom",
      // TODO implement this class
      "card-img-start": e.placement === "start",
      "card-img": e.placement === "overlay"
    })), a = h(() => xa(e, ["placement"]));
    return (n, r) => (b(), L(gl, J(a.value, { class: l.value }), null, 16, ["class"]));
  }
}), yu = ["innerHTML"], Xn = /* @__PURE__ */ q({
  __name: "BCardHeadFoot",
  props: {
    borderVariant: { default: null },
    html: { default: void 0 },
    tag: { default: "div" },
    text: { default: void 0 },
    variant: { default: null },
    bgVariant: { default: null },
    textVariant: { default: null }
  },
  setup(t) {
    const o = t, e = st(o), l = h(() => [
      e.value,
      {
        [`border-${o.borderVariant}`]: o.borderVariant !== null
      }
    ]);
    return (a, n) => (b(), L(fe(a.tag), {
      class: W(l.value)
    }, {
      default: R(() => [
        a.html ? (b(), F("div", {
          key: 0,
          innerHTML: a.html
        }, null, 8, yu)) : V(a.$slots, "default", { key: 1 }, () => [
          ce(oe(a.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Yn = /* @__PURE__ */ q({
  __name: "BCardHeader",
  props: {
    borderVariant: { default: void 0 },
    html: { default: void 0 },
    tag: { default: "div" },
    text: { default: void 0 },
    variant: { default: void 0 },
    bgVariant: { default: void 0 },
    textVariant: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BCardHeader");
    return (l, a) => (b(), L(Xn, J({ class: "card-header" }, s(e)), {
      default: R(() => [
        V(l.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Zn = /* @__PURE__ */ q({
  __name: "BCardTitle",
  props: {
    tag: { default: "h4" },
    text: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BCardTitle");
    return (l, a) => (b(), L(fe(s(e).tag), { class: "card-title" }, {
      default: R(() => [
        V(l.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Jn = /* @__PURE__ */ q({
  __name: "BCardSubtitle",
  props: {
    text: { default: void 0 },
    tag: { default: "h6" },
    textVariant: { default: "body-secondary" }
  },
  setup(t) {
    const e = U(t, "BCardSubtitle"), l = h(() => ({
      [`text-${e.textVariant}`]: e.textVariant !== null
    }));
    return (a, n) => (b(), L(fe(s(e).tag), {
      class: W(["card-subtitle mb-2", l.value])
    }, {
      default: R(() => [
        V(a.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Qn = /* @__PURE__ */ q({
  __name: "BCardBody",
  props: {
    overlay: { type: Boolean, default: !1 },
    subtitle: { default: void 0 },
    subtitleTag: { default: "h4" },
    subtitleTextVariant: { default: void 0 },
    tag: { default: "div" },
    text: { default: void 0 },
    title: { default: void 0 },
    titleTag: { default: "h4" },
    variant: { default: null },
    bgVariant: { default: null },
    textVariant: { default: null }
  },
  setup(t) {
    const e = U(t, "BCardBody"), l = je(), a = st(e), n = T(() => !Pe(l.title)), r = T(() => !Pe(l.subtitle)), u = h(() => [
      a.value,
      e.overlay ? "card-img-overlay" : "card-body"
    ]);
    return (i, d) => (b(), L(fe(s(e).tag), {
      class: W(u.value)
    }, {
      default: R(() => [
        s(e).title || n.value ? (b(), L(Zn, {
          key: 0,
          tag: s(e).titleTag
        }, {
          default: R(() => [
            V(i.$slots, "title", {}, () => [
              ce(oe(s(e).title), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag"])) : ne("", !0),
        s(e).subtitle || r.value ? (b(), L(Jn, {
          key: 1,
          tag: s(e).subtitleTag,
          "text-variant": s(e).subtitleTextVariant
        }, {
          default: R(() => [
            V(i.$slots, "subtitle", {}, () => [
              ce(oe(s(e).subtitle), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag", "text-variant"])) : ne("", !0),
        V(i.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), es = /* @__PURE__ */ q({
  __name: "BCardFooter",
  props: {
    borderVariant: { default: void 0 },
    html: { default: void 0 },
    tag: { default: "div" },
    text: { default: void 0 },
    variant: { default: void 0 },
    bgVariant: { default: void 0 },
    textVariant: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BCardFooter");
    return (l, a) => (b(), L(Xn, J({ class: "card-footer" }, s(e)), {
      default: R(() => [
        V(l.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), ts = /* @__PURE__ */ q({
  __name: "BCard",
  props: {
    align: { default: void 0 },
    bodyBgVariant: { default: void 0 },
    bodyClass: { default: void 0 },
    bodyTag: { default: "div" },
    bodyText: { default: "" },
    bodyTextVariant: { default: void 0 },
    borderVariant: { default: null },
    footer: { default: void 0 },
    footerBgVariant: { default: void 0 },
    footerBorderVariant: { default: void 0 },
    footerClass: { default: void 0 },
    footerHtml: { default: "" },
    footerTag: { default: "div" },
    footerTextVariant: { default: void 0 },
    footerVariant: { default: null },
    header: { default: void 0 },
    headerBgVariant: { default: void 0 },
    headerBorderVariant: { default: void 0 },
    headerClass: { default: void 0 },
    headerHtml: { default: "" },
    headerTag: { default: "div" },
    headerTextVariant: { default: void 0 },
    headerVariant: { default: null },
    imgAlt: { default: void 0 },
    imgPlacement: { default: "top" },
    imgHeight: { default: void 0 },
    imgSrc: { default: void 0 },
    imgWidth: { default: void 0 },
    noBody: { type: Boolean, default: !1 },
    subtitle: { default: void 0 },
    subtitleTag: { default: "h6" },
    subtitleTextVariant: { default: "body-secondary" },
    tag: { default: "div" },
    title: { default: void 0 },
    titleTag: { default: "h4" },
    variant: { default: null },
    bgVariant: { default: null },
    textVariant: { default: null }
  },
  setup(t) {
    const e = U(t, "BCard"), l = je(), a = T(() => !Pe(l.header)), n = T(() => !Pe(l.footer)), r = st(e), u = h(() => [
      r.value,
      {
        [`text-${e.align}`]: e.align !== void 0,
        [`border-${e.borderVariant}`]: e.borderVariant !== null,
        "flex-row": e.imgPlacement === "start",
        "flex-row-reverse": e.imgPlacement === "end"
      }
    ]), i = h(() => ({
      src: e.imgSrc,
      alt: e.imgAlt,
      height: e.imgHeight,
      width: e.imgWidth,
      placement: e.imgPlacement
    })), d = va();
    return (c, f) => (b(), L(fe(s(e).tag), {
      class: W(["card", u.value])
    }, {
      default: R(() => [
        ge(s(d).define, null, {
          default: R(() => [
            V(c.$slots, "img", {}, () => [
              s(e).imgSrc ? (b(), L(hl, _e(J({ key: 0 }, i.value)), null, 16)) : ne("", !0)
            ])
          ]),
          _: 3
        }),
        s(e).imgPlacement !== "bottom" ? (b(), L(s(d).reuse, { key: 0 })) : ne("", !0),
        s(e).header || a.value || s(e).headerHtml ? (b(), L(Yn, {
          key: 1,
          "bg-variant": s(e).headerBgVariant,
          variant: s(e).headerVariant,
          "border-variant": s(e).headerBorderVariant,
          html: s(e).headerHtml,
          tag: s(e).headerTag,
          "text-variant": s(e).headerTextVariant,
          class: W(s(e).headerClass)
        }, {
          default: R(() => [
            V(c.$slots, "header", {}, () => [
              ce(oe(s(e).header), 1)
            ])
          ]),
          _: 3
        }, 8, ["bg-variant", "variant", "border-variant", "html", "tag", "text-variant", "class"])) : ne("", !0),
        s(e).noBody ? V(c.$slots, "default", { key: 3 }, () => [
          ce(oe(s(e).bodyText), 1)
        ]) : (b(), L(Qn, {
          key: 2,
          overlay: s(e).imgPlacement === "overlay",
          "bg-variant": s(e).bodyBgVariant,
          tag: s(e).bodyTag,
          "text-variant": s(e).bodyTextVariant,
          subtitle: s(e).subtitle,
          "subtitle-tag": s(e).subtitleTag,
          "subtitle-text-variant": s(e).subtitleTextVariant,
          title: s(e).title,
          "title-tag": s(e).titleTag,
          class: W(s(e).bodyClass)
        }, {
          default: R(() => [
            V(c.$slots, "default", {}, () => [
              ce(oe(s(e).bodyText), 1)
            ])
          ]),
          _: 3
        }, 8, ["overlay", "bg-variant", "tag", "text-variant", "subtitle", "subtitle-tag", "subtitle-text-variant", "title", "title-tag", "class"])),
        s(e).footer || n.value || s(e).footerHtml ? (b(), L(es, {
          key: 4,
          "bg-variant": s(e).footerBgVariant,
          "border-variant": s(e).footerBorderVariant,
          variant: s(e).footerVariant,
          html: s(e).footerHtml,
          tag: s(e).footerTag,
          "text-variant": s(e).footerTextVariant,
          class: W(s(e).footerClass)
        }, {
          default: R(() => [
            V(c.$slots, "footer", {}, () => [
              ce(oe(s(e).footer), 1)
            ])
          ]),
          _: 3
        }, 8, ["bg-variant", "border-variant", "variant", "html", "tag", "text-variant", "class"])) : ne("", !0),
        s(e).imgPlacement === "bottom" ? (b(), L(s(d).reuse, { key: 5 })) : ne("", !0)
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), gu = /* @__PURE__ */ q({
  __name: "BCardGroup",
  props: {
    columns: { type: Boolean, default: !1 },
    deck: { type: Boolean, default: !1 },
    tag: { default: "div" }
  },
  setup(t) {
    const e = U(t, "BCardGroup"), l = T(
      () => e.deck ? "card-deck" : e.columns ? "card-columns" : "card-group"
    );
    return (a, n) => (b(), L(fe(s(e).tag), {
      class: W(l.value)
    }, {
      default: R(() => [
        V(a.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), hu = /* @__PURE__ */ q({
  __name: "BCardText",
  props: {
    tag: { default: "p" },
    text: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BCardText");
    return (l, a) => (b(), L(fe(s(e).tag), { class: "card-text" }, {
      default: R(() => [
        V(l.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Bu = ["id"], _u = {
  key: 0,
  class: "carousel-indicators"
}, wu = ["aria-current", "aria-label", "onClick"], Cu = /* @__PURE__ */ ae("span", {
  class: "carousel-control-prev-icon",
  "aria-hidden": "true"
}, null, -1), ku = { class: "visually-hidden" }, Tu = /* @__PURE__ */ ae("span", {
  class: "carousel-control-next-icon",
  "aria-hidden": "true"
}, null, -1), Su = { class: "visually-hidden" }, xu = /* @__PURE__ */ q({
  __name: "BCarousel",
  props: /* @__PURE__ */ be({
    background: { default: void 0 },
    controls: { type: Boolean, default: !1 },
    controlsNextText: { default: "Next" },
    controlsPrevText: { default: "Previous" },
    fade: { type: Boolean, default: !1 },
    id: { default: void 0 },
    imgHeight: { default: void 0 },
    imgWidth: { default: void 0 },
    indicators: { type: Boolean, default: !1 },
    indicatorsButtonLabel: { default: "Slide" },
    interval: { default: 5e3 },
    keyboard: { type: Boolean, default: !0 },
    modelValue: {},
    noHoverPause: { type: Boolean, default: !1 },
    noTouch: { type: Boolean, default: !1 },
    noWrap: { type: Boolean, default: !1 },
    ride: { type: [Boolean, String], default: !1 },
    rideReverse: { type: Boolean, default: !1 },
    touchThreshold: { default: 50 }
  }, {
    modelValue: { default: 0 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["slide", "slid"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BCarousel"), n = e, r = je(), u = Ce(() => a.id, "carousel"), i = we(t, "modelValue"), d = H(null), c = Be(() => a.touchThreshold), f = H(null);
    De(() => {
      var Z, G;
      f.value = ((G = (Z = d.value) == null ? void 0 : Z.find((se) => se.$el.style.display !== "none")) == null ? void 0 : G._interval) ?? null;
    });
    const p = Be(() => f.value ?? a.interval), v = H(!1), m = H(!1), B = H(!0), k = H(null), _ = H(null), C = H(i.value), g = ul(_), x = T(
      () => `carousel-item carousel-item-${B.value ? "prev" : "next"} carousel-item-${B.value ? "end" : "start"}`
    ), y = T(
      () => `carousel-item active carousel-item-${B.value ? "start" : "end"}`
    ), { pause: $, resume: S } = Mo(
      () => {
        a.rideReverse ? O() : z();
      },
      p,
      { immediate: a.ride === "carousel" }
    ), Y = T(
      () => a.ride === !0 && m.value === !0 || a.ride === "carousel"
    ), K = h(() => jr(r.default, "BCarouselSlide")), P = h(() => ({ "carousel-fade": a.fade })), j = (Z) => {
      var G;
      return new po(Z, {
        componentId: u.value,
        cancelable: !1,
        target: _.value,
        direction: B.value ? "right" : "left",
        from: C.value,
        to: i.value,
        relatedTarget: ((G = k.value) == null ? void 0 : G.children[i.value]) ?? null
      });
    }, N = (Z) => {
      if (v.value !== !0) {
        if (a.ride === !0 && (m.value = !0), Y.value === !0 && S(), B.value = !(Z < i.value), Z >= K.value.length) {
          if (a.noWrap)
            return;
          i.value = 0;
          return;
        }
        if (Z < 0) {
          if (a.noWrap)
            return;
          i.value = K.value.length - 1;
          return;
        }
        C.value = i.value, i.value = Z;
      }
    }, O = () => {
      N(i.value - 1);
    }, z = () => {
      N(i.value + 1);
    }, w = (Z) => {
      a.keyboard !== !1 && Z();
    }, A = () => {
      a.noHoverPause || $();
    }, E = () => {
      Y.value && S();
    }, { lengthX: I } = Ir(_, {
      passive: !0,
      onSwipeStart() {
        a.noTouch !== !0 && $();
      },
      onSwipeEnd() {
        if (a.noTouch === !0)
          return;
        const Z = () => {
          Y.value !== !1 && S();
        };
        if (I.value >= c.value) {
          z(), Z();
          return;
        }
        I.value <= -c.value && (O(), Z());
      }
    }), X = () => {
      n("slide", j("slide")), v.value = !0;
    }, D = () => {
      n("slid", j("slid")), v.value = !1;
    }, M = (Z) => {
      i.value !== 0 && Z.classList.add("carousel-item");
    }, Q = (Z) => {
      var G, se;
      f.value = ((se = (G = d.value) == null ? void 0 : G.find((ie) => ie.$el === Z)) == null ? void 0 : se._interval) ?? null;
    };
    return Le(
      "ArrowLeft",
      () => {
        w(O);
      },
      { target: _ }
    ), Le(
      "ArrowRight",
      () => {
        w(z);
      },
      { target: _ }
    ), de(
      () => a.ride,
      () => {
        m.value = !1;
      }
    ), de(g, (Z) => {
      if (Z) {
        A();
        return;
      }
      E();
    }), o({
      next: z,
      pause: $,
      prev: O,
      resume: S
    }), We(Uo, {
      background: T(() => a.background),
      width: T(() => a.imgWidth),
      height: T(() => a.imgHeight)
    }), (Z, G) => (b(), F("div", {
      id: s(u),
      ref_key: "element",
      ref: _,
      class: W(["carousel slide pointer-event", P.value])
    }, [
      s(a).indicators ? (b(), F("div", _u, [
        (b(!0), F(pe, null, ke(K.value.length, (se, ie) => (b(), F("button", {
          key: ie,
          type: "button",
          "data-bs-target": "",
          class: W(ie === i.value ? "active" : ""),
          "aria-current": ie === i.value ? !0 : void 0,
          "aria-label": `${s(a).indicatorsButtonLabel} ${ie}`,
          onClick: (te) => N(ie)
        }, null, 10, wu))), 128))
      ])) : ne("", !0),
      ae("div", {
        ref_key: "relatedTarget",
        ref: k,
        class: "carousel-inner"
      }, [
        ge(vo, {
          "enter-from-class": x.value,
          "enter-active-class": x.value,
          "enter-to-class": x.value,
          "leave-from-class": y.value,
          "leave-active-class": y.value,
          "leave-to-class": y.value,
          onBeforeLeave: X,
          onAfterLeave: D,
          onAfterEnter: M,
          onEnter: Q
        }, {
          default: R(() => [
            (b(!0), F(pe, null, ke(K.value, (se, ie) => dt((b(), L(fe(se), {
              key: ie,
              ref_for: !0,
              ref_key: "slideValues",
              ref: d,
              class: W({ active: ie === i.value && v.value === !1 })
            }, null, 8, ["class"])), [
              [Kt, ie === i.value]
            ])), 128))
          ]),
          _: 1
        }, 8, ["enter-from-class", "enter-active-class", "enter-to-class", "leave-from-class", "leave-active-class", "leave-to-class"])
      ], 512),
      s(a).controls ? (b(), F(pe, { key: 1 }, [
        ae("button", {
          class: "carousel-control-prev",
          type: "button",
          onClick: O
        }, [
          Cu,
          ae("span", ku, oe(s(a).controlsPrevText), 1)
        ]),
        ae("button", {
          class: "carousel-control-next",
          type: "button",
          onClick: z
        }, [
          Tu,
          ae("span", Su, oe(s(a).controlsNextText), 1)
        ])
      ], 64)) : ne("", !0)
    ], 10, Bu));
  }
}), $u = ["innerHTML"], Au = { key: 1 }, Vu = ["innerHTML"], Nu = { key: 1 }, Ou = /* @__PURE__ */ q({
  __name: "BCarouselSlide",
  props: {
    background: { default: void 0 },
    caption: { default: void 0 },
    captionHtml: { default: void 0 },
    captionTag: { default: "h3" },
    contentTag: { default: "div" },
    contentVisibleUp: { default: void 0 },
    id: { default: void 0 },
    imgAlt: { default: void 0 },
    imgBlank: { type: Boolean, default: !1 },
    imgBlankColor: { default: "transparent" },
    imgHeight: { default: void 0 },
    imgSrc: { default: void 0 },
    imgSrcset: { default: void 0 },
    imgWidth: { default: void 0 },
    interval: { default: void 0 },
    text: { default: void 0 },
    textHtml: { default: void 0 },
    textTag: { default: "p" }
  },
  setup(t, { expose: o }) {
    const l = U(t, "BCarouselSlide"), a = je(), n = Ve(Uo, null), r = T(() => l.text || l.textHtml || !Pe(a.text)), u = T(() => l.caption || l.captionHtml || !Pe(a.caption)), i = T(() => r.value || u.value || !Pe(a.default)), d = h(() => ({
      background: `${l.background || (n == null ? void 0 : n.background.value) || "rgb(171, 171, 171)"} none repeat scroll 0% 0%`
    })), c = h(() => ({
      "d-none": l.contentVisibleUp !== void 0,
      [`d-${l.contentVisibleUp}-block`]: l.contentVisibleUp !== void 0
    }));
    return o({
      _interval: T(() => l.interval)
    }), (f, p) => (b(), F("div", {
      class: "carousel-item",
      style: Me(d.value)
    }, [
      V(f.$slots, "img", {}, () => {
        var v, m;
        return [
          ge(gl, {
            class: "d-block w-100",
            alt: s(l).imgAlt,
            srcset: s(l).imgSrcset,
            src: s(l).imgSrc,
            width: s(l).imgWidth || ((v = s(n)) == null ? void 0 : v.width.value),
            height: s(l).imgHeight || ((m = s(n)) == null ? void 0 : m.height.value),
            blank: s(l).imgBlank,
            "blank-color": s(l).imgBlankColor
          }, null, 8, ["alt", "srcset", "src", "width", "height", "blank", "blank-color"])
        ];
      }),
      i.value ? (b(), L(fe(s(l).contentTag), {
        key: 0,
        class: W(["carousel-caption", c.value])
      }, {
        default: R(() => [
          u.value ? (b(), L(fe(s(l).captionTag), { key: 0 }, {
            default: R(() => [
              V(f.$slots, "caption", {}, () => [
                s(l).captionHtml ? (b(), F("span", {
                  key: 0,
                  innerHTML: s(l).captionHtml
                }, null, 8, $u)) : (b(), F("span", Au, oe(s(l).caption), 1))
              ])
            ]),
            _: 3
          })) : ne("", !0),
          r.value ? (b(), L(fe(s(l).textTag), { key: 1 }, {
            default: R(() => [
              V(f.$slots, "text", {}, () => [
                s(l).textHtml ? (b(), F("span", {
                  key: 0,
                  innerHTML: s(l).textHtml
                }, null, 8, Vu)) : (b(), F("span", Nu, oe(s(l).text), 1))
              ])
            ]),
            _: 3
          })) : ne("", !0),
          V(f.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"])) : ne("", !0)
    ], 4));
  }
}), Dt = /* @__PURE__ */ q({
  __name: "BCol",
  props: {
    alignSelf: { default: void 0 },
    tag: { default: "div" },
    order: { default: void 0 },
    offset: { default: void 0 },
    cols: { default: void 0 },
    col: { type: Boolean, default: !1 },
    offsetSm: { default: void 0 },
    offsetMd: { default: void 0 },
    offsetLg: { default: void 0 },
    offsetXl: { default: void 0 },
    offsetXxl: { default: void 0 },
    orderSm: { default: void 0 },
    orderMd: { default: void 0 },
    orderLg: { default: void 0 },
    orderXl: { default: void 0 },
    orderXxl: { default: void 0 },
    sm: { type: [Boolean, Number, String], default: !1 },
    md: { type: [Boolean, Number, String], default: !1 },
    lg: { type: [Boolean, Number, String], default: !1 },
    xl: { type: [Boolean, Number, String], default: !1 },
    xxl: { type: [Boolean, Number, String], default: !1 }
  },
  setup(t) {
    const e = U(t, "BCol"), l = h(() => [
      ...la(
        {
          sm: e.sm,
          md: e.md,
          lg: e.lg,
          xl: e.xl,
          xxl: e.xxl
        },
        ["sm", "md", "lg", "xl", "xxl"],
        "col"
      ),
      ...la(
        {
          order: e.order,
          orderLg: e.orderLg,
          orderMd: e.orderMd,
          orderSm: e.orderSm,
          orderXl: e.orderXl,
          orderXxl: e.orderXxl
        },
        ["order", "orderLg", "orderMd", "orderSm", "orderXl", "orderXxl"],
        "order"
      ),
      ...la(
        {
          offset: e.offset,
          offsetLg: e.offsetLg,
          offsetMd: e.offsetMd,
          offsetSm: e.offsetSm,
          offsetXl: e.offsetXl,
          offsetXxl: e.offsetXxl
        },
        ["offset", "offsetLg", "offsetMd", "offsetSm", "offsetXl", "offsetXxl"],
        "offset"
      )
    ]), a = h(() => [
      l.value,
      {
        col: e.col || !l.value.some((n) => n.startsWith("col-")) && !e.cols,
        [`col-${e.cols}`]: e.cols !== void 0,
        [`offset-${e.offset}`]: e.offset !== void 0,
        [`order-${e.order}`]: e.order !== void 0,
        [`align-self-${e.alignSelf}`]: e.alignSelf !== void 0
      }
    ]);
    return (n, r) => (b(), L(fe(s(e).tag), {
      class: W(a.value)
    }, {
      default: R(() => [
        V(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Fu = /* @__PURE__ */ q({
  __name: "BContainer",
  props: {
    fluid: { type: [Boolean, String], default: !1 },
    gutterX: { default: void 0 },
    gutterY: { default: void 0 },
    tag: { default: "div" }
  },
  setup(t) {
    const e = U(t, "BContainer"), l = h(() => ({
      container: e.fluid === !1,
      "container-fluid": e.fluid === !0,
      [`container-${e.fluid}`]: typeof e.fluid == "string",
      [`gx-${e.gutterX}`]: e.gutterX !== void 0,
      [`gy-${e.gutterY}`]: e.gutterY !== void 0
    }));
    return (a, n) => (b(), L(fe(s(e).tag), {
      class: W(l.value)
    }, {
      default: R(() => [
        V(a.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Pu = { class: "visually-hidden" }, Iu = ["aria-labelledby", "role"], as = /* @__PURE__ */ q({
  __name: "BDropdown",
  props: /* @__PURE__ */ be({
    ariaLabel: { default: void 0 },
    autoClose: { type: [Boolean, String], default: !0 },
    boundary: { default: "clippingAncestors" },
    boundaryPadding: { default: void 0 },
    center: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    dropend: { type: Boolean, default: !1 },
    dropstart: { type: Boolean, default: !1 },
    dropup: { type: Boolean, default: !1 },
    end: { type: Boolean, default: !1 },
    floatingMiddleware: { default: void 0 },
    id: { default: void 0 },
    isNav: { type: Boolean, default: !1 },
    lazy: { type: Boolean, default: !1 },
    menuClass: { default: void 0 },
    modelValue: { type: Boolean },
    noCaret: { type: Boolean, default: !1 },
    noFlip: { type: Boolean, default: !1 },
    noShift: { type: Boolean, default: !1 },
    noSize: { type: Boolean, default: !1 },
    offset: { default: 0 },
    role: { default: "menu" },
    size: { default: "md" },
    skipWrapper: { type: Boolean, default: !1 },
    split: { type: Boolean, default: !1 },
    splitButtonType: { default: "button" },
    splitClass: { default: void 0 },
    splitDisabled: { type: Boolean, default: void 0 },
    splitHref: { default: void 0 },
    splitTo: { default: void 0 },
    splitVariant: { default: void 0 },
    strategy: { default: "absolute" },
    text: { default: void 0 },
    toggleClass: { default: void 0 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "secondary" },
    wrapperClass: { default: void 0 },
    teleportDisabled: { default: !1 },
    teleportTo: { default: void 0 }
  }, {
    modelValue: { type: Boolean, default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["click", "hidden", "hide", "hide-prevented", "show", "show-prevented", "shown", "toggle"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BDropdown"), n = e, r = Ce(() => a.id, "dropdown"), u = we(t, "modelValue"), i = Ve(un, !1), d = T(
      () => typeof a.offset == "string" || typeof a.offset == "number" ? a.offset : NaN
    ), c = Be(d), f = H(null), p = H(null), v = H(null), m = H(null), B = h(
      () => cl(a.boundary) ? a.boundary : void 0
    ), k = h(
      () => qo(a.boundary) ? a.boundary : void 0
    ), _ = T(() => a.split ? p.value : v.value);
    Le(
      "Escape",
      () => {
        u.value = !u.value;
      },
      { target: _ }
    ), Le(
      "Escape",
      () => {
        u.value = !u.value;
      },
      { target: f }
    );
    const C = (A, E) => {
      var X, D, M, Q, Z, G, se;
      if ((D = f.value) != null && D.contains((X = A.target) == null ? void 0 : X.closest("form")) || /input|select|option|textarea|form/i.test((M = A.target) == null ? void 0 : M.tagName))
        return;
      if (A.preventDefault(), !u.value) {
        open(), Oe(() => C(A, E));
        return;
      }
      const I = (Q = f.value) == null ? void 0 : Q.querySelectorAll(".dropdown-item:not(.disabled):not(:disabled)");
      if (I)
        if ((Z = f.value) != null && Z.contains(document.activeElement)) {
          const ie = f.value.querySelector(".dropdown-item:focus"), te = Array.prototype.indexOf.call(I, ie) + E;
          te >= 0 && te < (I == null ? void 0 : I.length) && ((G = I[te]) == null || G.focus());
        } else
          (se = I[E === -1 ? I.length - 1 : 0]) == null || se.focus();
    };
    Le("ArrowUp", (A) => C(A, -1), { target: _ }), Le("ArrowDown", (A) => C(A, 1), { target: _ }), Le("ArrowUp", (A) => C(A, -1), { target: f }), Le("ArrowDown", (A) => C(A, 1), { target: f });
    const g = h(
      () => Hr({
        top: a.dropup,
        start: a.dropstart,
        end: a.dropend,
        alignCenter: a.center,
        alignEnd: a.end
      })
    ), x = H({}), y = h(() => {
      if (a.floatingMiddleware !== void 0)
        return a.floatingMiddleware;
      const A = typeof a.offset == "string" || typeof a.offset == "number" ? c.value : a.offset, E = [Bo(A)];
      return a.noFlip === !1 && E.push(
        go({
          boundary: B.value,
          rootBoundary: k.value,
          padding: a.boundaryPadding
        })
      ), a.noShift === !1 && E.push(
        _o({
          boundary: B.value,
          rootBoundary: k.value,
          padding: a.boundaryPadding
        })
      ), a.noSize === !1 && E.push(
        wo({
          boundary: B.value,
          rootBoundary: k.value,
          padding: a.boundaryPadding,
          apply({ availableWidth: I, availableHeight: X }) {
            x.value = {
              maxHeight: X && u.value ? `${X}px` : void 0,
              maxWidth: I && u.value ? `${I}px` : void 0
            };
          }
        })
      ), E;
    }), { update: $, floatingStyles: S } = Po(_, f, {
      placement: g,
      middleware: y,
      strategy: T(() => a.strategy),
      whileElementsMounted: No
    }), Y = h(() => [
      a.wrapperClass,
      {
        "btn-group": !a.wrapperClass && a.split,
        dropdown: !a.wrapperClass && !a.split,
        dropup: a.dropup,
        dropend: a.dropend,
        dropstart: a.dropstart,
        "position-static": a.boundary !== "clippingAncestors" && !a.isNav
      }
    ]), K = h(() => [
      a.split ? a.splitClass : a.toggleClass,
      {
        "nav-link": a.isNav,
        "dropdown-toggle": !a.split,
        "dropdown-toggle-no-caret": a.noCaret && !a.split,
        show: a.split ? void 0 : u.value
      }
    ]), P = () => {
      w();
    }, j = (A) => {
      a.split ? n("click", A) : P();
    };
    Ho(
      f,
      () => {
        u.value && (a.autoClose === !0 || a.autoClose === "outside") && w();
      },
      { ignore: [p, v] }
    );
    const N = () => {
      u.value && (a.autoClose === !0 || a.autoClose === "inside") && w();
    }, O = () => {
      u.value && w();
    }, z = () => {
      u.value || w();
    }, w = () => {
      var I, X;
      n("toggle");
      const A = u.value, E = new wt(A ? "hide" : "show");
      if (n(A ? "hide" : "show", E), E.defaultPrevented) {
        n(A ? "hide-prevented" : "show-prevented");
        return;
      }
      u.value = !A, n(A ? "hidden" : "shown"), (X = (I = m.value) == null ? void 0 : I.dispatchEvent) == null || X.call(I, new Event("forceHide"));
    };
    return de(u, () => {
      $();
    }), o({
      hide: O,
      show: z,
      toggle: w
    }), We(tn, {
      id: r,
      show: z,
      hide: O,
      toggle: w,
      visible: T(() => u.value),
      isNav: T(() => a.isNav)
    }), (A, E) => (b(), L(Yt, {
      ref_key: "wrapper",
      ref: m,
      skip: s(i) || s(a).skipWrapper,
      class: W(Y.value)
    }, {
      default: R(() => [
        ge(vt, {
          id: s(r),
          ref_key: "splitButton",
          ref: v,
          variant: s(a).splitVariant || s(a).variant,
          size: s(a).size,
          class: W(K.value),
          disabled: s(a).splitDisabled || s(a).disabled,
          type: s(a).splitButtonType,
          "aria-label": s(a).ariaLabel,
          "aria-expanded": s(a).split ? void 0 : u.value,
          "aria-haspopup": s(a).split ? void 0 : "menu",
          href: s(a).split ? s(a).splitHref : void 0,
          to: s(a).split && s(a).splitTo ? s(a).splitTo : void 0,
          onClick: j
        }, {
          default: R(() => [
            V(A.$slots, "button-content", {}, () => [
              ce(oe(s(a).text), 1)
            ])
          ]),
          _: 3
        }, 8, ["id", "variant", "size", "class", "disabled", "type", "aria-label", "aria-expanded", "aria-haspopup", "href", "to"]),
        s(a).split ? (b(), L(vt, {
          key: 0,
          ref_key: "button",
          ref: p,
          variant: s(a).variant,
          size: s(a).size,
          disabled: s(a).disabled,
          class: W([[s(a).toggleClass, { show: u.value }], "dropdown-toggle-split dropdown-toggle"]),
          "aria-expanded": u.value,
          "aria-haspopup": "menu",
          onClick: P
        }, {
          default: R(() => [
            ae("span", Pu, [
              V(A.$slots, "toggle-text", {}, () => [
                ce(oe(s(a).toggleText), 1)
              ])
            ])
          ]),
          _: 3
        }, 8, ["variant", "size", "disabled", "class", "aria-expanded"])) : ne("", !0),
        (b(), L(_t, {
          to: s(a).teleportTo,
          disabled: !s(a).teleportTo || s(a).teleportDisabled
        }, [
          !s(a).lazy || u.value ? dt((b(), F("ul", {
            key: 0,
            ref_key: "floating",
            ref: f,
            style: Me([s(S), x.value]),
            class: W(["dropdown-menu overflow-auto", [s(a).menuClass, { show: u.value }]]),
            "aria-labelledby": s(r),
            role: s(a).role,
            onClick: N
          }, [
            V(A.$slots, "default", {
              hide: O,
              show: z
            })
          ], 14, Iu)), [
            [Kt, s(a).lazy || u.value]
          ]) : ne("", !0)
        ], 8, ["to", "disabled"]))
      ]),
      _: 3
    }, 8, ["skip", "class"]));
  }
}), Eu = { role: "presentation" }, Lu = /* @__PURE__ */ q({
  __name: "BDropdownDivider",
  props: {
    tag: { default: "hr" }
  },
  setup(t) {
    const e = U(t, "BDropdownDivider");
    return (l, a) => (b(), F("li", Eu, [
      (b(), L(fe(s(e).tag), {
        class: "dropdown-divider",
        role: "separator",
        "aria-orientation": "horizontal"
      }))
    ]));
  }
}), Ru = { role: "presentation" }, zu = /* @__PURE__ */ q({
  __name: "BDropdownForm",
  setup(t) {
    return (o, e) => (b(), F("li", Ru, [
      ae("form", J({ class: "dropdown-item-text" }, o.$attrs), [
        V(o.$slots, "default")
      ], 16)
    ]));
  }
}), Mu = { role: "presentation" }, Hu = ["id", "aria-describedby"], Du = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BDropdownGroup",
  props: {
    ariaDescribedby: { default: void 0 },
    header: { default: void 0 },
    headerClass: { default: void 0 },
    headerTag: { default: "header" },
    headerVariant: { default: null },
    id: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BDropdownGroup"), l = T(() => e.id ? `${e.id}_group_dd_header` : void 0), a = T(() => e.headerTag === "header" ? void 0 : "heading"), n = h(() => [
      e.headerClass,
      {
        [`text-${e.headerVariant}`]: e.headerVariant !== null
      }
    ]);
    return (r, u) => (b(), F("li", Mu, [
      (b(), L(fe(s(e).headerTag), {
        id: l.value,
        class: W(["dropdown-header", n.value]),
        role: a.value
      }, {
        default: R(() => [
          V(r.$slots, "header", {}, () => [
            ce(oe(s(e).header), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "class", "role"])),
      ae("ul", J({
        id: s(e).id,
        role: "group",
        class: "list-unstyled"
      }, r.$attrs, {
        "aria-describedby": s(e).ariaDescribedby || l.value
      }), [
        V(r.$slots, "default")
      ], 16, Hu)
    ]));
  }
}), ju = { class: "dropdown-header" }, qu = /* @__PURE__ */ q({
  __name: "BDropdownHeader",
  setup(t) {
    return (o, e) => (b(), F("li", null, [
      ae("h6", ju, [
        V(o.$slots, "default")
      ])
    ]));
  }
}), Gu = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BDropdownItem",
  props: {
    linkClass: { default: void 0 },
    wrapperAttrs: { default: void 0 },
    active: { type: Boolean, default: void 0 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    icon: { type: Boolean, default: void 0 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: void 0 },
    variant: { default: null }
  },
  emits: ["click"],
  setup(t, { emit: o }) {
    const l = U(t, "BDropdownItem"), a = o, { class: n, ...r } = Lt(), { computedLink: u, computedLinkProps: i } = Ct(l), d = h(() => [
      l.linkClass,
      {
        active: l.active,
        disabled: l.disabled,
        [`text-${l.variant}`]: l.variant !== null
      }
    ]), c = T(() => u.value ? it : l.href ? "a" : "button"), f = Ve(fl, null), p = Ve(tn, null), v = Ve(vl, null), m = (B) => {
      var k, _, C;
      a("click", B), v !== null && ((k = v == null ? void 0 : v.autoClose) == null ? void 0 : k.value) === !0 && ((_ = f == null ? void 0 : f.hide) == null || _.call(f)), (C = p == null ? void 0 : p.hide) == null || C.call(p);
    };
    return (B, k) => (b(), F("li", J({
      role: "presentation",
      class: s(n)
    }, s(l).wrapperAttrs), [
      (b(), L(fe(c.value), J({
        class: ["dropdown-item", d.value],
        disabled: s(l).disabled,
        "aria-disabled": s(l).disabled ? !0 : null,
        "aria-current": s(l).active ? !0 : null,
        href: c.value === "a" ? s(l).href : null,
        rel: s(l).rel,
        role: "menuitem",
        type: c.value === "button" ? "button" : null,
        target: s(l).target
      }, { ...s(i), ...r }, { onClick: m }), {
        default: R(() => [
          V(B.$slots, "default")
        ]),
        _: 3
      }, 16, ["class", "disabled", "aria-disabled", "aria-current", "href", "rel", "type", "target"]))
    ], 16));
  }
}), Wu = { role: "presentation" }, Uu = ["disabled"], Ku = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BDropdownItemButton",
  props: {
    active: { type: Boolean, default: !1 },
    activeClass: { default: "active" },
    buttonClass: { default: void 0 },
    disabled: { type: Boolean, default: !1 },
    variant: { default: null }
  },
  emits: ["click"],
  setup(t, { emit: o }) {
    const l = U(t, "BDropdownItemButton"), a = o, n = h(() => [
      l.buttonClass,
      {
        [l.activeClass]: l.active,
        disabled: l.disabled,
        [`text-${l.variant}`]: l.variant !== null
      }
    ]), r = (u) => {
      a("click", u);
    };
    return (u, i) => (b(), F("li", Wu, [
      ae("button", {
        role: "menu",
        type: "button",
        class: W(["dropdown-item", n.value]),
        disabled: s(l).disabled,
        onClick: r
      }, [
        V(u.$slots, "default")
      ], 10, Uu)
    ]));
  }
}), Xu = { role: "presentation" }, Yu = /* @__PURE__ */ q({
  __name: "BDropdownText",
  props: {
    text: { default: "" }
  },
  setup(t) {
    const e = U(t, "BDropdownText");
    return (l, a) => (b(), F("li", Xu, [
      ae("span", J({ class: "dropdown-item-text" }, l.$attrs), [
        V(l.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ], 16)
    ]));
  }
}), Zu = ["id", "novalidate"], ls = /* @__PURE__ */ q({
  __name: "BForm",
  props: {
    floating: { type: Boolean, default: !1 },
    id: { default: void 0 },
    novalidate: { type: Boolean, default: !1 },
    validated: { type: Boolean, default: !1 }
  },
  setup(t, { expose: o }) {
    const l = U(t, "BForm"), a = H(null), n = h(() => ({
      "form-floating": l.floating,
      "was-validated": l.validated
    }));
    return o({
      element: a
    }), (r, u) => (b(), F("form", {
      id: s(l).id,
      ref_key: "element",
      ref: a,
      novalidate: s(l).novalidate,
      class: W(n.value)
    }, [
      V(r.$slots, "default")
    ], 10, Zu));
  }
}), Ju = ["value", "disabled"], Va = /* @__PURE__ */ q({
  __name: "BFormSelectOption",
  props: {
    disabled: { type: Boolean, default: !1 },
    value: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BFormSelectOption");
    return (l, a) => (b(), F("option", {
      value: s(e).value,
      disabled: s(e).disabled
    }, [
      V(l.$slots, "default")
    ], 8, Ju));
  }
}), Qu = ["id"], ed = ["innerHTML"], td = /* @__PURE__ */ q({
  __name: "BFormDatalist",
  props: {
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    id: { default: void 0 },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(t) {
    const e = U(t, "BFormDatalist"), l = Ce(() => e.id, "datalist"), { normalizedOptions: a, isComplex: n } = ml(
      () => e.options,
      h(() => ({ ...e, optionsField: "options", labelField: "label" }))
    ), r = h(
      () => (
        // Datalist doesn't support complex options
        a.value.filter((u) => !n(u))
      )
    );
    return (u, i) => (b(), F("datalist", { id: s(l) }, [
      V(u.$slots, "first"),
      (b(!0), F(pe, null, ke(r.value, (d, c) => (b(), L(Va, {
        key: c,
        value: d.value,
        disabled: d.disabled
      }, {
        default: R(() => [
          d.html ? (b(), F("span", {
            key: 0,
            innerHTML: d.html
          }, null, 8, ed)) : (b(), F(pe, { key: 1 }, [
            ce(oe(d.text), 1)
          ], 64))
        ]),
        _: 2
      }, 1032, ["value", "disabled"]))), 128)),
      V(u.$slots, "default")
    ], 8, Qu));
  }
}), ad = { class: "form-floating" }, ld = ["for"], od = /* @__PURE__ */ q({
  __name: "BFormFloatingLabel",
  props: {
    label: { default: void 0 },
    labelFor: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BFormFloatingLabel");
    return (l, a) => (b(), F("div", ad, [
      V(l.$slots, "default"),
      ae("label", {
        for: s(e).labelFor
      }, [
        V(l.$slots, "label", {}, () => [
          ce(oe(s(e).label), 1)
        ])
      ], 8, ld)
    ]));
  }
}), Ua = /* @__PURE__ */ q({
  __name: "BFormInvalidFeedback",
  props: {
    ariaLive: { default: void 0 },
    forceShow: { type: Boolean, default: !1 },
    id: { default: void 0 },
    role: { default: void 0 },
    state: { type: [Boolean, null], default: null },
    tag: { default: "div" },
    text: { default: void 0 },
    tooltip: { type: Boolean, default: !1 }
  },
  setup(t) {
    const e = U(t, "BFormInvalidFeedback"), l = T(() => e.forceShow === !0 || e.state === !1), a = h(() => ({
      "d-block": l.value,
      "invalid-feedback": !e.tooltip,
      "invalid-tooltip": e.tooltip
    }));
    return (n, r) => (b(), L(fe(s(e).tag), {
      id: s(e).id,
      role: s(e).role,
      "aria-live": s(e).ariaLive,
      "aria-atomic": s(e).ariaLive ? !0 : void 0,
      class: W(a.value)
    }, {
      default: R(() => [
        V(n.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "role", "aria-live", "aria-atomic", "class"]));
  }
}), ia = /* @__PURE__ */ q({
  __name: "BFormRow",
  props: {
    tag: { default: "div" }
  },
  setup(t) {
    const e = U(t, "BFormRow");
    return (l, a) => (b(), L(fe(s(e).tag), { class: "row d-flex flex-wrap" }, {
      default: R(() => [
        V(l.$slots, "default")
      ]),
      _: 3
    }));
  }
}), Ka = /* @__PURE__ */ q({
  __name: "BFormText",
  props: {
    id: { default: void 0 },
    inline: { type: Boolean, default: !1 },
    tag: { default: "small" },
    text: { default: void 0 },
    textVariant: { default: "body-secondary" }
  },
  setup(t) {
    const e = U(t, "BFormText"), l = h(() => ({
      [`text-${e.textVariant}`]: e.textVariant !== null,
      "form-text": !e.inline
    }));
    return (a, n) => (b(), L(fe(s(e).tag), {
      id: s(e).id,
      class: W(l.value)
    }, {
      default: R(() => [
        V(a.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Xa = /* @__PURE__ */ q({
  __name: "BFormValidFeedback",
  props: {
    ariaLive: { default: void 0 },
    forceShow: { type: Boolean, default: !1 },
    id: { default: void 0 },
    role: { default: void 0 },
    state: { type: [Boolean, null], default: null },
    tag: { default: "div" },
    text: { default: void 0 },
    tooltip: { type: Boolean, default: !1 }
  },
  setup(t) {
    const e = U(t, "BFormInvalidFeedback"), l = T(() => e.forceShow === !0 || e.state === !0), a = h(() => ({
      "d-block": l.value,
      "valid-feedback": !e.tooltip,
      "valid-tooltip": e.tooltip
    }));
    return (n, r) => (b(), L(fe(s(e).tag), {
      id: s(e).id,
      role: s(e).role,
      "aria-live": s(e).ariaLive,
      "aria-atomic": s(e).ariaLive ? !0 : void 0,
      class: W(a.value)
    }, {
      default: R(() => [
        V(n.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "role", "aria-live", "aria-atomic", "class"]));
  }
}), nd = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "aria-required", "value", "true-value", "false-value", "indeterminate"], sd = ["for"], os = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BFormCheckbox",
  props: /* @__PURE__ */ be({
    ariaLabel: { default: void 0 },
    ariaLabelledby: { default: void 0 },
    autofocus: { type: Boolean, default: !1 },
    button: { type: Boolean, default: !1 },
    buttonGroup: { type: Boolean, default: !1 },
    buttonVariant: { default: null },
    disabled: { type: Boolean, default: !1 },
    form: { default: void 0 },
    id: { default: void 0 },
    indeterminate: { type: Boolean },
    inline: { type: Boolean, default: !1 },
    modelValue: { type: [Array, Set, String, Boolean, Object, Number, null] },
    name: { default: void 0 },
    plain: { type: Boolean, default: !1 },
    required: { type: Boolean, default: void 0 },
    reverse: { type: Boolean, default: !1 },
    size: { default: void 0 },
    state: { type: [Boolean, null], default: null },
    switch: { type: Boolean, default: !1 },
    uncheckedValue: { type: [Array, Set, String, Boolean, Object, Number, null], default: !1 },
    wrapperAttrs: { default: void 0 },
    inputClass: { default: void 0 },
    value: { type: [String, Boolean, Array, Set, Object, Number, null], default: !0 }
  }, {
    modelValue: { type: [Array, Set, String, Boolean, Object, Number, null], default: void 0 },
    modelModifiers: {},
    indeterminate: { type: Boolean, default: !1 },
    indeterminateModifiers: {}
  }),
  emits: ["update:modelValue", "update:indeterminate"],
  setup(t, { expose: o }) {
    const { class: e, ...l } = Lt(), n = U(t, "BFormCheckbox"), r = je(), u = we(t, "modelValue"), i = we(t, "indeterminate"), d = Ce(() => n.id, "form-check"), c = Ve(Qo, null), f = H(null), { focused: p } = ze(f, {
      initialValue: n.autofocus
    }), v = T(() => !Pe(r.default)), m = h({
      get: () => c ? c.modelValue.value : u.value,
      set: (S) => {
        if (S !== void 0) {
          if (i.value = !1, c !== null && Array.isArray(S)) {
            c.modelValue.value = S;
            return;
          }
          u.value = S;
        }
      }
    }), B = T(
      () => !!(n.name ?? (c == null ? void 0 : c.name.value)) && (n.required || (c == null ? void 0 : c.required.value))
    ), k = T(() => n.buttonGroup || ((c == null ? void 0 : c.buttons.value) ?? !1)), _ = h(() => ({
      plain: n.plain || ((c == null ? void 0 : c.plain.value) ?? !1),
      button: n.button || ((c == null ? void 0 : c.buttons.value) ?? !1),
      inline: n.inline || ((c == null ? void 0 : c.inline.value) ?? !1),
      reverse: n.reverse || ((c == null ? void 0 : c.reverse.value) ?? !1),
      switch: n.switch || ((c == null ? void 0 : c.switch.value) ?? !1),
      state: n.state === !0 || n.state === !1 ? n.state : (c == null ? void 0 : c.state.value) ?? null,
      size: n.size ?? (c == null ? void 0 : c.size.value) ?? "md",
      // This is where the true default is made
      buttonVariant: n.buttonVariant ?? (c == null ? void 0 : c.buttonVariant.value) ?? "secondary",
      // This is where the true default is made
      hasDefaultSlot: v.value
    })), C = mn(_), g = h(() => [C.value, e]), x = bn(_), y = h(() => [x.value, n.inputClass]), $ = yn(_);
    return o({
      blur: () => {
        p.value = !1;
      },
      element: f,
      focus: () => {
        p.value = !0;
      }
    }), (S, Y) => (b(), L(Yt, J({ skip: k.value }, s(n).wrapperAttrs, { class: g.value }), {
      default: R(() => {
        var K, P, j;
        return [
          dt(ae("input", J({
            id: s(d),
            ref_key: "input",
            ref: f,
            "onUpdate:modelValue": Y[0] || (Y[0] = (N) => m.value = N),
            class: y.value,
            type: "checkbox",
            disabled: s(n).disabled || ((K = s(c)) == null ? void 0 : K.disabled.value),
            required: B.value || void 0,
            name: s(n).name || ((P = s(c)) == null ? void 0 : P.name.value),
            form: s(n).form || ((j = s(c)) == null ? void 0 : j.form.value),
            "aria-label": s(n).ariaLabel,
            "aria-labelledby": s(n).ariaLabelledby,
            "aria-required": B.value || void 0,
            value: s(n).value,
            "true-value": s(n).value,
            "false-value": s(n).uncheckedValue,
            indeterminate: s(n).indeterminate
          }, l), null, 16, nd), [
            [_s, m.value]
          ]),
          v.value || s(n).plain === !1 ? (b(), F("label", {
            key: 0,
            for: s(d),
            class: W(s($))
          }, [
            V(S.$slots, "default")
          ], 10, sd)) : ne("", !0)
        ];
      }),
      _: 3
    }, 16, ["skip", "class"]));
  }
}), rd = ["id"], id = ["innerHTML"], ud = /* @__PURE__ */ q({
  __name: "BFormCheckboxGroup",
  props: /* @__PURE__ */ be({
    ariaInvalid: { type: [Boolean, String], default: void 0 },
    autofocus: { type: Boolean, default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    disabledField: { default: "disabled" },
    form: { default: void 0 },
    htmlField: { default: "html" },
    id: { default: void 0 },
    modelValue: {},
    name: { default: void 0 },
    options: { default: () => [] },
    plain: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    reverse: { type: Boolean, default: !1 },
    size: { default: "md" },
    stacked: { type: Boolean, default: !1 },
    state: { type: [Boolean, null], default: null },
    switches: { type: Boolean, default: !1 },
    textField: { default: "text" },
    validated: { type: Boolean, default: !1 },
    valueField: { default: "value" }
  }, {
    modelValue: {
      default: () => []
    },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t, { expose: o }) {
    const l = U(t, "BFormCheckboxGroup"), a = we(t, "modelValue"), n = Ce(() => l.id, "checkbox"), r = Ce(() => l.name, "checkbox"), u = H(null), { focused: i } = ze(u, {
      initialValue: l.autofocus
    });
    We(Qo, {
      modelValue: a,
      switch: T(() => l.switches),
      buttonVariant: T(() => l.buttonVariant),
      form: T(() => l.form),
      name: r,
      state: T(() => l.state),
      plain: T(() => l.plain),
      size: T(() => l.size),
      inline: T(() => !l.stacked),
      reverse: T(() => l.reverse),
      required: T(() => l.required),
      buttons: T(() => l.buttons),
      disabled: T(() => l.disabled)
    });
    const d = h(
      () => l.options.map(
        (v, m) => typeof v == "string" || typeof v == "number" ? {
          props: {
            value: v,
            disabled: l.disabled
          },
          text: v.toString(),
          html: void 0,
          self: Symbol(`checkboxGroupOptionItem${m}`)
        } : {
          props: {
            value: v[l.valueField],
            disabled: v[l.disabledField],
            ...v.props ? v.props : {}
          },
          text: v[l.textField],
          html: v[l.htmlField],
          self: Symbol(`checkboxGroupOptionItem${m}`)
        }
      )
    ), c = h(() => ({
      required: l.required,
      ariaInvalid: l.ariaInvalid,
      state: l.state,
      validated: l.validated,
      buttons: l.buttons,
      stacked: l.stacked,
      size: l.size
    })), f = gn(c), p = hn(c);
    return o({
      blur: () => {
        i.value = !1;
      },
      focus: () => {
        i.value = !0;
      }
    }), (v, m) => (b(), F("div", J(s(f), {
      id: s(n),
      ref_key: "element",
      ref: u,
      role: "group",
      class: [s(p), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      V(v.$slots, "first"),
      (b(!0), F(pe, null, ke(d.value, (B) => (b(), L(os, J({
        key: B.self,
        ref_for: !0
      }, B.props), {
        default: R(() => [
          B.html ? (b(), F("span", {
            key: 0,
            innerHTML: B.html
          }, null, 8, id)) : (b(), F(pe, { key: 1 }, [
            ce(oe(B.text), 1)
          ], 64))
        ]),
        _: 2
      }, 1040))), 128)),
      V(v.$slots, "default")
    ], 16, rd));
  }
}), dd = ["for"], cd = ["id", "form", "name", "multiple", "disabled", "capture", "accept", "required", "aria-label", "aria-labelledby", "aria-required", "directory", "webkitdirectory"], fd = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BFormFile",
  props: /* @__PURE__ */ be({
    ariaLabel: { default: void 0 },
    ariaLabelledby: { default: void 0 },
    accept: { default: "" },
    autofocus: { type: Boolean, default: !1 },
    capture: { type: [Boolean, String], default: !1 },
    directory: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    form: { default: void 0 },
    id: { default: void 0 },
    label: { default: "" },
    labelClass: { default: void 0 },
    modelValue: {},
    multiple: { type: Boolean, default: !1 },
    name: { default: void 0 },
    noButton: { type: Boolean, default: !1 },
    noDrop: { type: Boolean, default: !1 },
    noTraverse: { type: Boolean, default: !1 },
    plain: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    size: { default: void 0 },
    state: { type: [Boolean, null], default: null }
  }, {
    modelValue: {
      default: null
    },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t, { expose: o }) {
    const e = je(), a = U(t, "BFormFile"), n = we(t, "modelValue"), r = Ce(() => a.id), u = kt(() => a.state), i = H(null), { focused: d } = ze(i, { initialValue: a.autofocus }), c = T(() => !Pe(e.label)), f = h(
      () => typeof a.accept == "string" ? a.accept : a.accept.join(",")
    ), p = h(() => [
      u.value,
      {
        [`form-control-${a.size}`]: a.size !== void 0,
        "form-control": !a.plain,
        "form-control-input-file-hide-button": a.noButton
      }
    ]), v = () => {
      var _, C;
      const k = ((_ = i.value) == null ? void 0 : _.files) === null || ((C = i.value) == null ? void 0 : C.files) === void 0 ? null : [...i.value.files];
      n.value = k === null ? null : a.multiple === !0 ? k : k[0];
    }, m = (k) => {
      a.noDrop === !0 && k.preventDefault();
    }, B = () => {
      n.value = null;
    };
    return de(n, (k) => {
      k === null && i.value !== null && (i.value.value = "");
    }), o({
      blur: () => {
        d.value = !1;
      },
      element: i,
      focus: () => {
        d.value = !0;
      },
      reset: B
    }), (k, _) => (b(), F(pe, null, [
      c.value || s(a).label ? (b(), F("label", {
        key: 0,
        class: W(["form-label", s(a).labelClass]),
        for: s(r)
      }, [
        V(k.$slots, "label", {}, () => [
          ce(oe(s(a).label), 1)
        ])
      ], 10, dd)) : ne("", !0),
      ae("input", J({ id: s(r) }, k.$attrs, {
        ref_key: "input",
        ref: i,
        type: "file",
        class: p.value,
        form: s(a).form,
        name: s(a).name,
        multiple: s(a).multiple,
        disabled: s(a).disabled,
        capture: s(a).capture,
        accept: f.value || void 0,
        required: s(a).required || void 0,
        "aria-label": s(a).ariaLabel,
        "aria-labelledby": s(a).ariaLabelledby,
        "aria-required": s(a).required || void 0,
        directory: s(a).directory,
        webkitdirectory: s(a).directory,
        onChange: v,
        onDrop: m
      }), null, 16, cd)
    ], 64));
  }
}), ns = ["input", "select", "textarea"], vd = ns.map((t) => `${t}:not([disabled])`).join(), pd = [...ns, "a", "button", "label"], md = "label", bd = "invalid-feedback", yd = "valid-feedback", gd = "description", hd = "default", Bd = q({
  components: { BCol: Dt, BFormInvalidFeedback: Ua, BFormRow: ia, BFormText: Ka, BFormValidFeedback: Xa },
  props: {
    ariaInvalid: { type: [Boolean, String], default: void 0 },
    contentCols: { type: [Boolean, String, Number], default: void 0 },
    contentColsLg: { type: [Boolean, String, Number], default: void 0 },
    contentColsMd: { type: [Boolean, String, Number], default: void 0 },
    contentColsSm: { type: [Boolean, String, Number], default: void 0 },
    contentColsXl: { type: [Boolean, String, Number], default: void 0 },
    description: { type: [String], default: void 0 },
    disabled: { type: Boolean, default: !1 },
    feedbackAriaLive: { type: String, default: "assertive" },
    floating: { type: Boolean, default: !1 },
    id: { type: String, default: void 0 },
    invalidFeedback: { type: String, default: void 0 },
    label: { type: String, default: void 0 },
    labelAlign: { type: [String], default: void 0 },
    labelAlignLg: { type: [String], default: void 0 },
    labelAlignMd: { type: [String], default: void 0 },
    labelAlignSm: { type: [String], default: void 0 },
    labelAlignXl: { type: [String], default: void 0 },
    labelClass: { type: [Array, Object, String], default: void 0 },
    labelCols: { type: [Boolean, String, Number], default: void 0 },
    labelColsLg: { type: [Boolean, String, Number], default: void 0 },
    labelColsMd: { type: [Boolean, String, Number], default: void 0 },
    labelColsSm: { type: [Boolean, String, Number], default: void 0 },
    labelColsXl: { type: [Boolean, String, Number], default: void 0 },
    labelFor: { type: String, default: void 0 },
    labelSize: { type: String, default: void 0 },
    labelVisuallyHidden: { type: Boolean, default: !1 },
    state: { type: Boolean, default: null },
    tooltip: { type: Boolean, default: !1 },
    validFeedback: { type: String, default: void 0 },
    validated: { type: Boolean, default: !1 }
  },
  setup(t) {
    const e = ["xs", "sm", "md", "lg", "xl"], l = (m, B) => e.reduce((k, _) => {
      const C = zl(_ === "xs" ? "" : _, `${B}Align`), g = m[C] || null;
      return g && (_ === "xs" ? k.push(`text-${g}`) : k.push(`text-${_}-${g}`)), k;
    }, []), a = (m, B) => (
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      e.reduce((k, _) => {
        const C = zl(_ === "xs" ? "" : _, `${B}Cols`);
        let g = m[C];
        if (g = g === "" ? !0 : g || !1, typeof g != "boolean" && g !== "auto") {
          const x = Number.parseInt(g);
          g = Number.isNaN(x) ? 0 : x, g = g > 0 ? g : !1;
        }
        return g && (_ === "xs" ? k[typeof g == "boolean" ? "col" : "cols"] = g : k[_ || (typeof g == "boolean" ? "col" : "cols")] = g), k;
      }, {})
    ), n = H(null), r = (m, B = null) => {
      if (al && t.labelFor && n.value !== null) {
        const k = n.value.querySelector(`#${CSS.escape(t.labelFor)}`);
        if (k) {
          const _ = "aria-describedby", C = (m || "").split(oa), g = (B || "").split(oa), x = (k.getAttribute(_) || "").split(oa).filter((y) => !g.includes(y)).concat(C).filter((y, $, S) => S.indexOf(y) === $).filter((y) => y).join(" ").trim();
          x ? k.setAttribute(_, x) : k.removeAttribute(_);
        }
      }
    }, u = h(() => a(t, "content")), i = h(() => l(t, "label")), d = h(() => a(t, "label")), c = h(
      () => (
        // Determine if the form group will be rendered horizontal
        // based on the existence of 'content-col' or 'label-col' props
        Object.keys(u.value).length > 0 || Object.keys(d.value).length > 0
      )
    ), f = kt(() => t.state), p = ka(
      () => t.ariaInvalid,
      () => t.state
    );
    return de(
      () => null,
      (m, B) => {
        m !== B && r(m, B);
      }
    ), De(() => {
      Oe(() => {
        r(null);
      });
    }), {
      ariaDescribedby: null,
      computedAriaInvalid: p,
      contentColProps: u,
      isHorizontal: c,
      labelAlignClasses: i,
      labelColProps: d,
      onLegendClick: (m) => {
        if (t.labelFor || n.value === null)
          return;
        const { target: B } = m, k = B ? B.tagName : "";
        if (pd.indexOf(k) !== -1)
          return;
        const _ = [...n.value.querySelectorAll(vd)].filter(Ss), [C] = _;
        _.length === 1 && C instanceof HTMLElement && Ts(C);
      },
      stateClass: f
    };
  },
  render() {
    const t = this.$props, o = this.$slots, e = Ce(), l = !t.labelFor;
    let a = null;
    const n = Mt(md, {}, o) || t.label, r = n ? Ce(void 0, "_BV_label_").value : null;
    if (n || this.isHorizontal) {
      const x = l ? "legend" : "label";
      if (t.labelVisuallyHidden)
        n && (a = Ie(
          x,
          {
            class: "visually-hidden",
            id: r,
            for: t.labelFor || null
          },
          n
        )), this.isHorizontal ? a = Ie(Dt, this.labelColProps, { default: () => a }) : a = Ie("div", {}, [a]);
      else {
        const y = {
          onClick: l ? this.onLegendClick : null,
          ...this.isHorizontal ? this.labelColProps : {},
          tag: this.isHorizontal ? x : null,
          id: r,
          for: t.labelFor || null,
          tabIndex: l ? "-1" : null,
          class: [
            this.isHorizontal ? "col-form-label" : "form-label",
            {
              "bv-no-focus-ring": l,
              "col-form-label": this.isHorizontal || l,
              "pt-0": !this.isHorizontal && l,
              "d-block": !this.isHorizontal && !l,
              [`col-form-label-${t.labelSize}`]: !!t.labelSize
            },
            this.labelAlignClasses,
            t.labelClass
          ]
        };
        this.isHorizontal ? a = Ie(Dt, y, { default: () => n }) : a = Ie(x, y, n);
      }
    }
    let u = null;
    const i = Mt(bd, {}, o) || this.invalidFeedback, d = i ? Ce(void 0, "_BV_feedback_invalid_").value : void 0;
    i && (u = Ie(
      Ua,
      {
        ariaLive: t.feedbackAriaLive,
        id: d,
        state: t.state,
        tooltip: t.tooltip
      },
      { default: () => i }
    ));
    let c = null;
    const f = Mt(yd, {}, o) || this.validFeedback, p = f ? Ce(void 0, "_BV_feedback_valid_").value : void 0;
    f && (c = Ie(
      Xa,
      {
        ariaLive: t.feedbackAriaLive,
        id: p,
        state: t.state,
        tooltip: t.tooltip
      },
      { default: () => f }
      // validFeedbackContent
    ));
    let v = null;
    const m = Mt(gd, {}, o) || this.description, B = m ? Ce(void 0, "_BV_description_").value : void 0;
    m && (v = Ie(
      Ka,
      {
        id: B
      },
      { default: () => m }
    ));
    const k = this.ariaDescribedby = [
      B,
      t.state === !1 ? d : null,
      t.state === !0 ? p : null
    ].filter((x) => x).join(" ") || null, _ = [
      Mt(hd, { ariaDescribedby: k, descriptionId: B, id: e, labelId: r }, o) || "",
      u,
      c,
      v
    ];
    !this.isHorizontal && t.floating && _.push(a);
    let C = Ie(
      "div",
      {
        ref: "content",
        class: [
          {
            "form-floating": !this.isHorizontal && t.floating
          }
        ]
      },
      _
    );
    this.isHorizontal && (C = Ie(Dt, { ref: "content", ...this.contentColProps }, { default: () => _ }));
    const g = {
      class: [
        this.stateClass,
        {
          "was-validated": t.validated
        }
      ],
      id: Ce(() => t.id).value,
      disabled: l ? t.disabled : null,
      role: l ? null : "group",
      "aria-invalid": this.computedAriaInvalid,
      // Only apply `aria-labelledby` if we are a horizontal fieldset
      // as the legend is no longer a direct child of fieldset
      "aria-labelledby": l && this.isHorizontal ? r : null
    };
    return this.isHorizontal && !l ? Ie(ia, g, { default: () => [a, C] }) : Ie(
      l ? "fieldset" : "div",
      g,
      this.isHorizontal && l ? [Ie(ia, null, { default: () => [a, C] })] : this.isHorizontal || !t.floating ? [a, C] : [C]
    );
  }
}), _d = ["id", "value", "name", "form", "type", "disabled", "placeholder", "required", "autocomplete", "readonly", "min", "max", "step", "list", "aria-required", "aria-invalid"], Zl = /* @__PURE__ */ q({
  __name: "BFormInput",
  props: /* @__PURE__ */ be({
    max: { default: void 0 },
    min: { default: void 0 },
    step: { default: void 0 },
    type: { default: "text" },
    ariaInvalid: { type: [Boolean, String], default: void 0 },
    autocomplete: { default: void 0 },
    autofocus: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    form: { default: void 0 },
    formatter: { type: Function, default: void 0 },
    id: { default: void 0 },
    lazyFormatter: { type: Boolean, default: !1 },
    list: { default: void 0 },
    modelValue: { default: "" },
    name: { default: void 0 },
    placeholder: { default: void 0 },
    plaintext: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    size: { default: void 0 },
    state: { type: [Boolean, null], default: null },
    debounce: { default: 0 },
    debounceMaxWait: { default: NaN }
  }, {
    modelValue: {
      default: ""
    },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t, { expose: o }) {
    const l = U(t, "BFormInput"), [a, n] = we(t, "modelValue", {
      set: (_) => dn(_, n)
    }), { input: r, computedId: u, computedAriaInvalid: i, onInput: d, onChange: c, onBlur: f, focus: p, blur: v } = Bn(l, a, n), m = kt(() => l.state), B = H(!1), k = h(() => {
      const _ = l.type === "range", C = l.type === "color";
      return [
        m.value,
        {
          "form-control-highlighted": B.value,
          "form-range": _,
          "form-control": C || !l.plaintext && !_,
          "form-control-color": C,
          "form-control-plaintext": l.plaintext && !_ && !C,
          [`form-control-${l.size}`]: !!l.size
        }
      ];
    });
    return o({
      blur: v,
      element: r,
      focus: p
    }), (_, C) => (b(), F("input", {
      id: s(u),
      ref_key: "input",
      ref: r,
      value: s(a),
      class: W(k.value),
      name: s(l).name || void 0,
      form: s(l).form || void 0,
      type: s(l).type,
      disabled: s(l).disabled,
      placeholder: s(l).placeholder,
      required: s(l).required || void 0,
      autocomplete: s(l).autocomplete || void 0,
      readonly: s(l).readonly || s(l).plaintext,
      min: s(l).min,
      max: s(l).max,
      step: s(l).step,
      list: s(l).type !== "password" ? s(l).list : void 0,
      "aria-required": s(l).required || void 0,
      "aria-invalid": s(i),
      onInput: C[0] || (C[0] = (g) => s(d)(g)),
      onChange: C[1] || (C[1] = (g) => s(c)(g)),
      onBlur: C[2] || (C[2] = (g) => s(f)(g))
    }, null, 42, _d));
  }
}), wd = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "value", "aria-required"], Cd = ["for"], ss = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BFormRadio",
  props: /* @__PURE__ */ be({
    ariaLabel: { default: void 0 },
    ariaLabelledby: { default: void 0 },
    autofocus: { type: Boolean, default: !1 },
    button: { type: Boolean, default: !1 },
    buttonGroup: { type: Boolean, default: !1 },
    buttonVariant: { default: null },
    disabled: { type: Boolean, default: !1 },
    form: { default: void 0 },
    id: { default: void 0 },
    inline: { type: Boolean, default: !1 },
    modelValue: { type: [Boolean, String, Array, Object, Number, null] },
    name: { default: void 0 },
    plain: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    reverse: { type: Boolean, default: !1 },
    size: { default: void 0 },
    state: { type: [Boolean, null], default: null },
    value: { type: [Boolean, String, Array, Object, Number, null], default: !0 }
  }, {
    modelValue: { type: [Boolean, String, Array, Object, Number, null], default: void 0 },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t, { expose: o }) {
    const l = U(t, "BFormRadio"), a = je(), n = we(t, "modelValue"), r = Ce(() => l.id, "form-check"), u = Ve(en, null), i = H(null), { focused: d } = ze(i, {
      initialValue: l.autofocus
    }), c = T(() => !Pe(a.default)), f = h({
      get: () => u ? u.modelValue.value : n.value,
      set: (C) => {
        if (C !== void 0) {
          if (u !== null) {
            u.modelValue.value = C;
            return;
          }
          n.value = C;
        }
      }
    }), p = T(
      () => !!(l.name ?? (u == null ? void 0 : u.name.value)) && (l.required || (u == null ? void 0 : u.required.value))
    ), v = T(() => l.buttonGroup || ((u == null ? void 0 : u.buttons.value) ?? !1)), m = h(() => ({
      plain: l.plain || ((u == null ? void 0 : u.plain.value) ?? !1),
      button: l.button || ((u == null ? void 0 : u.buttons.value) ?? !1),
      inline: l.inline || ((u == null ? void 0 : u.inline.value) ?? !1),
      state: l.state || (u == null ? void 0 : u.state.value),
      reverse: l.reverse || ((u == null ? void 0 : u.reverse.value) ?? !1),
      size: l.size ?? (u == null ? void 0 : u.size.value) ?? "md",
      // This is where the true default is made
      buttonVariant: l.buttonVariant ?? (u == null ? void 0 : u.buttonVariant.value) ?? "secondary",
      // This is where the true default is made
      hasDefaultSlot: c.value
    })), B = mn(m), k = bn(m), _ = yn(m);
    return o({
      blur: () => {
        d.value = !1;
      },
      element: i,
      focus: () => {
        d.value = !0;
      }
    }), (C, g) => (b(), L(Yt, {
      skip: v.value,
      class: W(s(B))
    }, {
      default: R(() => {
        var x, y, $;
        return [
          dt(ae("input", J({ id: s(r) }, C.$attrs, {
            ref_key: "input",
            ref: i,
            "onUpdate:modelValue": g[0] || (g[0] = (S) => f.value = S),
            class: s(k),
            type: "radio",
            disabled: s(l).disabled || ((x = s(u)) == null ? void 0 : x.disabled.value),
            required: p.value || void 0,
            name: s(l).name || ((y = s(u)) == null ? void 0 : y.name.value),
            form: s(l).form || (($ = s(u)) == null ? void 0 : $.form.value),
            "aria-label": s(l).ariaLabel,
            "aria-labelledby": s(l).ariaLabelledby,
            value: s(l).value,
            "aria-required": p.value || void 0
          }), null, 16, wd), [
            [ws, f.value]
          ]),
          c.value || s(l).plain === !1 ? (b(), F("label", {
            key: 0,
            for: s(r),
            class: W(s(_))
          }, [
            V(C.$slots, "default")
          ], 10, Cd)) : ne("", !0)
        ];
      }),
      _: 3
    }, 8, ["skip", "class"]));
  }
}), kd = ["id"], Td = ["innerHTML"], Sd = /* @__PURE__ */ q({
  __name: "BFormRadioGroup",
  props: /* @__PURE__ */ be({
    ariaInvalid: { type: [Boolean, String], default: void 0 },
    autofocus: { type: Boolean, default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    disabledField: { default: "disabled" },
    form: { default: void 0 },
    htmlField: { default: "html" },
    id: { default: void 0 },
    modelValue: { type: [Boolean, String, Array, Object, Number, null] },
    name: { default: void 0 },
    options: { default: () => [] },
    plain: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    reverse: { type: Boolean, default: !1 },
    size: { default: "md" },
    stacked: { type: Boolean, default: !1 },
    state: { type: [Boolean, null], default: null },
    textField: { default: "text" },
    validated: { type: Boolean, default: !1 },
    valueField: { default: "value" }
  }, {
    modelValue: { type: [Boolean, String, Array, Object, Number, null], default: null },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t, { expose: o }) {
    const l = U(t, "BFormRadioGroup"), a = we(t, "modelValue"), n = Ce(() => l.id, "radio"), r = Ce(() => l.name, "checkbox"), u = H(null), { focused: i } = ze(u, {
      initialValue: l.autofocus
    });
    We(en, {
      modelValue: a,
      buttonVariant: T(() => l.buttonVariant),
      form: T(() => l.form),
      name: r,
      buttons: T(() => l.buttons),
      state: T(() => l.state),
      plain: T(() => l.plain),
      size: T(() => l.size),
      inline: T(() => !l.stacked),
      reverse: T(() => l.reverse),
      required: T(() => l.required),
      disabled: T(() => l.disabled)
    });
    const d = h(
      () => l.options.map(
        (v, m) => typeof v == "string" || typeof v == "number" ? {
          value: v,
          disabled: l.disabled,
          text: v.toString(),
          html: void 0,
          self: Symbol(`radioGroupOptionItem${m}`)
        } : {
          value: v[l.valueField],
          disabled: v[l.disabledField],
          ...v.props ? v.props : {},
          text: v[l.textField],
          html: v[l.htmlField],
          self: Symbol(`radioGroupOptionItem${m}`)
        }
      )
    ), c = h(() => ({
      required: l.required,
      ariaInvalid: l.ariaInvalid,
      state: l.state,
      validated: l.validated,
      buttons: l.buttons,
      stacked: l.stacked,
      size: l.size
    })), f = gn(c), p = hn(c);
    return o({
      blur: () => {
        i.value = !1;
      },
      focus: () => {
        i.value = !0;
      }
    }), (v, m) => (b(), F("div", J(s(f), {
      id: s(n),
      ref_key: "element",
      ref: u,
      role: "radiogroup",
      class: [s(p), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      V(v.$slots, "first"),
      (b(!0), F(pe, null, ke(d.value, (B) => (b(), L(ss, {
        key: B.self,
        disabled: B.disabled,
        value: B.value
      }, {
        default: R(() => [
          B.html ? (b(), F("span", {
            key: 0,
            innerHTML: B.html
          }, null, 8, Td)) : (b(), F(pe, { key: 1 }, [
            ce(oe(B.text), 1)
          ], 64))
        ]),
        _: 2
      }, 1032, ["disabled", "value"]))), 128)),
      V(v.$slots, "default")
    ], 16, kd));
  }
}), xd = ["label"], $d = ["innerHTML"], rs = /* @__PURE__ */ q({
  __name: "BFormSelectOptionGroup",
  props: {
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    label: { default: void 0 },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(t) {
    const e = U(t, "BFormSelectOptionGroup"), { normalizedOptions: l } = ml(() => e.options, e), a = h(() => l.value);
    return (n, r) => (b(), F("optgroup", {
      label: s(e).label
    }, [
      V(n.$slots, "first"),
      (b(!0), F(pe, null, ke(a.value, (u, i) => (b(), L(Va, J({
        key: i,
        disabled: u.disabled,
        value: u.value,
        ref_for: !0
      }, n.$attrs), {
        default: R(() => [
          u.html ? (b(), F("span", {
            key: 0,
            innerHTML: u.html
          }, null, 8, $d)) : (b(), F(pe, { key: 1 }, [
            ce(oe(u.text), 1)
          ], 64))
        ]),
        _: 2
      }, 1040, ["disabled", "value"]))), 128)),
      V(n.$slots, "default")
    ], 8, xd));
  }
}), Ad = ["id", "name", "form", "multiple", "size", "disabled", "required", "aria-required", "aria-invalid"], Vd = ["innerHTML"], Nd = /* @__PURE__ */ q({
  __name: "BFormSelect",
  props: /* @__PURE__ */ be({
    ariaInvalid: { type: [Boolean, String], default: void 0 },
    autofocus: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    disabledField: { default: "disabled" },
    form: { default: void 0 },
    htmlField: { default: "html" },
    id: { default: void 0 },
    labelField: { default: "label" },
    modelValue: { type: [Boolean, String, Array, Object, Number, null] },
    multiple: { type: Boolean, default: !1 },
    name: { default: void 0 },
    options: { default: () => [] },
    optionsField: { default: "options" },
    plain: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    selectSize: { default: 0 },
    size: { default: "md" },
    state: { type: [Boolean, null], default: null },
    textField: { default: "text" },
    valueField: { default: "value" }
  }, {
    modelValue: {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      default: ""
    },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t, { expose: o }) {
    const l = U(t, "BFormSelect"), a = we(t, "modelValue"), n = Ce(() => l.id, "input"), r = Be(() => l.selectSize), u = kt(() => l.state), i = H(null), { focused: d } = ze(i, {
      initialValue: l.autofocus
    }), c = h(() => [
      u.value,
      {
        "form-control": l.plain,
        [`form-control-${l.size}`]: l.size !== "md" && l.plain,
        "form-select": !l.plain,
        [`form-select-${l.size}`]: l.size !== "md" && !l.plain
      }
    ]), f = T(
      () => r.value || l.plain ? r.value : void 0
    ), p = ka(
      () => l.ariaInvalid,
      () => l.state
    ), { normalizedOptions: v, isComplex: m } = ml(() => l.options, l), B = h(
      () => v.value
    ), k = h({
      get: () => a.value,
      set: (_) => {
        a.value = _;
      }
    });
    return o({
      blur: () => {
        d.value = !1;
      },
      element: i,
      focus: () => {
        d.value = !0;
      }
    }), (_, C) => dt((b(), F("select", {
      id: s(n),
      ref_key: "input",
      ref: i,
      "onUpdate:modelValue": C[0] || (C[0] = (g) => k.value = g),
      class: W(c.value),
      name: s(l).name,
      form: s(l).form || void 0,
      multiple: s(l).multiple || void 0,
      size: f.value,
      disabled: s(l).disabled,
      required: s(l).required || void 0,
      "aria-required": s(l).required || void 0,
      "aria-invalid": s(p)
    }, [
      V(_.$slots, "first"),
      (b(!0), F(pe, null, ke(B.value, (g, x) => (b(), F(pe, { key: x }, [
        s(m)(g) ? (b(), L(rs, {
          key: 0,
          label: g.label,
          options: g.options,
          "value-field": s(l).valueField,
          "text-field": s(l).textField,
          "html-field": s(l).htmlField,
          "disabled-field": s(l).disabledField
        }, null, 8, ["label", "options", "value-field", "text-field", "html-field", "disabled-field"])) : (b(), L(Va, {
          key: 1,
          value: g.value,
          disabled: g.disabled
        }, {
          default: R(() => [
            g.html ? (b(), F("span", {
              key: 0,
              innerHTML: g.html
            }, null, 8, Vd)) : (b(), F(pe, { key: 1 }, [
              ce(oe(g.text), 1)
            ], 64))
          ]),
          _: 2
        }, 1032, ["value", "disabled"]))
      ], 64))), 128)),
      V(_.$slots, "default")
    ], 10, Ad)), [
      [Cs, k.value]
    ]);
  }
}), Ia = "ArrowDown", Jl = "End", Ql = "Home", eo = "PageDown", to = "PageUp", Ea = "ArrowUp", Od = ["lang", "tabindex", "title"], Fd = ["name", "form", "value"], Pd = ["id", "dir", "tabindex", "aria-label", "aria-invalid", "aria-required", "aria-valuemin", "aria-valuemax", "aria-valuenow", "aria-valuetext"], Ge = {
  min: 1,
  max: 100,
  step: 1,
  repeatDelay: 500,
  repeatInterval: 100,
  repeatThreshold: 10,
  repeatMultiplier: 4
}, Id = /* @__PURE__ */ q({
  __name: "BFormSpinbutton",
  props: /* @__PURE__ */ be({
    ariaControls: { default: void 0 },
    ariaLabel: { default: void 0 },
    disabled: { type: Boolean, default: !1 },
    form: { default: void 0 },
    formatterFn: { type: Function, default: void 0 },
    id: { default: void 0 },
    inline: { type: Boolean, default: !1 },
    labelDecrement: { default: "Decrement" },
    labelIncrement: { default: "Increment" },
    locale: { default: void 0 },
    max: { default: Ge.max },
    min: { default: Ge.min },
    modelValue: {},
    name: { default: void 0 },
    placeholder: { default: void 0 },
    readonly: { type: Boolean, default: !1 },
    repeatDelay: { default: Ge.repeatDelay },
    repeatInterval: { default: Ge.repeatInterval },
    repeatStepMultiplier: { default: Ge.repeatMultiplier },
    repeatThreshold: { default: Ge.repeatThreshold },
    required: { type: Boolean, default: !1 },
    size: { default: void 0 },
    state: { type: [Boolean, null], default: null },
    step: { default: Ge.step },
    vertical: { type: Boolean, default: !1 },
    wrap: { type: Boolean, default: !1 }
  }, {
    modelValue: {
      default: null
    },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["change"], ["update:modelValue"]),
  setup(t, { emit: o }) {
    const e = [Ea, Ia, Ql, Jl, to, eo], a = U(t, "BFormSpinbutton"), n = o, r = we(t, "modelValue"), u = H(null), { focused: i } = ze(u), d = Ce(() => a.id, "spinbutton"), c = h(() => ({
      disabled: a.disabled,
      readonly: a.readonly,
      focus: i.value,
      "d-inline-flex": a.inline || a.vertical,
      "d-flex": !a.inline && !a.vertical,
      "align-items-stretch": !a.vertical,
      "flex-column": a.vertical,
      [`form-control-${a.size}`]: a.size !== void 0
    })), f = h(() => ({
      "d-flex": a.vertical,
      "align-self-center": !a.vertical,
      "align-items-center": a.vertical,
      "border-top": a.vertical,
      "border-bottom": a.vertical,
      "border-start": !a.vertical,
      "border-end": !a.vertical
    }));
    let p, v, m = !1;
    const B = Be(() => a.step), k = T(
      () => Number.isNaN(B.value) ? Ge.step : B.value
    ), _ = Be(() => a.min), C = T(
      () => Number.isNaN(_.value) ? Ge.min : _.value
    ), g = Be(() => a.max), x = T(() => {
      const le = k.value, re = C.value;
      return Math.floor((g.value - re) / le) * le + re;
    }), y = Be(() => a.repeatDelay, {
      nanToZero: !0,
      method: "parseInt"
    }), $ = T(
      () => y.value > 0 ? y.value : Ge.repeatDelay
    ), S = Be(() => a.repeatInterval, {
      nanToZero: !0,
      method: "parseInt"
    }), Y = T(
      () => S.value > 0 ? S.value : Ge.repeatInterval
    ), K = Be(() => a.repeatThreshold, {
      nanToZero: !0,
      method: "parseInt"
    }), P = T(
      () => Math.max(
        Number.isNaN(K.value) ? Ge.repeatThreshold : K.value,
        1
      )
    ), j = Be(() => a.repeatStepMultiplier, {
      nanToZero: !0,
      method: "parseInt"
    }), N = T(
      () => Math.max(
        Number.isNaN(j.value) ? Ge.repeatMultiplier : j.value,
        1
      )
    ), O = T(() => {
      const le = k.value;
      return Math.floor(le) === le ? 0 : (le.toString().split(".")[1] || "").length;
    }), z = T(() => Math.pow(10, O.value || 0)), w = T(
      () => r.value === null ? "" : r.value.toFixed(O.value)
    ), { isRtl: A, locale: E } = fi(), I = h(() => {
      const re = [(a.locale ?? (E == null ? void 0 : E.value)) || "locale"];
      return new Intl.NumberFormat(re).resolvedOptions().locale;
    }), X = () => new Intl.NumberFormat(I.value, {
      style: "decimal",
      useGrouping: !1,
      minimumIntegerDigits: 1,
      minimumFractionDigits: O.value,
      maximumFractionDigits: O.value,
      notation: "standard"
    }).format, D = T(() => a.formatterFn ?? X()), M = (le) => {
      let { value: re } = r;
      if (!a.disabled && re !== null) {
        const he = k.value * le, ee = C.value, ye = x.value, Te = z.value, { wrap: Ae } = a;
        re = Math.round((re - ee) / he) * he + ee + he, re = Math.round(re * Te) / Te, r.value = re > ye ? Ae ? ee : ye : re < ee ? Ae ? ye : ee : re;
      }
    }, Q = (le = 1) => {
      if (r.value === null) {
        r.value = C.value;
        return;
      }
      M(1 * le);
    }, Z = (le = 1) => {
      if (r.value === null) {
        r.value = a.wrap ? x.value : C.value;
        return;
      }
      M(-1 * le);
    }, G = (le) => {
      le.preventDefault(), le.stopImmediatePropagation();
    };
    Le(
      e,
      (le) => {
        const { code: re, altKey: he, ctrlKey: ee, metaKey: ye } = le;
        if (!(a.disabled || a.readonly || he || ee || ye) && (G(le), !m)) {
          if (ue(), [Ea, Ia].includes(re)) {
            if (m = !0, re === Ea) {
              se(le, Q);
              return;
            }
            re === Ia && se(le, Z);
            return;
          }
          if (re === to) {
            Q(N.value);
            return;
          }
          if (re === eo) {
            Z(N.value);
            return;
          }
          if (re === Ql) {
            r.value = C.value;
            return;
          }
          re === Jl && (r.value = x.value);
        }
      },
      { target: u, eventName: "keydown" }
    ), Le(
      e,
      (le) => {
        const { altKey: re, ctrlKey: he, metaKey: ee } = le;
        a.disabled || a.readonly || re || he || ee || (G(le), ue(), m = !1, n("change", r.value));
      },
      { target: u, eventName: "keyup" }
    );
    const se = (le, re) => {
      const { type: he } = le || {};
      if (!a.disabled && !a.readonly) {
        if (ie(le) && he === "mousedown" && le.button)
          return;
        ue(), re(1);
        const ee = P.value, ye = N.value, Te = $.value, Ae = Y.value;
        p = setTimeout(() => {
          let Ze = 0;
          v = setInterval(() => {
            re(Ze < ee ? 1 : ye), Ze++;
          }, Ae);
        }, Te);
      }
    }, ie = (le) => le.type === "mouseup" || le.type === "mousedown", te = (le) => {
      ie(le) && le.type === "mouseup" && le.button || (G(le), ue(), ve(!1), n("change", r.value));
    }, ve = (le) => {
      try {
        wl(le, [document.body, "mouseup", te, !1]), wl(le, [document.body, "touchend", te, !1]);
      } catch {
      }
    }, ue = () => {
      clearTimeout(p), clearInterval(v), p = void 0, v = void 0;
    }, me = h(() => {
      const le = {
        svg: {
          xmlns: "http://www.w3.org/2000/svg",
          width: "16",
          height: "16",
          fill: "currentColor",
          class: "bi bi-plus",
          viewBox: "0 0 16 16"
        },
        path: {
          d: "M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"
        }
      }, re = {
        svg: {
          xmlns: "http://www.w3.org/2000/svg",
          width: "16",
          height: "16",
          fill: "currentColor",
          class: "bi bi-dash",
          viewBox: "0 0 16 16"
        },
        path: { d: "M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z" }
      }, he = {
        class: [{ "py-0": !a.vertical }, "btn", "btn-sm", "border-0", "rounded-0"],
        tabindex: "-1",
        type: "button",
        disabled: a.disabled || a.readonly,
        "aria-disabled": a.disabled || a.readonly ? !0 : void 0,
        "aria-controls": d.value
      }, ee = {
        "aria-hidden": !0,
        scale: i.value ? 1.5 : 1.25
      }, ye = (Ze, ms) => {
        !a.disabled && !a.readonly && (G(Ze), ve(!0), i.value = !0, se(Ze, ms));
      }, Te = {
        button: {
          ...he,
          "aria-label": a.labelIncrement || void 0,
          "aria-keyshortcuts": "ArrowUp"
        },
        svg: {
          ...ee,
          ...le.svg
        },
        path: {
          ...le.path
        },
        slot: {
          name: "increment"
        },
        handler: (Ze) => ye(Ze, Q)
      }, Ae = {
        button: {
          ...he,
          "aria-label": a.labelDecrement || void 0,
          "aria-keyshortcuts": "ArrowDown"
        },
        svg: {
          ...ee,
          ...re.svg
        },
        path: {
          ...re.path
        },
        slot: {
          name: "decrement"
        },
        handler: (Ze) => ye(Ze, Z)
      };
      return {
        top: {
          ...a.vertical ? Te : Ae
        },
        bottom: {
          ...a.vertical ? Ae : Te
        }
      };
    });
    return (le, re) => (b(), F("div", {
      ref_key: "element",
      ref: u,
      class: W(["b-form-spinbutton form-control", c.value]),
      role: "group",
      lang: I.value,
      tabindex: s(a).disabled ? void 0 : "-1",
      title: s(a).ariaLabel,
      onClick: re[4] || (re[4] = (he) => i.value = !0)
    }, [
      V(le.$slots, me.value.top.slot.name, { hasFocus: s(i) }, () => [
        ae("button", J(me.value.top.button, {
          onMousedown: re[0] || (re[0] = //@ts-ignore
          (...he) => me.value.top.handler && me.value.top.handler(...he)),
          onTouchstart: re[1] || (re[1] = //@ts-ignore
          (...he) => me.value.top.handler && me.value.top.handler(...he))
        }), [
          (b(), F("svg", _e(Se(me.value.top.svg)), [
            ae("path", _e(Se(me.value.top.path)), null, 16)
          ], 16))
        ], 16)
      ]),
      s(a).name && !s(a).disabled ? (b(), F("input", {
        key: "hidden",
        type: "hidden",
        name: s(a).name,
        form: s(a).form,
        value: w.value
      }, null, 8, Fd)) : ne("", !0),
      ae("output", {
        id: s(d),
        key: "output",
        class: W(["flex-grow-1", f.value]),
        dir: s(A) ?? !1 ? "rtl" : "ltr",
        tabindex: s(a).disabled ? void 0 : "0",
        role: "spinbutton",
        "aria-live": "off",
        "aria-label": s(a).ariaLabel || void 0,
        "aria-invalid": s(a).state === !1 || !r.value !== null && s(a).required ? !0 : void 0,
        "aria-required": s(a).required ? !0 : void 0,
        "aria-valuemin": C.value,
        "aria-valuemax": x.value,
        "aria-valuenow": r.value !== null ? r.value : void 0,
        "aria-valuetext": r.value !== null ? D.value(r.value) : void 0
      }, [
        ae("bdi", null, oe((r.value !== null ? D.value(r.value) : s(a).placeholder) || ""), 1)
      ], 10, Pd),
      V(le.$slots, me.value.bottom.slot.name, { hasFocus: s(i) }, () => [
        ae("button", J(me.value.bottom.button, {
          onMousedown: re[2] || (re[2] = //@ts-ignore
          (...he) => me.value.bottom.handler && me.value.bottom.handler(...he)),
          onTouchstart: re[3] || (re[3] = //@ts-ignore
          (...he) => me.value.bottom.handler && me.value.bottom.handler(...he))
        }), [
          (b(), F("svg", _e(Se(me.value.bottom.svg)), [
            ae("path", _e(Se(me.value.bottom.path)), null, 16)
          ], 16))
        ], 16)
      ])
    ], 10, Od));
  }
}), Ed = ["id"], is = /* @__PURE__ */ q({
  __name: "BFormTag",
  props: {
    disabled: { type: Boolean, default: !1 },
    id: { default: void 0 },
    noRemove: { type: Boolean, default: !1 },
    pill: { type: Boolean, default: !1 },
    removeLabel: { default: "Remove tag" },
    tag: { default: "span" },
    title: { default: void 0 },
    variant: { default: "secondary" }
  },
  emits: ["remove"],
  setup(t, { emit: o }) {
    const l = U(t, "BFormTag"), a = o, n = je(), r = Ce(() => l.id), u = h(
      () => {
        var c;
        return ((((c = n.default) == null ? void 0 : c.call(n, {})[0].children) ?? "").toString() || l.title) ?? "";
      }
    ), i = T(() => `${r.value}taglabel__`), d = h(() => ({
      [`text-bg-${l.variant}`]: l.variant !== null,
      "rounded-pill": l.pill,
      disabled: l.disabled
    }));
    return (c, f) => (b(), L(fe(s(l).tag), {
      id: s(r),
      title: u.value,
      class: W(["badge b-form-tag d-inline-flex align-items-center mw-100", d.value]),
      "aria-labelledby": i.value
    }, {
      default: R(() => [
        ae("span", {
          id: i.value,
          class: "b-form-tag-content flex-grow-1 text-truncate"
        }, [
          V(c.$slots, "default", {}, () => [
            ce(oe(u.value), 1)
          ])
        ], 8, Ed),
        !s(l).disabled && !s(l).noRemove ? (b(), L(zt, {
          key: 0,
          "aria-keyshortcuts": "Delete",
          "aria-label": s(l).removeLabel,
          class: "b-form-tag-remove",
          "aria-describedby": i.value,
          "aria-controls": s(l).id,
          onClick: f[0] || (f[0] = (p) => a("remove", u.value))
        }, null, 8, ["aria-label", "aria-describedby", "aria-controls"])) : ne("", !0)
      ]),
      _: 3
    }, 8, ["id", "title", "class", "aria-labelledby"]));
  }
}), Ld = ["id"], Rd = ["id", "for", "aria-live"], zd = ["id", "aria-live"], Md = ["id"], Hd = ["aria-controls"], Dd = {
  role: "group",
  class: "d-flex"
}, jd = ["id", "disabled", "value", "type", "placeholder", "form", "required", "aria-required"], qd = ["disabled"], Gd = {
  "aria-live": "polite",
  "aria-atomic": "true"
}, Wd = {
  key: 0,
  class: "d-block invalid-feedback"
}, Ud = {
  key: 1,
  class: "form-text text-body-secondary"
}, Kd = {
  key: 2,
  class: "form-text text-body-secondary"
}, Xd = ["name", "value"], Yd = /* @__PURE__ */ q({
  __name: "BFormTags",
  props: /* @__PURE__ */ be({
    addButtonText: { default: "Add" },
    addButtonVariant: { default: "outline-secondary" },
    addOnChange: { type: Boolean, default: !1 },
    autofocus: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    duplicateTagText: { default: "Duplicate tag(s)" },
    form: { default: void 0 },
    inputAttrs: { default: void 0 },
    inputClass: { default: void 0 },
    inputId: { default: void 0 },
    inputType: { default: "text" },
    invalidTagText: { default: "Invalid tag(s)" },
    limit: { default: void 0 },
    limitTagsText: { default: "Tag limit reached" },
    modelValue: {},
    name: { default: void 0 },
    noAddOnEnter: { type: Boolean, default: !1 },
    noOuterFocus: { type: Boolean, default: !1 },
    noTagRemove: { type: Boolean, default: !1 },
    placeholder: { default: "Add tag..." },
    removeOnDelete: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    separator: { default: void 0 },
    size: { default: "md" },
    state: { type: [Boolean, null], default: null },
    tagClass: { default: void 0 },
    tagPills: { type: Boolean, default: !1 },
    tagRemoveLabel: { default: void 0 },
    tagRemovedLabel: { default: "Tag removed" },
    tagValidator: { type: Function, default: () => !0 },
    tagVariant: { default: "secondary" }
  }, {
    modelValue: {
      default: () => []
    },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["blur", "focus", "focusin", "focusout", "tag-state"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BFormTags"), n = e, r = we(t, "modelValue"), u = Ce(), i = Be(() => a.limit ?? NaN), d = kt(() => a.state), c = H(null), { focused: f } = ze(c, {
      initialValue: a.autofocus
    }), p = T(() => a.inputId || `${u.value}input__`), v = H([...r.value]), m = H(""), B = H(r.value.length > 0), k = H(""), _ = H([]), C = H([]), g = H([]);
    ja(r, v, {
      direction: "ltr",
      transform: {
        ltr: (D) => [...D]
      }
    });
    const x = h(() => [
      d.value,
      {
        [`form-control-${a.size}`]: a.size !== "md",
        disabled: a.disabled,
        focus: f.value
      }
    ]), y = h(() => v.value.includes(m.value)), $ = h(
      () => m.value === "" ? !1 : !a.tagValidator(m.value)
    ), S = T(() => v.value.length === i.value), Y = T(() => !$.value && !y.value), K = h(() => ({
      addButtonText: a.addButtonText,
      addButtonVariant: a.addButtonVariant,
      addTag: I,
      disableAddButton: Y.value,
      disabled: a.disabled,
      duplicateTagText: a.duplicateTagText,
      duplicateTags: g.value,
      form: a.form,
      inputAttrs: {
        ...a.inputAttrs,
        disabled: a.disabled,
        form: a.form,
        id: p.value,
        value: m.value
      },
      inputClass: a.inputClass,
      inputHandlers: {
        input: O,
        keydown: w,
        change: z
      },
      inputId: p.value,
      inputType: a.inputType,
      invalidTagText: a.invalidTagText,
      invalidTags: C.value,
      isDuplicate: y.value,
      isInvalid: $.value,
      isLimitReached: S.value,
      limitTagsText: a.limitTagsText,
      limit: i.value,
      noTagRemove: a.noTagRemove,
      placeholder: a.placeholder,
      removeTag: X,
      required: a.required,
      separator: a.separator,
      size: a.size,
      state: a.state,
      tagClass: a.tagClass,
      tagPills: a.tagPills,
      tagRemoveLabel: a.tagRemoveLabel,
      tagVariant: a.tagVariant,
      tags: v.value
    })), P = (D) => {
      if (a.disabled) {
        D.target.blur();
        return;
      }
      n("focusin", D);
    }, j = (D) => {
      a.disabled || a.noOuterFocus || (f.value = !0, n("focus", D));
    }, N = (D) => {
      f.value = !1, n("blur", D);
    }, O = (D) => {
      var Q, Z;
      const M = typeof D == "string" ? D : D.target.value;
      if (B.value = !1, (Q = a.separator) != null && Q.includes(M.charAt(0)) && M.length > 0) {
        c.value && (c.value.value = "");
        return;
      }
      if (m.value = M, (Z = a.separator) != null && Z.includes(M.charAt(M.length - 1))) {
        I(M.slice(0, M.length - 1));
        return;
      }
      _.value = a.tagValidator(M) && !y.value ? [M] : [], C.value = a.tagValidator(M) ? [] : [M], g.value = y.value ? [M] : [], n("tag-state", _.value, C.value, g.value);
    }, z = (D) => {
      a.addOnChange && (O(D), y.value || I(m.value));
    }, w = (D) => {
      if (D.key === "Enter" && !a.noAddOnEnter) {
        I(m.value);
        return;
      }
      (D.key === "Backspace" || D.key === "Delete") && a.removeOnDelete && m.value === "" && B.value && v.value.length > 0 ? X(v.value[v.value.length - 1]) : B.value = !0;
    };
    Le(w, { target: c });
    const A = h(() => {
      if (a.separator)
        return typeof a.separator == "string" ? a.separator : a.separator.join("");
    }), E = h(() => {
      if (A.value)
        return new RegExp(`[${Qr(A.value)}]+`);
    }), I = (D) => {
      D = (D ?? m.value).trim();
      const M = E.value ? D.split(E.value).map((G) => G.trim()) : [D], Q = [];
      for (const G of M)
        if (!(G === "" || y.value || !a.tagValidator(G))) {
          if (i.value && S.value)
            break;
          Q.push(G);
        }
      const Z = [...r.value, ...Q];
      m.value = "", B.value = !0, r.value = Z, f.value = !0;
    }, X = (D) => {
      const M = v.value.indexOf((D == null ? void 0 : D.toString()) ?? "");
      M !== -1 && (k.value = v.value.splice(M, 1).toString(), r.value = v.value);
    };
    return o({
      blur: () => {
        f.value = !1;
      },
      element: c,
      focus: () => {
        f.value = !0;
      }
    }), (D, M) => (b(), F("div", {
      id: s(u),
      class: W(["b-form-tags form-control h-auto", x.value]),
      role: "group",
      tabindex: "-1",
      onFocusin: P,
      onFocusout: M[1] || (M[1] = (Q) => n("focusout", Q))
    }, [
      ae("output", {
        id: `${s(u)}selected_tags__`,
        class: "visually-hidden",
        for: p.value,
        "aria-live": s(f) ? "polite" : "off",
        "aria-atomic": "true",
        "aria-relevant": "additions text"
      }, oe(v.value.join(", ")), 9, Rd),
      ae("div", {
        id: `${s(u)}removed_tags__`,
        role: "status",
        "aria-live": s(f) ? "assertive" : "off",
        "aria-atomic": "true",
        class: "visually-hidden"
      }, " (" + oe(s(a).tagRemovedLabel) + ") " + oe(k.value), 9, zd),
      V(D.$slots, "default", _e(Se(K.value)), () => [
        ae("ul", {
          id: `${s(u)}tag_list__`,
          class: "b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center"
        }, [
          (b(!0), F(pe, null, ke(v.value, (Q, Z) => V(D.$slots, "tag", {
            key: Z,
            tag: Q,
            tagClass: s(a).tagClass,
            tagVariant: s(a).tagVariant,
            tagPills: s(a).tagPills,
            removeTag: X
          }, () => [
            (b(), L(is, {
              key: Q,
              class: W(s(a).tagClass),
              tag: "li",
              variant: s(a).tagVariant,
              pill: s(a).tagPills,
              onRemove: X
            }, {
              default: R(() => [
                ce(oe(Q), 1)
              ]),
              _: 2
            }, 1032, ["class", "variant", "pill"]))
          ])), 128)),
          ae("li", {
            role: "none",
            "aria-live": "off",
            class: "b-from-tags-field flex-grow-1",
            "aria-controls": `${s(u)}tag_list__`
          }, [
            ae("div", Dd, [
              ae("input", J({
                id: p.value,
                ref_key: "input",
                ref: c,
                disabled: s(a).disabled,
                value: m.value,
                type: s(a).inputType,
                placeholder: s(a).placeholder,
                class: "b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0",
                style: { outline: "currentcolor none 0px", "min-width": "5rem" }
              }, s(a).inputAttrs, {
                form: s(a).form,
                required: s(a).required || void 0,
                "aria-required": s(a).required || void 0,
                onInput: O,
                onChange: z,
                onFocus: j,
                onBlur: N
              }), null, 16, jd),
              Y.value ? (b(), F("button", {
                key: 0,
                type: "button",
                class: W(["btn b-form-tags-button py-0", [
                  D.inputClass,
                  {
                    [`btn-${s(a).addButtonVariant}`]: s(a).addButtonVariant !== null,
                    "disabled invisible": m.value.length === 0
                  }
                ]]),
                style: { "font-size": "90%" },
                disabled: s(a).disabled || m.value.length === 0 || S.value,
                onClick: M[0] || (M[0] = (Q) => I(m.value))
              }, [
                V(D.$slots, "add-button-text", {}, () => [
                  ce(oe(s(a).addButtonText), 1)
                ])
              ], 10, qd)) : ne("", !0)
            ])
          ], 8, Hd)
        ], 8, Md),
        ae("div", Gd, [
          $.value ? (b(), F("div", Wd, oe(s(a).invalidTagText) + ": " + oe(m.value), 1)) : ne("", !0),
          y.value ? (b(), F("small", Ud, oe(s(a).duplicateTagText) + ": " + oe(m.value), 1)) : ne("", !0),
          v.value.length === s(a).limit ? (b(), F("small", Kd, oe(s(a).limitTagsText), 1)) : ne("", !0)
        ])
      ]),
      s(a).name ? (b(!0), F(pe, { key: 0 }, ke(v.value, (Q, Z) => (b(), F("input", {
        key: Z,
        type: "hidden",
        name: s(a).name,
        value: Q
      }, null, 8, Xd))), 128)) : ne("", !0)
    ], 42, Ld));
  }
}), Zd = ["id", "name", "form", "value", "disabled", "placeholder", "required", "autocomplete", "readonly", "aria-required", "aria-invalid", "rows", "wrap"], Jd = /* @__PURE__ */ q({
  __name: "BFormTextarea",
  props: /* @__PURE__ */ be({
    noResize: { type: Boolean, default: !1 },
    rows: { default: 2 },
    wrap: { default: "soft" },
    ariaInvalid: { type: [Boolean, String], default: void 0 },
    autocomplete: { default: void 0 },
    autofocus: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    form: { default: void 0 },
    formatter: { type: Function, default: void 0 },
    id: { default: void 0 },
    lazyFormatter: { type: Boolean, default: !1 },
    list: { default: void 0 },
    modelValue: { default: "" },
    name: { default: void 0 },
    placeholder: { default: void 0 },
    plaintext: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    required: { type: Boolean, default: !1 },
    size: { default: void 0 },
    state: { type: [Boolean, null], default: null },
    debounce: { default: 0 },
    debounceMaxWait: { default: NaN }
  }, {
    modelValue: {
      default: ""
    },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t, { expose: o }) {
    const l = U(t, "BFormTextarea"), [a, n] = we(t, "modelValue", {
      set: (_) => dn(_, n)
    }), { input: r, computedId: u, computedAriaInvalid: i, onInput: d, onChange: c, onBlur: f, focus: p, blur: v } = Bn(l, a, n), m = kt(() => l.state), B = h(() => [
      m.value,
      l.plaintext ? "form-control-plaintext" : "form-control",
      {
        [`form-control-${l.size}`]: !!l.size
      }
    ]), k = h(() => ({
      resize: l.noResize ? "none" : void 0
    }));
    return o({
      blur: v,
      element: r,
      focus: p
    }), (_, C) => (b(), F("textarea", {
      id: s(u),
      ref_key: "input",
      ref: r,
      class: W(B.value),
      name: s(l).name || void 0,
      form: s(l).form || void 0,
      value: s(a) ?? void 0,
      disabled: s(l).disabled,
      placeholder: s(l).placeholder,
      required: s(l).required || void 0,
      autocomplete: s(l).autocomplete || void 0,
      readonly: s(l).readonly || s(l).plaintext,
      "aria-required": s(l).required || void 0,
      "aria-invalid": s(i),
      rows: s(l).rows,
      style: Me(k.value),
      wrap: s(l).wrap || void 0,
      onInput: C[0] || (C[0] = (g) => s(d)(g)),
      onChange: C[1] || (C[1] = (g) => s(c)(g)),
      onBlur: C[2] || (C[2] = (g) => s(f)(g))
    }, null, 46, Zd));
  }
}), Qd = {
  key: 0,
  class: "input-group-text"
}, ec = ["innerHTML"], tc = { key: 1 }, ac = {
  key: 0,
  class: "input-group-text"
}, lc = ["innerHTML"], oc = { key: 1 }, nc = /* @__PURE__ */ q({
  __name: "BInputGroup",
  props: {
    append: { default: void 0 },
    appendHtml: { default: void 0 },
    id: { default: void 0 },
    prepend: { default: void 0 },
    prependHtml: { default: void 0 },
    size: { default: "md" },
    tag: { default: "div" }
  },
  setup(t) {
    We(un, !0);
    const e = U(t, "BInputGroup"), l = h(() => ({
      [`input-group-${e.size}`]: e.size !== "md"
    })), a = T(() => !!e.append || !!e.appendHtml), n = T(() => !!e.prepend || !!e.prependHtml);
    return (r, u) => (b(), L(fe(s(e).tag), {
      id: s(e).id,
      class: W(["input-group", l.value]),
      role: "group"
    }, {
      default: R(() => [
        V(r.$slots, "prepend", {}, () => [
          n.value ? (b(), F("span", Qd, [
            s(e).prependHtml ? (b(), F("span", {
              key: 0,
              innerHTML: s(e).prependHtml
            }, null, 8, ec)) : (b(), F("span", tc, oe(s(e).prepend), 1))
          ])) : ne("", !0)
        ]),
        V(r.$slots, "default"),
        V(r.$slots, "append", {}, () => [
          a.value ? (b(), F("span", ac, [
            s(e).appendHtml ? (b(), F("span", {
              key: 0,
              innerHTML: s(e).appendHtml
            }, null, 8, lc)) : (b(), F("span", oc, oe(s(e).append), 1))
          ])) : ne("", !0)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), sc = /* @__PURE__ */ q({
  __name: "BInputGroupText",
  props: {
    tag: { default: "div" },
    text: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BInputGroupText");
    return (l, a) => (b(), L(fe(s(e).tag), { class: "input-group-text" }, {
      default: R(() => [
        V(l.$slots, "default", {}, () => [
          ce(oe(s(e).text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), rc = /* @__PURE__ */ q({
  __name: "BListGroup",
  props: {
    flush: { type: Boolean, default: !1 },
    horizontal: { type: [Boolean, String], default: !1 },
    numbered: { type: Boolean, default: !1 },
    tag: { default: "div" }
  },
  setup(t) {
    const e = U(t, "BListGroup"), l = h(() => {
      const n = e.flush ? !1 : e.horizontal;
      return {
        "list-group-flush": e.flush,
        "list-group-horizontal": n === !0,
        [`list-group-horizontal-${n}`]: typeof n == "string",
        "list-group-numbered": e.numbered
      };
    }), a = T(() => e.numbered === !0 ? "ol" : e.tag);
    return We(Yo, {
      numbered: T(() => e.numbered)
    }), (n, r) => (b(), L(fe(a.value), {
      class: W(["list-group", l.value])
    }, {
      default: R(() => [
        V(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), ic = /* @__PURE__ */ q({
  __name: "BListGroupItem",
  props: {
    action: { type: Boolean, default: !1 },
    button: { type: Boolean, default: !1 },
    tag: { default: "div" },
    active: { type: Boolean, default: !1 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    icon: { type: Boolean, default: void 0 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: void 0 },
    variant: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BListGroupItem"), l = Lt(), a = Ve(Yo, null), { computedLink: n } = Ct(e), r = T(() => !e.button && n.value), u = T(
      () => a != null && a.numbered.value ? "li" : e.button ? "button" : r.value ? it : e.tag
    ), i = h(
      () => e.action || r.value || e.button || ["a", "router-link", "button", "b-link"].includes(e.tag)
    ), d = h(() => ({
      [`list-group-item-${e.variant}`]: e.variant !== null && e.variant !== void 0,
      "list-group-item-action": i.value,
      active: e.active,
      disabled: e.disabled
    })), c = h(() => {
      const f = {};
      return e.button && ((!l || !l.type) && (f.type = "button"), e.disabled && (f.disabled = !0)), f;
    });
    return (f, p) => (b(), L(fe(u.value), J({
      class: ["list-group-item", d.value],
      "aria-current": s(e).active ? !0 : void 0,
      "aria-disabled": s(e).disabled ? !0 : void 0,
      target: r.value ? s(e).target : void 0,
      href: s(e).button ? void 0 : s(e).href,
      to: s(e).button ? void 0 : s(e).to
    }, c.value), {
      default: R(() => [
        V(f.$slots, "default")
      ]),
      _: 3
    }, 16, ["class", "aria-current", "aria-disabled", "target", "href", "to"]));
  }
}), uc = { id: "__BVID__modal-container" }, dc = /* @__PURE__ */ q({
  __name: "BModalOrchestrator",
  props: {
    teleportDisabled: { default: !1 },
    teleportTo: { default: "body" }
  },
  setup(t, { expose: o }) {
    const l = U(t, "BModalOrchestrator"), { modals: a, remove: n, show: r, confirm: u, leave: i } = _n(), d = (c) => xa(c, ["_promise", "_self", "_isConfirm", "_modelValue"]);
    return o({
      modals: a,
      show: r,
      confirm: u
    }), (c, f) => (b(), L(_t, {
      to: s(l).teleportTo,
      disabled: s(l).teleportDisabled
    }, [
      ae("div", uc, [
        (b(!0), F(pe, null, ke(s(a), (p, v) => (b(), L(fe(p.value.component), J({
          key: v,
          modelValue: p.value.props._modelValue,
          "onUpdate:modelValue": (m) => p.value.props._modelValue = m,
          ref_for: !0
        }, d(p.value.props), {
          "teleport-disabled": !0,
          "onUpdate:modelValue": (m) => {
            var B;
            return (B = s(i)) == null ? void 0 : B(p.value.props._self);
          },
          onHide: (m) => {
            if (p.value.props._isConfirm === !0) {
              if (m.trigger === "ok") {
                p.value.props._promise.resolve(!0);
                return;
              }
              if (m.trigger === "cancel") {
                p.value.props._promise.resolve(!1);
                return;
              }
              p.value.props._promise.resolve(null);
            }
            p.value.props._promise.resolve(!0);
          },
          onHidden: (m) => {
            var B;
            return (B = s(n)) == null ? void 0 : B(p.value.props._self);
          }
        }), null, 16, ["modelValue", "onUpdate:modelValue", "onHide", "onHidden"]))), 128))
      ])
    ], 8, ["to", "disabled"]));
  }
}), cc = /* @__PURE__ */ q({
  __name: "BNav",
  props: {
    align: { default: void 0 },
    cardHeader: { type: Boolean, default: !1 },
    fill: { type: Boolean, default: !1 },
    justified: { type: Boolean, default: !1 },
    pills: { type: Boolean, default: !1 },
    small: { type: Boolean, default: !1 },
    tabs: { type: Boolean, default: !1 },
    tag: { default: "ul" },
    underline: { type: Boolean, default: !1 },
    vertical: { type: Boolean, default: !1 }
  },
  setup(t) {
    const e = U(t, "BNav"), l = Xt(() => e.align), a = h(() => ({
      "nav-tabs": e.tabs,
      "nav-pills": e.pills && !e.tabs,
      "card-header-tabs": !e.vertical && e.cardHeader && e.tabs,
      "card-header-pills": !e.vertical && e.cardHeader && e.pills && !e.tabs,
      "flex-column": e.vertical,
      "nav-fill": !e.vertical && e.fill,
      "nav-justified": !e.vertical && e.justified,
      [l.value]: !e.vertical && e.align !== void 0,
      small: e.small,
      "nav-underline": e.underline
    }));
    return (n, r) => (b(), L(fe(s(e).tag), {
      class: W(["nav", a.value])
    }, {
      default: R(() => [
        V(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), fc = { class: "d-flex flex-row align-items-center flex-wrap" }, vc = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BNavForm",
  props: {
    role: { default: void 0 },
    floating: { type: Boolean, default: void 0 },
    id: { default: void 0 },
    novalidate: { type: Boolean, default: void 0 },
    validated: { type: Boolean, default: void 0 }
  },
  emits: ["submit"],
  setup(t, { emit: o }) {
    const l = U(t, "BNavForm"), a = o, n = (r) => {
      a("submit", r);
    };
    return (r, u) => (b(), F("li", fc, [
      ge(ls, J(r.$attrs, {
        id: s(l).id,
        floating: s(l).floating,
        role: s(l).role,
        novalidate: s(l).novalidate,
        validated: s(l).validated,
        class: "d-flex",
        onSubmit: xt(n, ["prevent"])
      }), {
        default: R(() => [
          V(r.$slots, "default")
        ]),
        _: 3
      }, 16, ["id", "floating", "role", "novalidate", "validated"])
    ]));
  }
}), pc = { class: "nav-item" }, mc = /* @__PURE__ */ q({
  __name: "BNavItem",
  props: {
    linkAttrs: { default: void 0 },
    linkClass: { default: void 0 },
    active: { type: Boolean, default: void 0 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    icon: { type: Boolean, default: void 0 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: void 0 },
    variant: { default: void 0 }
  },
  emits: ["click"],
  setup(t, { emit: o }) {
    const l = U(t, "BNavItem"), a = o, n = h(
      () => pl(l, [
        "active",
        "activeClass",
        "append",
        "disabled",
        "href",
        "icon",
        "opacity",
        "opacityHover",
        "rel",
        "replace",
        "routerComponentName",
        "target",
        "to",
        "underlineOffset",
        "underlineOffsetHover",
        "underlineOpacity",
        "underlineOpacityHover",
        "underlineVariant",
        "variant"
      ])
    );
    return n.value.activeClass, (r, u) => (b(), F("li", pc, [
      ge(it, J({
        class: ["nav-link", r.linkClass],
        tabindex: s(l).disabled ? -1 : void 0,
        "aria-disabled": s(l).disabled ? !0 : void 0
      }, { ...n.value, ...r.linkAttrs }, {
        onClick: u[0] || (u[0] = (i) => a("click", i))
      }), {
        default: R(() => [
          V(r.$slots, "default")
        ]),
        _: 3
      }, 16, ["class", "tabindex", "aria-disabled"])
    ]));
  }
}), bc = { class: "nav-item dropdown" }, yc = /* @__PURE__ */ q({
  __name: "BNavItemDropdown",
  props: /* @__PURE__ */ be({
    ariaLabel: { default: void 0 },
    autoClose: { type: [Boolean, String], default: !0 },
    boundary: { default: "clippingAncestors" },
    boundaryPadding: { default: void 0 },
    center: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    dropend: { type: Boolean, default: !1 },
    dropstart: { type: Boolean, default: !1 },
    dropup: { type: Boolean, default: !1 },
    end: { type: Boolean, default: !1 },
    floatingMiddleware: { default: void 0 },
    id: { default: void 0 },
    isNav: { type: Boolean, default: !0 },
    lazy: { type: Boolean, default: !1 },
    menuClass: { default: void 0 },
    modelValue: { type: Boolean },
    noCaret: { type: Boolean, default: !1 },
    noFlip: { type: Boolean, default: !1 },
    noShift: { type: Boolean, default: !1 },
    noSize: { type: Boolean, default: !1 },
    offset: { default: 0 },
    role: { default: "menu" },
    size: { default: "md" },
    skipWrapper: { type: Boolean },
    split: { type: Boolean, default: !1 },
    splitButtonType: { default: "button" },
    splitClass: { default: void 0 },
    splitDisabled: { type: Boolean, default: void 0 },
    splitHref: { default: void 0 },
    splitTo: { default: void 0 },
    splitVariant: { default: void 0 },
    strategy: { default: "absolute" },
    text: { default: void 0 },
    toggleClass: { default: void 0 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "link" },
    wrapperClass: {},
    teleportDisabled: { default: !1 },
    teleportTo: { default: void 0 }
  }, {
    modelValue: { type: Boolean, default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["click", "hidden", "hide", "hide-prevented", "show", "show-prevented", "shown", "toggle"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BNavItemDropdown"), n = e, r = we(t, "modelValue"), u = H(null), i = () => {
      var f;
      (f = u.value) == null || f.hide();
    }, d = () => {
      var f;
      (f = u.value) == null || f.show();
    };
    return o({
      hide: i,
      show: d,
      toggle: () => {
        var f;
        (f = u.value) == null || f.toggle();
      }
    }), (f, p) => (b(), F("li", bc, [
      ge(as, J({
        ref_key: "dropdown",
        ref: u
      }, s(a), {
        modelValue: r.value,
        "onUpdate:modelValue": p[0] || (p[0] = (v) => r.value = v),
        "is-nav": "",
        onShow: p[1] || (p[1] = (v) => n("show", v)),
        onShown: p[2] || (p[2] = (v) => n("shown")),
        onHide: p[3] || (p[3] = (v) => n("hide", v)),
        onHidden: p[4] || (p[4] = (v) => n("hidden")),
        onHidePrevented: p[5] || (p[5] = (v) => n("hide-prevented")),
        onShowPrevented: p[6] || (p[6] = (v) => n("show-prevented")),
        onClick: p[7] || (p[7] = (v) => n("click", v)),
        onToggle: p[8] || (p[8] = (v) => n("toggle"))
      }), {
        "button-content": R(() => [
          V(f.$slots, "button-content")
        ]),
        "toggle-text": R(() => [
          V(f.$slots, "toggle-text")
        ]),
        default: R(() => [
          V(f.$slots, "default", {
            hide: i,
            show: d
          })
        ]),
        _: 3
      }, 16, ["modelValue"])
    ]));
  }
}), gc = { class: "navbar-text" }, hc = /* @__PURE__ */ q({
  __name: "BNavText",
  props: {
    text: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BNavText");
    return (l, a) => (b(), F("li", gc, [
      V(l.$slots, "default", {}, () => [
        ce(oe(s(e).text), 1)
      ])
    ]));
  }
}), Bc = /* @__PURE__ */ q({
  __name: "BNavbar",
  props: {
    autoClose: { type: Boolean, default: !0 },
    container: { type: [Boolean, String], default: "fluid" },
    fixed: { default: void 0 },
    print: { type: Boolean, default: !1 },
    sticky: { default: void 0 },
    tag: { default: "nav" },
    toggleable: { type: [Boolean, String], default: !1 },
    variant: { default: null }
  },
  setup(t) {
    const e = U(t, "BNavbar"), l = T(() => e.tag === "nav" ? void 0 : "navigation"), a = oi(() => e.container), n = h(() => ({
      "d-print": e.print,
      [`sticky-${e.sticky}`]: e.sticky !== void 0,
      [`bg-${e.variant}`]: e.variant !== null,
      [`fixed-${e.fixed}`]: e.fixed !== void 0,
      "navbar-expand": e.toggleable === !1,
      [`navbar-expand-${e.toggleable}`]: typeof e.toggleable == "string"
    }));
    return We(vl, {
      tag: T(() => e.tag),
      autoClose: T(() => e.autoClose)
    }), (r, u) => (b(), L(fe(s(e).tag), {
      class: W(["navbar", n.value]),
      role: l.value
    }, {
      default: R(() => [
        s(e).container !== !1 ? (b(), F("div", {
          key: 0,
          class: W(s(a))
        }, [
          V(r.$slots, "default")
        ], 2)) : V(r.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "role"]));
  }
}), _c = /* @__PURE__ */ q({
  __name: "BNavbarBrand",
  props: {
    tag: { default: "div" },
    active: { type: Boolean, default: void 0 },
    activeClass: { default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    exactActiveClass: { default: void 0 },
    href: { default: void 0 },
    icon: { type: Boolean, default: void 0 },
    noRel: { type: Boolean },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: Boolean, default: void 0 },
    routerComponentName: { default: void 0 },
    stretched: { type: Boolean, default: !1 },
    target: { default: void 0 },
    to: { default: void 0 },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    underlineVariant: { default: void 0 },
    variant: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BNavbarBrand"), { computedLink: l, computedLinkProps: a } = Ct(e, [
      "active",
      "activeClass",
      "append",
      "disabled",
      "href",
      "rel",
      "replace",
      "routerComponentName",
      "target",
      "to",
      "variant",
      "opacity",
      "opacityHover",
      "underlineVariant",
      "underlineOffset",
      "underlineOffsetHover",
      "underlineOpacity",
      "underlineOpacityHover",
      "icon"
    ]), n = T(() => l.value ? it : e.tag);
    return (r, u) => (b(), L(fe(n.value), J({ class: "navbar-brand" }, s(a)), {
      default: R(() => [
        V(r.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), wc = /* @__PURE__ */ q({
  __name: "BNavbarNav",
  props: {
    align: { default: void 0 },
    fill: { type: Boolean, default: !1 },
    justified: { type: Boolean, default: !1 },
    small: { type: Boolean, default: !1 },
    tag: { default: "ul" }
  },
  setup(t) {
    const e = U(t, "BNavbarNav"), l = Xt(() => e.align), a = h(() => ({
      "nav-fill": e.fill,
      "nav-justified": e.justified,
      [l.value]: e.align !== void 0,
      small: e.small
    }));
    return (n, r) => (b(), F("ul", {
      class: W(["navbar-nav", a.value])
    }, [
      V(n.$slots, "default")
    ], 2));
  }
}), ao = (t, o) => t.setAttribute("data-bs-theme", o), Cc = {
  mounted(t, o) {
    ao(t, o.value);
  },
  updated(t, o) {
    ao(t, o.value);
  }
}, kc = (t, o) => {
  const { modifiers: e, arg: l, value: a } = t, n = Object.keys(e || {}), r = typeof a == "string" ? a.split(oa) : a;
  if (o.tagName.toLowerCase() === "a") {
    const u = o.getAttribute("href") || "";
    Kr.test(u) && n.push(u.replace(Ur, ""));
  }
  return Array.prototype.concat.apply([], [l, r]).forEach((u) => typeof u == "string" && n.push(u)), n.filter((u, i, d) => u && d.indexOf(u) === i);
}, Tc = (t, o) => {
  t.forEach((e) => {
    const l = document.getElementById(e);
    l !== null && l.dispatchEvent(new Event("bv-toggle"));
  }), setTimeout(() => us(t, o), 50);
}, us = (t, o) => {
  let e = !1;
  t.forEach((l) => {
    const a = document.getElementById(l);
    a != null && a.classList.contains("show") && (e = !0), a != null && a.classList.contains("closing") && (e = !1);
  }), o.setAttribute("aria-expanded", e ? "true" : "false"), o.classList.remove(e ? "collapsed" : "not-collapsed"), o.classList.add(e ? "not-collapsed" : "collapsed");
}, lo = (t, o) => {
  const e = kc(o, t);
  e.length !== 0 && (t.__toggle && t.removeEventListener("click", t.__toggle), t.__toggle = () => Tc(e, t), t.addEventListener("click", t.__toggle), t.setAttribute("aria-controls", e.join(" ")), us(e, t));
}, Ya = {
  mounted: lo,
  updated: lo,
  unmounted(t) {
    t.removeEventListener("click", t.__toggle), t.removeAttribute("aria-controls"), t.removeAttribute("aria-expanded");
  }
}, Sc = {
  mounted(t, o) {
    if (!Ut(o.value))
      return;
    const l = pa(o.value, t);
    !l.content && !l.title || ba(t, o, {
      ...ma(o, t),
      ...l
    });
  },
  updated(t, o) {
    if (!Ut(o.value))
      return;
    const l = pa(o.value, t);
    !l.content && !l.title || (ya(t), ba(t, o, {
      ...ma(o, t),
      ...l
    }));
  },
  beforeUnmount(t) {
    ya(t);
  }
}, oo = (t, o) => {
  t.$__scrollspy && t.$__scrollspy.cleanup();
  const { arg: e, value: l } = o, a = typeof l == "object" && l !== null, n = e || (typeof l == "string" ? l : a ? l.content || l.element : null);
  t.$__scrollspy = Cn(n, t, a ? xa(l, ["content", "element"]) : {});
}, xc = {
  mounted: oo,
  updated: oo,
  beforeUnmount(t) {
    t.$__scrollspy && t.$__scrollspy.cleanup();
  }
}, $c = {
  mounted(t, o) {
    const e = Ut(o.value);
    if (!e)
      return;
    const l = pa(o.value, t);
    !l.content && !l.title || ba(t, o, {
      noninteractive: !0,
      ...ma(o, t),
      title: l.title ?? l.content ?? "",
      tooltip: e
    });
  },
  updated(t, o) {
    const e = Ut(o.value);
    if (!e)
      return;
    const l = pa(o.value, t);
    !l.content && !l.title || (ya(t), ba(t, o, {
      noninteractive: !0,
      ...ma(o, t),
      title: l.title ?? l.content ?? "",
      tooltip: e
    }));
  },
  beforeUnmount(t) {
    ya(t);
  }
}, pf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  vBColorMode: Cc,
  vBModal: Ya,
  vBPopover: Sc,
  vBScrollspy: xc,
  vBToggle: Ya,
  vBTooltip: $c
}, Symbol.toStringTag, { value: "Module" })), Ac = ["disabled", "aria-label"], Vc = /* @__PURE__ */ ae("span", { class: "navbar-toggler-icon" }, null, -1), Nc = /* @__PURE__ */ q({
  __name: "BNavbarToggle",
  props: {
    disabled: { type: Boolean, default: !1 },
    label: { default: "Toggle navigation" },
    target: { default: void 0 }
  },
  emits: ["click"],
  setup(t, { emit: o }) {
    const l = U(t, "BNavbarToggle"), a = o, n = h(() => ({
      disabled: l.disabled
    })), r = (u) => {
      l.disabled || a("click", u);
    };
    return (u, i) => dt((b(), F("button", {
      class: W(["navbar-toggler", n.value]),
      type: "button",
      disabled: s(l).disabled,
      "aria-label": s(l).label,
      onClick: r
    }, [
      V(u.$slots, "default", {}, () => [
        Vc
      ])
    ], 10, Ac)), [
      [s(Ya), s(l).disabled ? void 0 : s(l).target]
    ]);
  }
}), Oc = ["id", "aria-labelledby"], Fc = ["id"], no = "offcanvas-fallback-focus", Pc = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BOffcanvas",
  props: /* @__PURE__ */ be({
    hideBackdrop: { type: Boolean, default: !1 },
    bodyAttrs: { default: void 0 },
    bodyClass: { default: void 0 },
    bodyScrolling: { type: Boolean, default: !1 },
    footerClass: { default: void 0 },
    headerClass: { default: void 0 },
    headerCloseClass: { default: void 0 },
    headerCloseLabel: { default: "Close" },
    headerCloseVariant: { default: "secondary" },
    id: { default: void 0 },
    lazy: { type: Boolean, default: !1 },
    modelValue: { type: Boolean },
    noCloseOnBackdrop: { type: Boolean, default: !1 },
    noCloseOnEsc: { type: Boolean, default: !1 },
    noFocus: { type: Boolean, default: !1 },
    noHeader: { type: Boolean, default: !1 },
    noTrap: { type: Boolean, default: !1 },
    noHeaderClose: { type: Boolean, default: !1 },
    placement: { default: "start" },
    shadow: { type: [String, Boolean], default: !1 },
    title: { default: void 0 },
    responsive: {},
    width: { default: void 0 },
    teleportDisabled: { default: !1 },
    teleportTo: { default: "body" }
  }, {
    modelValue: { type: Boolean, default: !1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["close", "esc", "hidden", "hide", "hide-prevented", "show", "show-prevented", "shown"], ["update:modelValue"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BOffcanvas"), n = e, r = je(), u = we(t, "modelValue"), i = Ce(() => a.id, "offcanvas"), d = wr(_r), c = d.greaterOrEqual(() => a.responsive ?? "xs"), f = d.smallerOrEqual(() => a.responsive ?? "xs"), p = h(
      () => a.responsive !== void 0 && c.value
    );
    wn(u, () => a.bodyScrolling || p.value);
    const v = H(null), m = H(null);
    Le(
      "Escape",
      () => {
        w("esc");
      },
      { target: v }
    );
    const { focused: B } = ze(v, {
      initialValue: u.value && a.noFocus === !1
    }), k = H(u.value), { needsFallback: _ } = Rn({
      element: v,
      isActive: k,
      noTrap: () => a.noTrap || p.value,
      fallbackFocus: {
        classSelector: no,
        ref: m
      }
    }), C = H(!1), g = H(!1), x = h(
      () => (a.responsive === void 0 || !p.value) && a.hideBackdrop === !1 && u.value === !0
    ), y = h(
      () => a.lazy === !1 || a.lazy === !0 && C.value === !0 || a.lazy === !0 && u.value === !0
    ), $ = T(() => !Pe(r["header-close"])), S = h(() => [
      { "text-reset": !$.value },
      a.headerCloseClass
    ]), Y = h(() => ({
      variant: $.value ? a.headerCloseVariant : void 0,
      class: S.value
    })), K = h(
      () => g.value === !0 ? null : {
        enterToClass: "showing",
        enterFromClass: "",
        leaveToClass: "hiding show",
        leaveFromClass: "show"
      }
    ), P = T(() => !Pe(r.footer)), j = h(() => [
      a.responsive === void 0 ? "offcanvas" : `offcanvas-${a.responsive}`,
      `offcanvas-${a.placement}`,
      {
        show: u.value && k.value === !0,
        [`shadow-${a.shadow}`]: !!a.shadow
      }
    ]), N = h(() => ({
      width: a.width
    })), O = h(() => ({
      visible: u.value,
      placement: a.placement,
      hide: w
    })), z = (Q, Z = {}) => new wt(Q, {
      cancelable: !1,
      target: v.value || null,
      relatedTarget: null,
      trigger: null,
      ...Z,
      componentId: i.value
    }), w = (Q = "") => {
      if (Q === "backdrop" && a.noCloseOnBackdrop || Q === "esc" && a.noCloseOnEsc) {
        n("hide-prevented");
        return;
      }
      const Z = z("hide", { cancelable: Q !== "", trigger: Q });
      if (Q === "close" && n(Q, Z), Q === "esc" && n(Q, Z), n("hide", Z), Z.defaultPrevented) {
        n("hide-prevented");
        return;
      }
      u.value = !1;
    }, A = () => {
      const Q = z("show", { cancelable: !0 });
      if (n("show", Q), Q.defaultPrevented) {
        u.value = !1, n("show-prevented");
        return;
      }
      u.value = !0;
    }, E = () => {
      Oe(() => {
        a.noFocus === !1 && (B.value = !0);
      });
    }, I = () => A(), X = () => {
      k.value = !0, E(), n("shown", z("shown")), a.lazy === !0 && (C.value = !0);
    }, D = () => {
      g.value = !1, k.value = !1;
    }, M = () => {
      n("hidden", z("hidden")), a.lazy === !0 && (C.value = !1);
    };
    return $e(v, "bv-toggle", () => {
      u.value ? w() : A();
    }), de(c, (Q) => {
      a.responsive !== void 0 && (u.value = Q);
    }), de(f, (Q) => {
      a.responsive === void 0 && Q === !0 || (g.value = !0);
    }), o({
      hide: w,
      show: A
    }), (Q, Z) => (b(), L(_t, {
      to: s(a).teleportTo,
      disabled: s(a).teleportDisabled || p.value
    }, [
      ge(el, J(K.value, {
        onBeforeEnter: I,
        onAfterEnter: X,
        onLeave: D,
        onAfterLeave: M
      }), {
        default: R(() => [
          dt(ae("div", J({
            id: s(i),
            ref_key: "element",
            ref: v,
            "aria-modal": "true",
            role: "dialog",
            class: j.value,
            style: N.value,
            tabindex: "-1",
            "aria-labelledby": `${s(i)}-offcanvas-label`,
            "data-bs-backdrop": "false"
          }, Q.$attrs), [
            y.value ? (b(), F(pe, { key: 0 }, [
              s(a).noHeader ? ne("", !0) : (b(), F("div", {
                key: 0,
                class: W(["offcanvas-header", s(a).headerClass])
              }, [
                V(Q.$slots, "header", _e(Se(O.value)), () => [
                  ae("h5", {
                    id: `${s(i)}-offcanvas-label`,
                    class: "offcanvas-title"
                  }, [
                    V(Q.$slots, "title", _e(Se(O.value)), () => [
                      ce(oe(s(a).title), 1)
                    ])
                  ], 8, Fc),
                  s(a).noHeaderClose ? ne("", !0) : (b(), F(pe, { key: 0 }, [
                    $.value ? (b(), L(vt, J({ key: 0 }, Y.value, {
                      onClick: Z[0] || (Z[0] = (G) => w("close"))
                    }), {
                      default: R(() => [
                        V(Q.$slots, "header-close")
                      ]),
                      _: 3
                    }, 16)) : (b(), L(zt, J({
                      key: 1,
                      "aria-label": s(a).headerCloseLabel
                    }, Y.value, {
                      onClick: Z[1] || (Z[1] = (G) => w("close"))
                    }), null, 16, ["aria-label"]))
                  ], 64))
                ])
              ], 2)),
              ae("div", J({
                class: ["offcanvas-body", s(a).bodyClass]
              }, s(a).bodyAttrs), [
                V(Q.$slots, "default", _e(Se(O.value)))
              ], 16),
              P.value ? (b(), F("div", {
                key: 1,
                class: W(s(a).footerClass)
              }, [
                V(Q.$slots, "footer", _e(Se(O.value)))
              ], 2)) : ne("", !0)
            ], 64)) : ne("", !0),
            s(_) ? (b(), F("div", {
              key: 1,
              ref_key: "fallbackFocusElement",
              ref: m,
              class: W(no),
              tabindex: "0",
              style: { width: "0", height: "0", overflow: "hidden" }
            }, null, 512)) : ne("", !0)
          ], 16, Oc), [
            [Kt, u.value || p.value]
          ])
        ]),
        _: 3
      }, 16),
      x.value ? V(Q.$slots, "backdrop", { key: 0 }, () => [
        ae("div", {
          class: "offcanvas-backdrop fade show",
          onClick: Z[2] || (Z[2] = (G) => w("backdrop"))
        })
      ]) : ne("", !0)
    ], 8, ["to", "disabled"]));
  }
}), ds = /* @__PURE__ */ q({
  __name: "BOverlay",
  props: {
    bgColor: { default: void 0 },
    blur: { default: "2px" },
    fixed: { type: Boolean, default: !1 },
    noCenter: { type: Boolean, default: !1 },
    noFade: { type: Boolean, default: !1 },
    noSpinner: { type: Boolean, default: !1 },
    noWrap: { type: Boolean, default: !1 },
    opacity: { default: 0.85 },
    overlayTag: { default: "div" },
    show: { type: Boolean, default: !1 },
    spinnerSmall: { type: Boolean, default: !1 },
    spinnerType: { default: "border" },
    spinnerVariant: { default: void 0 },
    variant: { default: "light" },
    wrapTag: { default: "div" },
    zIndex: { default: 10 },
    rounded: { type: [Boolean, String, Number], default: !1 },
    roundedTop: { type: [Boolean, String, Number], default: void 0 },
    roundedBottom: { type: [Boolean, String, Number], default: void 0 },
    roundedStart: { type: [Boolean, String, Number], default: void 0 },
    roundedEnd: { type: [Boolean, String, Number], default: void 0 }
  },
  emits: ["click", "hidden", "shown"],
  setup(t, { emit: o }) {
    const l = U(t, "BOverlay"), a = o, n = { top: 0, left: 0, bottom: 0, right: 0 }, r = yl(() => ({
      rounded: l.rounded,
      roundedTop: l.roundedTop,
      roundedBottom: l.roundedBottom,
      roundedStart: l.roundedStart,
      roundedEnd: l.roundedEnd
    })), u = T(
      () => l.variant !== null && !l.bgColor ? `bg-${l.variant}` : ""
    ), i = T(() => l.show ? !0 : null), d = h(() => ({
      type: l.spinnerType,
      variant: l.spinnerVariant,
      small: l.spinnerSmall
    })), c = h(() => ({
      ...n,
      zIndex: l.zIndex || 10
    })), f = h(() => ({
      "position-absolute": !l.noWrap || !l.fixed,
      "position-fixed": l.noWrap && l.fixed
    })), p = h(() => [u.value, r.value]), v = h(() => ({
      ...n,
      opacity: l.opacity,
      backgroundColor: l.bgColor || void 0,
      backdropFilter: l.blur ? `blur(${l.blur})` : void 0
    })), m = h(
      () => l.noCenter ? n : {
        top: "50%",
        left: "50%",
        transform: "translateX(-50%) translateY(-50%)"
      }
    );
    return (B, k) => (b(), L(Yt, {
      tag: s(l).wrapTag,
      class: "b-overlay-wrap position-relative",
      "aria-busy": i.value,
      skip: s(l).noWrap
    }, {
      default: R(() => [
        V(B.$slots, "default"),
        ge($a, {
          "no-fade": s(l).noFade,
          "trans-props": { enterToClass: "show" },
          name: "fade",
          onAfterEnter: k[1] || (k[1] = (_) => a("shown")),
          onAfterLeave: k[2] || (k[2] = (_) => a("hidden"))
        }, {
          default: R(() => [
            s(l).show ? (b(), L(fe(s(l).overlayTag), {
              key: 0,
              class: W(["b-overlay", f.value]),
              style: Me(c.value),
              onClick: k[0] || (k[0] = (_) => a("click", _))
            }, {
              default: R(() => [
                ae("div", {
                  class: W(["position-absolute", p.value]),
                  style: Me(v.value)
                }, null, 6),
                ae("div", {
                  class: "position-absolute",
                  style: Me(m.value)
                }, [
                  V(B.$slots, "overlay", _e(Se(d.value)), () => [
                    s(l).noSpinner ? ne("", !0) : (b(), L(Aa, _e(J({ key: 0 }, d.value)), null, 16))
                  ])
                ], 4)
              ]),
              _: 3
            }, 8, ["class", "style"])) : ne("", !0)
          ]),
          _: 3
        }, 8, ["no-fade"])
      ]),
      _: 3
    }, 8, ["tag", "aria-busy", "skip"]));
  }
}), Ic = ["aria-disabled", "aria-label"], so = 20, ro = 0, Ec = /* @__PURE__ */ q({
  __name: "BPagination",
  props: /* @__PURE__ */ be({
    align: { default: "start" },
    ariaControls: { default: void 0 },
    ariaLabel: { default: "Pagination" },
    disabled: { type: Boolean, default: !1 },
    ellipsisClass: { default: void 0 },
    ellipsisText: { default: "…" },
    firstClass: { default: void 0 },
    firstNumber: { type: Boolean, default: !1 },
    firstText: { default: "«" },
    hideEllipsis: { type: Boolean, default: !1 },
    hideGotoEndButtons: { type: Boolean, default: !1 },
    labelFirstPage: { default: "Go to first page" },
    labelLastPage: { default: "Go to last page" },
    labelNextPage: { default: "Go to next page" },
    labelPage: { default: "Go to page" },
    labelPrevPage: { default: "Go to previous page" },
    lastClass: { default: void 0 },
    lastNumber: { type: Boolean, default: !1 },
    lastText: { default: "»" },
    limit: { default: 5 },
    modelValue: {},
    nextClass: { default: void 0 },
    nextText: { default: "›" },
    pageClass: { default: void 0 },
    perPage: { default: so },
    pills: { type: Boolean, default: !1 },
    prevClass: { default: void 0 },
    prevText: { default: "‹" },
    size: { default: void 0 },
    totalRows: { default: ro }
  }, {
    modelValue: { default: 1 },
    modelModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["page-click"], ["update:modelValue"]),
  setup(t, { emit: o }) {
    const d = U(t, "BPagination"), c = o, f = we(t, "modelValue"), p = Be(() => d.limit, { nanToZero: !0, method: "parseInt" }), v = Be(() => d.perPage, { nanToZero: !0, method: "parseInt" }), m = Be(() => d.totalRows, { nanToZero: !0, method: "parseInt" }), B = Be(f, { nanToZero: !0, method: "parseInt" }), k = T(() => Math.max(v.value || so, 1)), _ = T(() => Math.max(m.value || ro, 0)), C = T(() => Math.ceil(_.value / k.value)), g = T(() => d.align === "fill"), x = T(() => d.align === "fill" ? "start" : d.align), y = Xt(x), $ = (te) => te === B.value, S = (te) => d.disabled ? null : $(te) ? "0" : "-1", Y = (te) => d.disabled || $(te) || B.value < 1 || // Check if the number is out of bounds
    te < 1 || te > C.value, K = h(() => Y(1)), P = h(() => Y(B.value - 1)), j = h(() => Y(C.value)), N = h(() => Y(B.value + 1)), O = ({
      page: te,
      classVal: ve,
      dis: ue,
      slotName: me,
      textValue: le,
      tabIndex: re,
      label: he,
      position: ee,
      isActive: ye,
      role: Te,
      hidden: Ae
    }) => ({
      li: {
        class: [
          "page-item",
          {
            active: ye,
            disabled: ue,
            "flex-fill": g.value,
            "d-flex": g.value && !ue
          },
          ve
        ],
        role: Te,
        "aria-hidden": Ae
      },
      button: {
        is: ue ? "span" : "button",
        class: ["page-link", "text-center", { "flex-grow-1": !ue && g.value }],
        "aria-label": he,
        "aria-controls": d.ariaControls || void 0,
        "aria-disabled": ue ? !0 : void 0,
        "aria-posinset": ee,
        "aria-setsize": ee ? C.value : void 0,
        role: "menuitem",
        type: ue ? void 0 : "button",
        tabindex: ue ? void 0 : re
      },
      text: {
        name: me,
        active: ye,
        value: le ?? te,
        page: te,
        disabled: ue,
        index: te - 1,
        content: le ? void 0 : te
      },
      clickHandler: (Ze) => se(Ze, te)
    }), z = ({
      page: te,
      classVal: ve,
      dis: ue,
      slotName: me,
      textValue: le,
      label: re
    }) => O({ page: te, classVal: ve, dis: ue, slotName: me, textValue: le, label: re, tabIndex: "-1" }), w = (te) => O({
      page: te,
      dis: d.disabled,
      classVal: d.pageClass,
      slotName: "page",
      label: d.labelPage ? `${d.labelPage} ${te}` : void 0,
      tabIndex: S(te) ?? void 0,
      position: te,
      isActive: $(te)
    }), A = h(
      () => z({
        page: 1,
        dis: K.value,
        classVal: d.firstClass,
        slotName: "first-text",
        textValue: d.firstText,
        label: d.labelFirstPage
      })
    ), E = h(
      () => z({
        page: Math.max(B.value - 1, 1),
        dis: P.value,
        classVal: d.prevClass,
        slotName: "prev-text",
        textValue: d.prevText,
        label: d.labelPrevPage
      })
    ), I = h(
      () => z({
        page: Math.min(B.value + 1, C.value),
        dis: N.value,
        classVal: d.nextClass,
        slotName: "next-text",
        textValue: d.nextText,
        label: d.labelNextPage
      })
    ), X = h(
      () => z({
        page: C.value,
        dis: j.value,
        classVal: d.lastClass,
        slotName: "last-text",
        textValue: d.lastText,
        label: d.labelLastPage
      })
    ), D = va(), M = va(), Q = h(() => ({
      li: {
        class: [
          "page-item",
          "disabled",
          "text-center",
          "bv-d-xs-down-none",
          g.value ? "flex-fill" : "",
          d.ellipsisClass
        ],
        role: "separator"
      },
      span: {
        class: ["page-link"]
      }
    })), Z = h(() => [
      y.value,
      {
        [`pagination-${d.size}`]: d.size !== void 0,
        "b-pagination-pills": d.pills
      }
    ]), G = h(() => ({
      pageSize: k.value,
      totalRows: m.value,
      numberOfPages: C.value
    })), se = (te, ve) => {
      if (ve === B.value)
        return;
      const ue = new ut("page-click", {
        cancelable: !0,
        target: te.target
      });
      c("page-click", ue, ve), !ue.defaultPrevented && (f.value = ve);
    };
    de(B, (te) => {
      const ue = ((me, le) => {
        const re = me || 1;
        return re > le ? le : re < 1 ? 1 : re;
      })(te, C.value);
      ue !== f.value && (f.value = ue);
    }), de(G, (te, ve) => {
      (ve.pageSize !== te.pageSize && ve.totalRows === te.totalRows || ve.numberOfPages !== te.numberOfPages && B.value > ve.numberOfPages) && (f.value = 1);
    });
    const ie = h(() => {
      const te = C.value, { value: ve } = B, ue = p.value, me = d.firstNumber ? 1 : 0, le = d.lastNumber ? 1 : 0, re = d.hideEllipsis || ue <= 3, he = d.hideGotoEndButtons ? 1 : 0;
      if (te < ue + me + le)
        return [
          !me && !he ? -1 : null,
          -2,
          ...Array.from({ length: te }, (Te, Ae) => Ae + 1),
          -3,
          !le && !he ? -4 : null
        ].filter((Te) => Te !== null);
      const ee = Array.from({ length: ue + 4 - he * 2 });
      he ? (ee[0] = -2, ee[ee.length - 1] = -3) : (me ? (ee[0] = -2, ee[1] = 1) : (ee[0] = -1, ee[1] = -2), le ? (ee[ee.length - 1] = -3, ee[ee.length - 2] = te) : (ee[ee.length - 1] = -4, ee[ee.length - 2] = -3));
      const ye = Math.floor(ue / 2);
      if (ve <= ye + me) {
        for (let Te = 1; Te <= ue; Te++)
          ee[Te + 1 - he] = Te + me;
        re || (ee[ee.length - 3] = -5);
      }
      if (ve > te - ye - le) {
        const Te = te - (ue - 1) - le;
        for (let Ae = 0; Ae < ue; Ae++)
          ee[Ae + 2 - he] = Te + Ae;
        re || (ee[2] = -5);
      }
      if (!ee[2]) {
        const Te = ve - Math.floor(ue / 2);
        for (let Ae = 0; Ae < ue; Ae++)
          ee[Ae + 2 - he] = Te + Ae;
        re || (ee[2] = -5, ee[ee.length - 3] = -5);
      }
      return ee;
    });
    return (te, ve) => (b(), F("ul", {
      class: W(["pagination", Z.value]),
      role: "menubar",
      "aria-disabled": s(d).disabled,
      "aria-label": s(d).ariaLabel || void 0
    }, [
      ge(s(D).define, null, {
        default: R(({ button: ue, li: me, text: le, clickHandler: re }) => [
          ae("li", _e(Se(me)), [
            (b(), L(fe(ue.is), J(ue, { onClick: re }), {
              default: R(() => [
                V(te.$slots, le.name, {
                  disabled: le.disabled,
                  page: le.page,
                  index: le.index,
                  active: le.active,
                  content: le.value
                }, () => [
                  ce(oe(le.value), 1)
                ])
              ]),
              _: 2
            }, 1040, ["onClick"]))
          ], 16)
        ]),
        _: 3
      }),
      ge(s(M).define, null, {
        default: R(() => [
          ae("li", _e(Se(Q.value.li)), [
            ae("span", _e(Se(Q.value.span)), [
              V(te.$slots, "ellipsis-text", {}, () => [
                ce(oe(s(d).ellipsisText || "..."), 1)
              ])
            ], 16)
          ], 16)
        ]),
        _: 3
      }),
      (b(!0), F(pe, null, ke(ie.value, (ue) => (b(), F(pe, {
        key: `page-${ue}`
      }, [
        ue === -1 ? (b(), L(s(D).reuse, J({
          key: 0,
          ref_for: !0
        }, A.value), null, 16)) : ue === -2 ? (b(), L(s(D).reuse, J({
          key: 1,
          ref_for: !0
        }, E.value), null, 16)) : ue === -3 ? (b(), L(s(D).reuse, J({
          key: 2,
          ref_for: !0
        }, I.value), null, 16)) : ue === -4 ? (b(), L(s(D).reuse, J({
          key: 3,
          ref_for: !0
        }, X.value), null, 16)) : ue === -5 ? (b(), L(s(M).reuse, { key: 4 })) : ue !== null ? (b(), L(s(D).reuse, J({
          key: 5,
          ref_for: !0
        }, w(ue)), null, 16)) : ne("", !0)
      ], 64))), 128))
    ], 10, Ic));
  }
}), Ue = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BPlaceholder",
  props: {
    animation: { default: void 0 },
    cols: { default: 12 },
    size: { default: "md" },
    tag: { default: "span" },
    variant: { default: null },
    width: { default: void 0 },
    wrapperTag: { default: "span" }
  },
  setup(t) {
    const e = U(t, "BPlaceholder"), l = T(
      () => e.width === void 0 ? void 0 : typeof e.width == "number" ? e.width.toString() : e.width.replace("%", "")
    ), a = T(
      () => e.cols === void 0 ? void 0 : typeof e.cols == "number" ? e.cols.toString() : e.cols
    ), n = h(() => ({
      [`col-${a.value}`]: a.value !== void 0 && l.value === void 0,
      [`bg-${e.variant}`]: e.variant !== null,
      [`placeholder-${e.size}`]: e.size !== "md"
    })), r = h(() => ({
      [`placeholder-${e.animation}`]: e.animation !== void 0
    })), u = h(() => ({
      width: l.value === void 0 ? void 0 : `${l.value}%`
    }));
    return (i, d) => (b(), L(fe(s(e).wrapperTag), {
      class: W(r.value)
    }, {
      default: R(() => [
        (b(), L(fe(i.tag), J(i.$attrs, {
          class: ["placeholder", n.value],
          style: u.value
        }), null, 16, ["class", "style"]))
      ]),
      _: 1
    }, 8, ["class"]));
  }
}), cs = /* @__PURE__ */ q({
  __name: "BPlaceholderButton",
  props: {
    animation: { default: void 0 },
    cols: { default: void 0 },
    tag: { default: "div" },
    variant: { default: "primary" },
    width: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BPlaceholderButton"), l = h(() => ({
      [`btn-${e.variant}`]: e.variant !== null
    }));
    return (a, n) => (b(), L(Ue, {
      class: W(["btn disabled", l.value]),
      animation: s(e).animation,
      width: s(e).width,
      cols: s(e).cols,
      tag: s(e).tag,
      style: { cursor: "wait", "pointer-events": "auto" }
    }, null, 8, ["class", "animation", "width", "cols", "tag"]));
  }
}), Lc = /* @__PURE__ */ q({
  __name: "BPlaceholderCard",
  props: {
    animation: { default: void 0 },
    footerAnimation: { default: void 0 },
    footerSize: { default: "md" },
    footerVariant: { default: void 0 },
    footerWidth: { default: 100 },
    headerAnimation: { default: void 0 },
    headerSize: { default: "md" },
    headerVariant: { default: void 0 },
    headerWidth: { default: 100 },
    imgBlankColor: { default: "#868e96" },
    imgPlacement: { default: "top" },
    imgHeight: { default: 100 },
    imgSrc: { default: void 0 },
    noButton: { type: Boolean, default: !1 },
    noFooter: { type: Boolean, default: !1 },
    noHeader: { type: Boolean, default: !1 },
    noImg: { type: Boolean, default: !1 },
    size: { default: "md" },
    variant: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BPlaceholderCard"), l = h(() => ({
      animation: e.animation,
      size: e.size,
      variant: e.variant
    })), a = T(() => e.noButton ? Ue : cs);
    return (n, r) => (b(), L(ts, {
      "img-placement": s(e).imgPlacement
    }, tl({
      default: R(() => [
        V(n.$slots, "default", {}, () => [
          ge(Ue, J({ cols: "7" }, l.value), null, 16),
          ge(Ue, J({ cols: "4" }, l.value), null, 16),
          ge(Ue, J({ cols: "4" }, l.value), null, 16),
          ge(Ue, J({ cols: "6" }, l.value), null, 16),
          ge(Ue, J({ cols: "8" }, l.value), null, 16)
        ])
      ]),
      _: 2
    }, [
      s(e).noImg ? void 0 : {
        name: "img",
        fn: R(() => [
          V(n.$slots, "img", {}, () => [
            ge(hl, {
              blank: !s(e).imgSrc,
              "blank-color": s(e).imgBlankColor,
              height: s(e).imgSrc ? void 0 : s(e).imgHeight,
              src: s(e).imgSrc,
              "img-placement": s(e).imgPlacement,
              style: { cursor: "wait" }
            }, null, 8, ["blank", "blank-color", "height", "src", "img-placement"])
          ])
        ]),
        key: "0"
      },
      s(e).noHeader ? void 0 : {
        name: "header",
        fn: R(() => [
          V(n.$slots, "header", {}, () => [
            ge(Ue, {
              width: s(e).headerWidth,
              variant: s(e).headerVariant,
              animation: s(e).headerAnimation,
              size: s(e).headerSize
            }, null, 8, ["width", "variant", "animation", "size"])
          ])
        ]),
        key: "1"
      },
      s(e).noFooter ? void 0 : {
        name: "footer",
        fn: R(() => [
          V(n.$slots, "footer", {}, () => [
            (b(), L(fe(a.value), {
              width: s(e).footerWidth,
              animation: s(e).footerAnimation,
              size: s(e).noButton ? s(e).footerSize : void 0,
              variant: s(e).footerVariant
            }, null, 8, ["width", "animation", "size", "variant"]))
          ])
        ]),
        key: "2"
      }
    ]), 1032, ["img-placement"]));
  }
}), Rc = "300px", Bl = /* @__PURE__ */ q({
  __name: "BTableSimple",
  props: {
    bordered: { type: Boolean, default: !1 },
    borderless: { type: Boolean, default: !1 },
    borderVariant: { default: null },
    captionTop: { type: Boolean, default: !1 },
    dark: { type: Boolean, default: !1 },
    fixed: { type: Boolean, default: !1 },
    hover: { type: Boolean, default: !1 },
    id: { default: void 0 },
    noBorderCollapse: { type: Boolean, default: !1 },
    outlined: { type: Boolean, default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    small: { type: Boolean, default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    stickyHeader: { type: [Boolean, String, Number], default: !1 },
    striped: { type: Boolean, default: !1 },
    stripedColumns: { type: Boolean, default: !1 },
    variant: { default: null },
    tableAttrs: { default: void 0 },
    tableClass: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BTableSimple"), l = h(() => [
      e.tableClass,
      "table",
      "b-table",
      {
        "table-bordered": e.bordered,
        "table-borderless": e.borderless,
        [`border-${e.borderVariant}`]: e.borderVariant !== null,
        "caption-top": e.captionTop,
        "table-dark": e.dark,
        "table-hover": e.hover,
        "b-table-stacked": e.stacked === !0,
        [`b-table-stacked-${e.stacked}`]: typeof e.stacked == "string",
        "table-striped": e.striped,
        "table-sm": e.small,
        [`table-${e.variant}`]: e.variant !== null,
        "table-striped-columns": e.stripedColumns
      }
    ]), a = h(() => ({
      id: e.id,
      class: l.value,
      ...e.tableAttrs
    })), n = ga(
      h(
        () => (e.stickyHeader === !0 ? Rc : e.stickyHeader) || NaN
      )
    ), r = h(() => e.stickyHeader !== !1), u = h(() => e.responsive !== !1 || r.value), i = h(
      () => r.value ? { maxHeight: n.value } : void 0
    ), d = h(() => ({
      "table-responsive": e.responsive === !0,
      [`table-responsive-${e.responsive}`]: typeof e.responsive == "string",
      "b-table-sticky-header": r.value
    }));
    return (c, f) => u.value ? (b(), F("div", {
      key: 0,
      class: W(d.value),
      style: Me(i.value)
    }, [
      ae("table", _e(Se(a.value)), [
        V(c.$slots, "default")
      ], 16)
    ], 6)) : (b(), F("table", _e(J({ key: 1 }, a.value)), [
      V(c.$slots, "default")
    ], 16));
  }
}), zc = /* @__PURE__ */ q({
  __name: "BPlaceholderTable",
  props: {
    animation: { default: void 0 },
    cellWidth: { default: 100 },
    columns: { default: 5 },
    footerAnimation: { default: void 0 },
    footerCellWidth: { default: 100 },
    footerColumns: { default: void 0 },
    footerSize: { default: "md" },
    footerVariant: { default: void 0 },
    headerAnimation: { default: void 0 },
    headerCellWidth: { default: 100 },
    headerColumns: { default: void 0 },
    headerSize: { default: "md" },
    headerVariant: { default: void 0 },
    hideHeader: { type: Boolean, default: !1 },
    rows: { default: 3 },
    showFooter: { type: Boolean, default: !1 },
    size: { default: "md" },
    variant: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BPlaceholderTable"), l = Be(() => e.columns), a = Be(() => e.rows), n = T(() => e.headerColumns ?? NaN), r = T(() => e.footerColumns ?? NaN), u = Be(n), i = Be(r), d = T(() => l.value || 5), c = T(() => a.value || 3), f = T(
      () => e.headerColumns === void 0 ? d.value : u.value
    ), p = T(
      () => e.footerColumns === void 0 ? d.value : i.value
    );
    return (v, m) => (b(), L(Bl, null, {
      default: R(() => [
        s(e).hideHeader ? ne("", !0) : V(v.$slots, "thead", { key: 0 }, () => [
          ae("thead", null, [
            ae("tr", null, [
              (b(!0), F(pe, null, ke(f.value, (B, k) => (b(), F("th", { key: k }, [
                ge(Ue, {
                  size: s(e).headerSize,
                  variant: s(e).headerVariant,
                  animation: s(e).headerAnimation,
                  width: s(e).headerCellWidth
                }, null, 8, ["size", "variant", "animation", "width"])
              ]))), 128))
            ])
          ])
        ]),
        V(v.$slots, "default", {}, () => [
          ae("tbody", null, [
            (b(!0), F(pe, null, ke(c.value, (B, k) => (b(), F("tr", { key: k }, [
              (b(!0), F(pe, null, ke(d.value, (_, C) => (b(), F("td", { key: C }, [
                ge(Ue, {
                  size: s(e).size,
                  variant: s(e).variant,
                  animation: s(e).animation,
                  width: s(e).cellWidth
                }, null, 8, ["size", "variant", "animation", "width"])
              ]))), 128))
            ]))), 128))
          ])
        ]),
        s(e).showFooter ? V(v.$slots, "tfoot", { key: 1 }, () => [
          ae("tfoot", null, [
            ae("tr", null, [
              (b(!0), F(pe, null, ke(p.value, (B, k) => (b(), F("th", { key: k }, [
                ge(Ue, {
                  size: s(e).footerSize,
                  variant: s(e).footerVariant,
                  animation: s(e).footerAnimation,
                  width: s(e).footerCellWidth
                }, null, 8, ["size", "variant", "animation", "width"])
              ]))), 128))
            ])
          ])
        ]) : ne("", !0)
      ]),
      _: 3
    }));
  }
}), Mc = /* @__PURE__ */ q({
  __name: "BPlaceholderWrapper",
  props: {
    loading: { type: Boolean, default: !1 }
  },
  setup(t) {
    const e = U(t, "BPlaceholderWrapper");
    return (l, a) => s(e).loading ? V(l.$slots, "loading", { key: 0 }) : V(l.$slots, "default", { key: 1 });
  }
}), Hc = /* @__PURE__ */ q({
  __name: "BRow",
  props: {
    tag: { default: "div" },
    gutterX: { default: void 0 },
    gutterY: { default: void 0 },
    noGutters: { type: Boolean, default: !1 },
    alignV: { default: void 0 },
    alignH: { default: void 0 },
    alignContent: { default: void 0 },
    cols: { default: void 0 },
    colsSm: { default: void 0 },
    colsMd: { default: void 0 },
    colsLg: { default: void 0 },
    colsXl: { default: void 0 },
    colsXxl: { default: void 0 }
  },
  setup(t) {
    const e = U(t, "BRow"), l = Xt(() => e.alignH), a = h(
      () => la(
        {
          cols: e.cols,
          colsLg: e.colsLg,
          colsMd: e.colsMd,
          colsSm: e.colsSm,
          colsXl: e.colsXl,
          colsXxl: e.colsXxl
        },
        ["cols", "colsLg", "colsMd", "colsSm", "colsXl", "colsXxl"],
        "cols",
        "row-cols"
      )
    ), n = h(() => [
      a.value,
      {
        [`gx-${e.gutterX}`]: e.gutterX !== void 0,
        [`gy-${e.gutterY}`]: e.gutterY !== void 0,
        "g-0": e.noGutters,
        [`align-items-${e.alignV}`]: e.alignV !== void 0,
        [l.value]: e.alignH !== void 0,
        [`align-content-${e.alignContent}`]: e.alignContent !== void 0
      }
    ]);
    return (r, u) => (b(), L(fe(s(e).tag), {
      class: W(["row", n.value])
    }, {
      default: R(() => [
        V(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Je = (t) => typeof t == "object" && t !== null, Vt = (t) => typeof t == "object" && t !== null && "key" in t, fs = /* @__PURE__ */ q({
  __name: "BTbody",
  props: {
    variant: { default: null }
  },
  setup(t) {
    const e = U(t, "BTbody"), l = h(() => ({
      [`thead-${e.variant}`]: e.variant !== null
    }));
    return (a, n) => (b(), F("tbody", {
      class: W(l.value)
    }, [
      V(a.$slots, "default")
    ], 2));
  }
}), Dc = ["scope", "colspan", "rowspan", "data-label"], jc = { key: 0 }, Ft = /* @__PURE__ */ q({
  __name: "BTd",
  props: {
    colspan: { default: void 0 },
    rowspan: { default: void 0 },
    stackedHeading: { default: void 0 },
    stickyColumn: { type: Boolean, default: !1 },
    variant: { default: null }
  },
  setup(t) {
    const e = U(t, "BTd"), l = h(() => ({
      [`table-${e.variant}`]: e.variant !== null,
      "b-table-sticky-column": e.stickyColumn,
      "table-b-table-default": e.stickyColumn && e.variant === null
    })), a = T(() => e.colspan ? "colspan" : e.rowspan ? "rowspan" : "col");
    return (n, r) => (b(), F("td", {
      scope: a.value,
      class: W(l.value),
      colspan: s(e).colspan,
      rowspan: s(e).rowspan,
      "data-label": s(e).stackedHeading
    }, [
      s(e).stackedHeading ? (b(), F("div", jc, [
        V(n.$slots, "default")
      ])) : V(n.$slots, "default", { key: 1 })
    ], 10, Dc));
  }
}), Za = /* @__PURE__ */ q({
  __name: "BTfoot",
  props: {
    variant: { default: null }
  },
  setup(t) {
    const e = U(t, "BTfoot"), l = h(() => ({
      [`table-${e.variant}`]: e.variant !== null
    }));
    return (a, n) => (b(), F("tfoot", {
      class: W(l.value)
    }, [
      V(a.$slots, "default")
    ], 2));
  }
}), qc = ["scope", "colspan", "rowspan", "data-label"], Gc = { key: 0 }, Ja = /* @__PURE__ */ q({
  __name: "BTh",
  props: {
    colspan: { default: void 0 },
    rowspan: { default: void 0 },
    stackedHeading: { default: void 0 },
    stickyColumn: { type: Boolean, default: !1 },
    variant: { default: null }
  },
  setup(t) {
    const e = U(t, "BTh"), l = h(() => ({
      [`table-${e.variant}`]: e.variant !== null,
      "b-table-sticky-column": e.stickyColumn,
      "table-b-table-default": e.stickyColumn && e.variant === null
    })), a = T(() => e.colspan ? "colspan" : e.rowspan ? "rowspan" : "col");
    return (n, r) => (b(), F("th", {
      scope: a.value,
      class: W(l.value),
      colspan: s(e).colspan,
      rowspan: s(e).rowspan,
      "data-label": s(e).stackedHeading
    }, [
      s(e).stackedHeading !== void 0 ? (b(), F("div", Gc, [
        V(n.$slots, "default")
      ])) : V(n.$slots, "default", { key: 1 })
    ], 10, qc));
  }
}), vs = /* @__PURE__ */ q({
  __name: "BThead",
  props: {
    variant: { default: null }
  },
  setup(t) {
    const e = U(t, "BThead"), l = h(() => ({
      [`table-${e.variant}`]: e.variant !== null
    }));
    return (a, n) => (b(), F("thead", {
      class: W(l.value)
    }, [
      V(a.$slots, "default")
    ], 2));
  }
}), Qe = /* @__PURE__ */ q({
  __name: "BTr",
  props: {
    variant: { default: null }
  },
  setup(t) {
    const e = U(t, "BTr"), l = h(() => ({
      [`table-${e.variant}`]: e.variant !== null
    }));
    return (a, n) => (b(), F("tr", {
      class: W(l.value)
    }, [
      V(a.$slots, "default")
    ], 2));
  }
}), Wc = {
  key: 0,
  class: "b-table-stacked-label"
}, Uc = { class: "d-inline-flex flex-nowrap align-items-center gap-1" }, Kc = { key: 2 }, ps = /* @__PURE__ */ q({
  __name: "BTableLite",
  props: {
    align: { default: void 0 },
    caption: { default: void 0 },
    captionHtml: { default: void 0 },
    detailsTdClass: { default: void 0 },
    emptyFilteredText: { default: "There are no records matching your request" },
    emptyText: { default: "There are no records to show" },
    fieldColumnClass: { type: [Function, String, Object, Array], default: void 0 },
    fields: { default: () => [] },
    footClone: { type: Boolean, default: !1 },
    footRowVariant: { default: void 0 },
    footVariant: { default: void 0 },
    headRowVariant: { default: void 0 },
    headVariant: { default: void 0 },
    items: { default: () => [] },
    labelStacked: { type: Boolean, default: !1 },
    modelValue: { default: void 0 },
    primaryKey: { default: void 0 },
    showEmpty: { type: Boolean, default: !1 },
    tbodyClass: { default: void 0 },
    tbodyTrAttrs: { type: [Function, Object], default: void 0 },
    tbodyTrClass: { type: Function, default: void 0 },
    tfootClass: { default: void 0 },
    tfootTrClass: { default: void 0 },
    theadClass: { default: void 0 },
    theadTrClass: { default: void 0 },
    bordered: { type: Boolean, default: void 0 },
    borderless: { type: Boolean, default: void 0 },
    borderVariant: { default: void 0 },
    captionTop: { type: Boolean, default: void 0 },
    dark: { type: Boolean, default: void 0 },
    fixed: { type: Boolean, default: void 0 },
    hover: { type: Boolean, default: void 0 },
    id: { default: void 0 },
    noBorderCollapse: { type: Boolean, default: void 0 },
    outlined: { type: Boolean, default: void 0 },
    responsive: { type: [Boolean, String], default: void 0 },
    small: { type: Boolean, default: void 0 },
    stacked: { type: [Boolean, String], default: void 0 },
    stickyHeader: { type: [Boolean, String, Number], default: void 0 },
    striped: { type: Boolean, default: void 0 },
    stripedColumns: { type: Boolean, default: void 0 },
    variant: { default: void 0 },
    tableAttrs: {},
    tableClass: { default: void 0 }
  },
  emits: ["head-clicked", "row-clicked", "row-dbl-clicked", "row-hovered", "row-unhovered"],
  setup(t, { emit: o }) {
    const l = U(t, "BTableLite"), a = o, n = (g) => [
      g,
      g._showDetails
    ], r = H(
      new WeakMap(
        l.items.reduce(
          (g, x) => (Je(x) && g.push(n(x)), g),
          []
        )
      )
    );
    de(
      () => l.items,
      (g) => {
        g.forEach((x) => {
          if (!Je(x))
            return;
          const y = n(x);
          r.value.set(y[0], y[1]);
        });
      },
      { deep: !0 }
    );
    const u = h(() => [
      l.tableClass,
      {
        [`align-${l.align}`]: l.align !== void 0
      }
    ]), i = h(() => {
      if (!l.fields.length && l.items.length) {
        const [g] = l.items;
        return Je(g) || Array.isArray(g) ? Object.keys(g).map((x) => {
          const y = na(x);
          return {
            key: x,
            label: y,
            tdAttr: l.stacked === !0 ? { "data-label": y } : void 0
          };
        }) : [{ key: "", _noHeader: !0 }];
      }
      return l.fields.map((g) => {
        if (Vt(g))
          return {
            ...g,
            tdAttr: l.stacked === !0 ? { "data-label": na(g.key), ...g.tdAttr } : g.tdAttr
          };
        const x = na(g);
        return {
          key: g,
          label: x,
          tdAttr: l.stacked === !0 ? { "data-label": x } : void 0
        };
      });
    }), d = T(() => i.value.length), c = h(() => !(i.value.length > 0 && i.value.every((g) => g._noHeader === !0))), f = (g, x, y) => {
      const $ = Ne(g, x);
      return y && typeof y == "function" ? y($, x, g) : y;
    }, p = (g, x, y) => {
      const $ = String(x.key), S = Ne(g, $);
      return x.thAttr && typeof x.thAttr == "function" ? x.thAttr(S, $, g, y) : x.thAttr;
    }, v = (g, x, y = !1) => {
      a("head-clicked", g.key, g, x, y);
    }, m = (g) => {
      if (Je(g)) {
        const x = r.value.get(g);
        r.value.set(g, !x), g._showDetails = !x;
      }
    }, B = (g) => [
      g.class,
      g.thClass,
      {
        "b-table-sticky-column": g.stickyColumn
      },
      l.fieldColumnClass ? typeof l.fieldColumnClass == "function" ? l.fieldColumnClass(g) : l.fieldColumnClass : null
    ], k = (g, x) => {
      var $, S;
      const y = Ne(x, String(g.key));
      return [
        g.class,
        typeof g.tdClass == "function" ? g.tdClass(y, String(g.key), x) : g.tdClass,
        Je(x) && ($ = x._cellVariants) != null && $[g.key] ? `table-${(S = x._cellVariants) == null ? void 0 : S[g.key]}` : null,
        {
          "b-table-sticky-column": g.stickyColumn
        }
      ];
    }, _ = (g, x) => l.tbodyTrAttrs ? typeof l.tbodyTrAttrs == "function" ? l.tbodyTrAttrs(g, x) : l.tbodyTrAttrs : null, C = (g, x) => l.tbodyTrClass ? typeof l.tbodyTrClass == "function" ? l.tbodyTrClass(g, x) : l.tbodyTrClass : null;
    return (g, x) => (b(), L(Bl, {
      id: s(l).id,
      bordered: s(l).bordered,
      borderless: s(l).borderless,
      "border-variant": s(l).borderVariant,
      "caption-top": s(l).captionTop,
      dark: s(l).dark,
      fixed: s(l).fixed,
      hover: s(l).hover,
      "no-border-collapse": s(l).noBorderCollapse,
      outlined: s(l).outlined,
      responsive: s(l).responsive,
      small: s(l).small,
      stacked: s(l).stacked,
      "sticky-header": s(l).stickyHeader,
      striped: s(l).striped,
      "table-class": u.value,
      variant: s(l).variant,
      "striped-columns": s(l).stripedColumns
    }, {
      default: R(() => [
        dt(ge(vs, {
          variant: s(l).headVariant,
          class: W(s(l).theadClass)
        }, {
          default: R(() => [
            g.$slots["thead-top"] ? V(g.$slots, "thead-top", { key: 0 }) : ne("", !0),
            ge(Qe, {
              variant: s(l).headRowVariant,
              class: W(s(l).theadTrClass)
            }, {
              default: R(() => [
                (b(!0), F(pe, null, ke(i.value, (y) => (b(), L(Ja, J({
                  key: y.key,
                  scope: "col",
                  class: B(y),
                  title: y.headerTitle,
                  variant: y.variant,
                  abbr: y.headerAbbr,
                  style: y.thStyle,
                  ref_for: !0
                }, p(null, y, "top"), {
                  onClick: ($) => v(y, $)
                }), {
                  default: R(() => [
                    V(g.$slots, g.$slots[`head(${String(y.key)})`] ? `head(${String(y.key)})` : "head()", {
                      label: y.label,
                      column: y.key,
                      field: y,
                      isFoot: !1
                    }, () => [
                      ce(oe(s(sa)(y)), 1)
                    ])
                  ]),
                  _: 2
                }, 1040, ["class", "title", "variant", "abbr", "style", "onClick"]))), 128))
              ]),
              _: 3
            }, 8, ["variant", "class"]),
            g.$slots["thead-sub"] ? (b(), L(Qe, { key: 1 }, {
              default: R(() => [
                (b(!0), F(pe, null, ke(i.value, (y) => (b(), L(Ft, {
                  key: y.key,
                  scope: "col",
                  variant: y.variant,
                  class: W([y.class, y.thClass])
                }, {
                  default: R(() => [
                    V(g.$slots, "thead-sub", J({
                      items: i.value,
                      ref_for: !0
                    }, y), () => [
                      ce(oe(y.label), 1)
                    ])
                  ]),
                  _: 2
                }, 1032, ["variant", "class"]))), 128))
              ]),
              _: 3
            })) : ne("", !0)
          ]),
          _: 3
        }, 8, ["variant", "class"]), [
          [Kt, c.value]
        ]),
        ge(fs, {
          class: W(s(l).tbodyClass)
        }, {
          default: R(() => [
            V(g.$slots, "custom-body", {
              fields: i.value,
              items: s(l).items,
              columns: i.value.length
            }, () => [
              !s(l).stacked && g.$slots["top-row"] ? (b(), L(Qe, J({
                key: 0,
                class: C(null, "row-top")
              }, _(null, "row-top")), {
                default: R(() => [
                  V(g.$slots, "top-row")
                ]),
                _: 3
              }, 16, ["class"])) : ne("", !0),
              (b(!0), F(pe, null, ke(s(l).items, (y, $) => (b(), F(pe, {
                key: s(l).primaryKey ? s(Ne)(y, s(l).primaryKey) : $
              }, [
                ge(Qe, J({
                  class: C(y, "row"),
                  variant: s(Je)(y) ? y._rowVariant : void 0,
                  ref_for: !0
                }, _(y, "row"), {
                  onClick: (S) => !s(Jt)(S) && a("row-clicked", y, $, S),
                  onDblclick: (S) => !s(Jt)(S) && a("row-dbl-clicked", y, $, S),
                  onMouseenter: (S) => !s(Jt)(S) && a("row-hovered", y, $, S),
                  onMouseleave: (S) => !s(Jt)(S) && a("row-unhovered", y, $, S)
                }), {
                  default: R(() => [
                    (b(!0), F(pe, null, ke(i.value, (S) => {
                      var Y;
                      return b(), L(Ft, J({
                        key: S.key,
                        variant: s(Je)(y) && (Y = y._cellVariants) != null && Y[S.key] ? null : S.variant,
                        class: k(S, y),
                        ref_for: !0
                      }, f(y, String(S.key), S.tdAttr)), {
                        default: R(() => [
                          s(l).stacked && s(l).labelStacked ? (b(), F("label", Wc, oe(s(sa)(S)), 1)) : ne("", !0),
                          V(
                            g.$slots,
                            g.$slots[`cell(${String(S.key)})`] ? `cell(${String(S.key)})` : "cell()",
                            {
                              value: s(qa)(y, String(S.key), S.formatter),
                              unformatted: s(Ne)(y, String(S.key)),
                              index: $,
                              item: y,
                              field: S,
                              items: g.items,
                              toggleDetails: () => {
                                m(y);
                              },
                              detailsShowing: s(Je)(y) ? r.value.get(y) ?? !1 : !1
                            },
                            () => [
                              !g.$slots[`cell(${String(S.key)})`] && !g.$slots["cell()"] ? (b(), F(pe, { key: 0 }, [
                                ce(oe(s(qa)(y, String(S.key), S.formatter)), 1)
                              ], 64)) : ne("", !0)
                            ]
                          )
                        ]),
                        _: 2
                      }, 1040, ["variant", "class"]);
                    }), 128))
                  ]),
                  _: 2
                }, 1040, ["class", "variant", "onClick", "onDblclick", "onMouseenter", "onMouseleave"]),
                s(Je)(y) && r.value.get(y) === !0 && g.$slots["row-details"] ? (b(), F(pe, { key: 0 }, [
                  ge(Qe, {
                    "aria-hidden": "true",
                    role: "presentation",
                    class: "d-none"
                  }),
                  ge(Qe, J({
                    class: C(y, "row-details"),
                    variant: y._rowVariant,
                    ref_for: !0
                  }, _(y, "row-details")), {
                    default: R(() => [
                      ge(Ft, {
                        colspan: d.value,
                        class: W(g.detailsTdClass)
                      }, {
                        default: R(() => [
                          V(g.$slots, "row-details", {
                            item: y,
                            toggleDetails: () => {
                              m(y);
                            },
                            fields: s(l).fields,
                            index: $
                          })
                        ]),
                        _: 2
                      }, 1032, ["colspan", "class"])
                    ]),
                    _: 2
                  }, 1040, ["class", "variant"])
                ], 64)) : ne("", !0)
              ], 64))), 128)),
              s(l).showEmpty && s(l).items.length === 0 ? (b(), L(Qe, {
                key: 1,
                class: "b-table-empty-slot"
              }, {
                default: R(() => [
                  ge(Ft, { colspan: d.value }, {
                    default: R(() => [
                      V(g.$slots, "empty", {
                        items: s(l).items
                      }, () => [
                        ce(oe(s(l).emptyText), 1)
                      ])
                    ]),
                    _: 3
                  }, 8, ["colspan"])
                ]),
                _: 3
              })) : ne("", !0),
              !s(l).stacked && g.$slots["bottom-row"] ? (b(), L(Qe, J({
                key: 2,
                class: ["bottom-row", C(null, "row-bottom")]
              }, _(null, "row-bottom")), {
                default: R(() => [
                  V(g.$slots, "bottom-row")
                ]),
                _: 3
              }, 16, ["class"])) : ne("", !0)
            ])
          ]),
          _: 3
        }, 8, ["class"]),
        s(l).footClone ? (b(), L(Za, {
          key: 0,
          variant: s(l).footVariant,
          class: W(s(l).tfootClass)
        }, {
          default: R(() => [
            ge(Qe, {
              variant: s(l).footRowVariant,
              class: W(s(l).tfootTrClass)
            }, {
              default: R(() => [
                (b(!0), F(pe, null, ke(i.value, (y) => (b(), L(Ja, J({
                  key: y.key,
                  scope: "col",
                  class: B(y),
                  title: y.headerTitle,
                  abbr: y.headerAbbr,
                  style: y.thStyle,
                  variant: y.variant,
                  ref_for: !0
                }, p(null, y, "bottom"), {
                  onClick: ($) => v(y, $, !0)
                }), {
                  default: R(() => [
                    ae("div", Uc, [
                      ae("div", null, [
                        V(
                          g.$slots,
                          g.$slots[`foot(${String(y.key)})`] ? `foot(${String(y.key)})` : "foot()",
                          {
                            label: y.label,
                            column: y.key,
                            field: y,
                            isFoot: !0
                          },
                          () => [
                            ce(oe(s(sa)(y)), 1)
                          ]
                        )
                      ])
                    ])
                  ]),
                  _: 2
                }, 1040, ["class", "title", "abbr", "style", "variant", "onClick"]))), 128))
              ]),
              _: 3
            }, 8, ["variant", "class"])
          ]),
          _: 3
        }, 8, ["variant", "class"])) : g.$slots["custom-foot"] ? (b(), L(Za, { key: 1 }, {
          default: R(() => [
            V(g.$slots, "custom-foot", {
              fields: i.value,
              items: s(l).items,
              columns: i.value.length
            })
          ]),
          _: 3
        })) : ne("", !0),
        g.$slots["table-caption"] || s(l).caption ? (b(), F("caption", Kc, [
          V(g.$slots, "table-caption", {}, () => [
            ce(oe(s(l).caption), 1)
          ])
        ])) : ne("", !0)
      ]),
      _: 3
    }, 8, ["id", "bordered", "borderless", "border-variant", "caption-top", "dark", "fixed", "hover", "no-border-collapse", "outlined", "responsive", "small", "stacked", "sticky-header", "striped", "table-class", "variant", "striped-columns"]));
  }
}), Xc = /* @__PURE__ */ ae("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentColor",
  class: "bi bi-arrow-up-short",
  viewBox: "0 0 16 16",
  "aria-hidden": ""
}, [
  /* @__PURE__ */ ae("path", {
    "fill-rule": "evenodd",
    d: "M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5z"
  })
], -1), Yc = /* @__PURE__ */ ae("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentColor",
  class: "bi bi-arrow-down-short",
  viewBox: "0 0 16 16",
  "aria-hidden": ""
}, [
  /* @__PURE__ */ ae("path", {
    "fill-rule": "evenodd",
    d: "M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z"
  })
], -1), Zc = {
  style: { opacity: 0.4 },
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentColor",
  class: "bi bi-arrow-up-short",
  viewBox: "0 0 16 16",
  "aria-hidden": ""
}, Jc = /* @__PURE__ */ ae("path", {
  "fill-rule": "evenodd",
  d: "M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5z"
}, null, -1), Qc = [
  Jc
], ef = { class: "d-flex align-items-center gap-2 mt-5" }, tf = /* @__PURE__ */ q({
  __name: "BTable",
  props: /* @__PURE__ */ be({
    provider: { default: void 0 },
    noProvider: { default: void 0 },
    noProviderPaging: { type: Boolean, default: !1 },
    noProviderSorting: { type: Boolean, default: !1 },
    noProviderFiltering: { type: Boolean, default: !1 },
    sortBy: {},
    mustSort: { type: [Boolean, Array], default: !1 },
    selectable: { type: Boolean, default: !1 },
    multisort: { type: Boolean, default: !1 },
    stickySelect: { type: Boolean, default: !1 },
    selectHead: { type: [Boolean, String], default: !0 },
    selectMode: { default: "multi" },
    selectionVariant: { default: "primary" },
    busy: { type: Boolean },
    busyLoadingText: { default: "Loading..." },
    perPage: { default: Number.POSITIVE_INFINITY },
    currentPage: { default: 1 },
    filter: { default: void 0 },
    filterable: { default: void 0 },
    noLocalSorting: { type: Boolean, default: !1 },
    noSelectOnClick: { type: Boolean, default: !1 },
    selectedItems: {},
    noSortableIcon: { type: Boolean, default: !1 },
    align: { default: void 0 },
    caption: { default: void 0 },
    captionHtml: { default: void 0 },
    detailsTdClass: { default: void 0 },
    emptyFilteredText: { default: void 0 },
    emptyText: { default: void 0 },
    fieldColumnClass: { type: [Function, String, Object, Array], default: void 0 },
    fields: { default: () => [] },
    footClone: { type: Boolean, default: void 0 },
    footRowVariant: { default: void 0 },
    footVariant: { default: void 0 },
    headRowVariant: { default: void 0 },
    headVariant: { default: void 0 },
    items: { default: () => [] },
    labelStacked: { type: Boolean, default: void 0 },
    modelValue: { default: void 0 },
    primaryKey: { default: void 0 },
    showEmpty: { type: Boolean, default: void 0 },
    tbodyClass: { default: void 0 },
    tbodyTrAttrs: {},
    tbodyTrClass: { type: Function, default: void 0 },
    tfootClass: { default: void 0 },
    tfootTrClass: { default: void 0 },
    theadClass: { default: void 0 },
    theadTrClass: { default: void 0 },
    bordered: { type: Boolean, default: void 0 },
    borderless: { type: Boolean, default: void 0 },
    borderVariant: { default: void 0 },
    captionTop: { type: Boolean, default: void 0 },
    dark: { type: Boolean, default: void 0 },
    fixed: { type: Boolean, default: void 0 },
    hover: { type: Boolean, default: void 0 },
    id: { default: void 0 },
    noBorderCollapse: { type: Boolean, default: void 0 },
    outlined: { type: Boolean, default: void 0 },
    responsive: { type: [Boolean, String], default: void 0 },
    small: { type: Boolean, default: void 0 },
    stacked: { type: [Boolean, String], default: void 0 },
    stickyHeader: { type: [Boolean, String, Number], default: void 0 },
    striped: { type: Boolean, default: void 0 },
    stripedColumns: { type: Boolean, default: void 0 },
    variant: { default: void 0 },
    tableAttrs: {}
  }, {
    sortBy: {
      default: void 0
    },
    sortByModifiers: {},
    busy: { type: Boolean, default: !1 },
    busyModifiers: {},
    selectedItems: {
      default: () => []
    },
    selectedItemsModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["filtered", "head-clicked", "row-clicked", "row-dbl-clicked", "row-hovered", "row-unhovered", "row-selected", "row-unselected", "sorted", "change"], ["update:sortBy", "update:busy", "update:selectedItems"]),
  setup(t, { expose: o, emit: e }) {
    const a = U(t, "BTable"), n = e, r = we(t, "sortBy"), u = we(t, "busy"), i = we(t, "selectedItems"), d = h({
      get: () => /* @__PURE__ */ new Set([...i.value]),
      set: (w) => {
        i.value = [...w];
      }
    }), c = {
      add: (w) => {
        const A = new Set(d.value);
        A.add(w), d.value = A, n("row-selected", w);
      },
      clear: () => {
        d.value.forEach((w) => {
          c.delete(w);
        });
      },
      delete: (w) => {
        const A = new Set(d.value);
        if (a.primaryKey) {
          const E = a.primaryKey;
          i.value.forEach((I, X) => {
            const D = Ne(I, E), M = Ne(w, E);
            D && M && D === M && A.delete(i.value[X]);
          });
        } else
          A.delete(w);
        d.value = A, n("row-unselected", w);
      },
      set: (w) => {
        d.value = new Set(w), d.value.forEach((A) => {
          n("row-unselected", A);
        });
      },
      has: (w) => {
        if (!a.primaryKey)
          return d.value.has(w);
        const A = a.primaryKey;
        for (const E of d.value) {
          const I = Ne(E, A), X = Ne(w, A);
          if (I && X && I === X)
            return !0;
        }
        return !1;
      }
    }, f = H([]), p = Be(() => a.perPage, { method: "parseInt" }), v = Be(() => a.currentPage, { method: "parseInt" }), m = T(() => !!a.filter), B = T(() => a.provider !== void 0), k = T(() => d.value.size > 0), _ = h(
      () => r.value !== void 0 || a.fields.some(
        (w) => typeof w == "object" && w !== null && w.sortable === !0
      )
    ), C = h(
      () => a.fields.map((w) => {
        var I;
        if (!Vt(w)) {
          const X = na(w);
          return {
            key: w,
            label: X,
            tdAttr: a.stacked === !0 ? { "data-label": X } : void 0
          };
        }
        const A = (I = r.value) == null ? void 0 : I.find((X) => w.key === X.key), E = _.value === !1 ? void 0 : A === void 0 ? "none" : A.order === "desc" ? "descending" : A.order === "asc" ? "ascending" : "none";
        return {
          ...w,
          thAttr: {
            "aria-sort": E,
            ...w.thAttr
          }
        };
      })
    ), g = h(() => ({
      "b-table-busy": u.value,
      "b-table-selectable": a.selectable,
      "user-select-none": a.selectable && k.value
    })), x = h(() => [
      a.tbodyTrClass ? typeof a.tbodyTrClass == "function" ? a.tbodyTrClass(null, "table-busy") : a.tbodyTrClass : null
    ]), y = (w) => [
      {
        "b-table-sortable-column": _.value && w.sortable
      }
    ], $ = (w, A) => [
      {
        [`selected table-${a.selectionVariant}`]: a.selectable && !!w && c.has(w)
      },
      a.tbodyTrClass ? typeof a.tbodyTrClass == "function" ? a.tbodyTrClass(w, A) : a.tbodyTrClass : null
    ], S = h(() => {
      const w = (I) => {
        var D;
        const X = (D = r.value) == null ? void 0 : D.filter((M) => !!M.order);
        return !X || X.length === 0 ? I : [...I].sort((M, Q) => {
          for (let Z = 0; Z < (X.length ?? 0); Z++) {
            const G = X[Z], se = (ue) => {
              if (!Je(ue))
                return String(ue);
              const me = C.value.find((re) => Vt(re) ? re.key === G.key : !1), le = Ne(ue, G.key);
              if (Vt(me) && me.sortByFormatted) {
                const re = typeof me.sortByFormatted == "function" ? me.sortByFormatted : me.formatter;
                if (re)
                  return qa(ue, String(me.key), re);
              }
              return typeof le == "object" && le !== null ? JSON.stringify(le) : (le == null ? void 0 : le.toString()) ?? "";
            }, ie = se(M), te = se(Q), ve = G.comparer ? G.comparer(ie, te) : ie.localeCompare(te, void 0, { numeric: !0 });
            if (ve !== 0)
              return G.order === "asc" ? ve : -ve;
          }
          return 0;
        });
      }, A = (I) => I.filter(
        (X) => Je(X) ? Object.entries(X).some(([D, M]) => {
          var G, se, ie;
          return M == null || D[0] === "_" || !((G = a.filterable) != null && G.includes(D)) && ((se = a.filterable) != null && se.length) ? !1 : (() => {
            const te = C.value.find((ve) => Vt(ve) ? ve.key === D : !1);
            if (Vt(te) && te.filterByFormatted) {
              const ve = typeof te.filterByFormatted == "function" ? te.filterByFormatted : te.formatter;
              if (ve)
                return ve(M, String(te.key), X);
            }
            return typeof M == "object" ? JSON.stringify(Object.values(M)) : M.toString();
          })().toLowerCase().includes(((ie = a.filter) == null ? void 0 : ie.toLowerCase()) ?? "");
        }) : !0
      );
      let E = B.value ? f.value : a.items;
      return E = E.map((I) => {
        if (typeof I == "object" && I !== null && Object.keys(I).some((X) => X.includes("."))) {
          let X = {};
          for (const D in I)
            D.includes(".") ? X = ti(X, D, I[D]) : X[D] = I[D];
          return X;
        }
        return I;
      }), (m.value === !0 && !B.value || m.value === !0 && B.value && a.noProviderFiltering) && (E = A(E)), (_.value === !0 && !B.value && !a.noLocalSorting || _.value === !0 && B.value && a.noProviderSorting) && (E = w(E)), E;
    }), Y = h(() => Number.isNaN(p.value) || B.value && !a.noProviderPaging ? S.value : S.value.slice(
      (v.value - 1) * (p.value || Number.POSITIVE_INFINITY),
      v.value * (p.value || Number.POSITIVE_INFINITY)
    ));
    de(Y, (w) => {
      n("change", w);
    });
    const K = (w, A, E = !1, I = !1, X = !1) => {
      if (a.selectable)
        if (a.selectMode === "single" || a.selectMode === "multi") {
          if (E || I)
            return;
          c.has(w) ? c.delete(w) : a.selectMode === "single" ? c.set([w]) : c.add(w);
        } else if (I || X)
          c.has(w) ? c.delete(w) : c.add(w);
        else if (E) {
          const D = [...d.value].pop(), M = a.items.findIndex((se) => se === D), Q = Math.min(M, A), Z = Math.max(M, A), G = a.items.slice(Q, Z + 1);
          c.set(G);
        } else
          c.set([w]);
    }, P = (w, A, E) => {
      a.noSelectOnClick === !1 && K(w, A, E.shiftKey, E.ctrlKey, E.metaKey), n("row-clicked", w, A, E);
    }, j = (w) => {
      var G, se;
      if (!_.value)
        return;
      const A = typeof w == "object" && w !== null ? w.key : w, E = typeof w == "object" && w !== null ? w.sortable : !1;
      if (!(_.value === !0 && E === !0))
        return;
      const I = (ie) => {
        if (ie === "asc")
          return "desc";
        if (ie === void 0 || a.mustSort === !0 || Array.isArray(a.mustSort) && a.mustSort.includes(A))
          return "asc";
      }, X = ((G = r.value) == null ? void 0 : G.findIndex((ie) => ie.key === A)) ?? -1, D = (se = r.value) == null ? void 0 : se[X], M = (
        // If value is new, we default to ascending
        // Otherwise we make a temp copy of the value
        X === -1 || !D ? { key: A, order: "asc" } : { ...D }
      ), Q = () => {
        var te, ve;
        let ie = M;
        if (X === -1)
          r.value = [...r.value ?? [], M];
        else {
          const ue = I(M.order);
          ie = { ...M, order: ue }, r.value = ue ? (te = r.value) == null ? void 0 : te.map((me) => me.key === ie.key ? ie : me) : (ve = r.value) == null ? void 0 : ve.filter((me) => me.key !== ie.key);
        }
        return ie;
      }, Z = () => {
        const ie = {
          ...M,
          order: X === -1 ? M.order : I(M.order)
        };
        return r.value = [ie], ie;
      };
      n("sorted", a.multisort === !0 ? Q() : Z());
    }, N = (w, A, E, I = !1) => {
      n("head-clicked", w, A, E, I), j(A);
    }, O = async () => {
      if (!B.value || a.provider === void 0 || u.value)
        return;
      u.value = !0;
      const w = a.provider({
        currentPage: v.value,
        filter: a.filter,
        sortBy: r.value,
        perPage: p.value
      });
      try {
        const A = w instanceof Promise ? await w : w;
        if (A === void 0)
          return;
        f.value = A;
      } finally {
        u.value = !1;
      }
    }, z = async (w, A, E) => {
      if (A === E)
        return;
      const I = (Q) => {
        var Z;
        return ((Z = a.noProvider) == null ? void 0 : Z.includes(Q)) === !0;
      }, X = (w === "currentPage" || w === "perPage") && (I("paging") || a.noProviderPaging === !0), D = w === "filter" && (I("filtering") || a.noProviderFiltering === !0), M = (w === "sortBy" || w === "sortDesc") && (I("sorting") || a.noProviderSorting === !0);
      X || D || M || (B.value === !0 && await O(), w === "currentPage" || w === "perPage" || n("filtered", [...S.value]));
    };
    return de(
      () => a.filter,
      (w, A) => {
        z("filter", w, A), !(w === A || B.value) && (w || n("filtered", [...S.value]));
      }
    ), de(v, (w, A) => {
      z("currentPage", w, A);
    }), de(p, (w, A) => {
      z("perPage", w, A);
    }), de(
      r,
      (w, A) => {
        z("sortBy", w, A);
      },
      { deep: !0 }
    ), de(
      () => a.provider,
      (w) => {
        if (w === void 0) {
          f.value = [];
          return;
        }
        O();
      }
    ), De(O), o({
      // The row selection methods are really for compat. Users should probably use the v-model though
      clearSelected: () => {
        a.selectable && c.clear();
      },
      refresh: O,
      selectAllRows: () => {
        if (!a.selectable)
          return;
        const w = d.value.size > 0 ? [...d.value] : [];
        d.value = /* @__PURE__ */ new Set([...S.value]), d.value.forEach((A) => {
          w.includes(A) || n("row-selected", A);
        });
      },
      selectRow: (w) => {
        if (!a.selectable)
          return;
        const A = S.value[w];
        !A || c.has(A) || c.add(A);
      },
      unselectRow: (w) => {
        if (!a.selectable)
          return;
        const A = S.value[w];
        !A || !c.has(A) || c.delete(A);
      },
      isRowSelected: (w) => {
        if (!a.selectable)
          return !1;
        const A = S.value[w];
        return c.has(A);
      }
    }), (w, A) => (b(), L(ps, J(s(a), {
      "aria-busy": u.value,
      items: Y.value,
      fields: C.value,
      "table-class": g.value,
      "tbody-tr-class": $,
      "field-column-class": y,
      onHeadClicked: N,
      onRowDblClicked: A[0] || (A[0] = (E, I, X) => {
        n("row-dbl-clicked", E, I, X);
      }),
      onRowClicked: P,
      onRowHovered: A[1] || (A[1] = (E, I, X) => {
        n("row-hovered", E, I, X);
      }),
      onRowUnhovered: A[2] || (A[2] = (E, I, X) => {
        n("row-unhovered", E, I, X);
      })
    }), tl({
      "custom-body": R((E) => [
        u.value ? (b(), L(Qe, {
          key: 0,
          class: W(["b-table-busy-slot", x.value])
        }, {
          default: R(() => [
            ge(Ft, {
              colspan: E.fields.length
            }, {
              default: R(() => [
                V(w.$slots, "table-busy", {}, () => [
                  ge(ds, { show: "" }, {
                    overlay: R(() => [
                      ae("div", ef, [
                        ge(Aa),
                        ae("strong", null, oe(s(a).busyLoadingText), 1)
                      ])
                    ]),
                    _: 1
                  })
                ])
              ]),
              _: 2
            }, 1032, ["colspan"])
          ]),
          _: 2
        }, 1032, ["class"])) : ne("", !0)
      ]),
      _: 2
    }, [
      ke(w.$slots, (E, I) => ({
        name: I,
        fn: R((X) => [
          V(w.$slots, I, _e(Se(X)))
        ])
      })),
      ke(C.value, (E) => ({
        name: `head(${String(E.key)})`,
        fn: R((I) => {
          var X, D, M, Q;
          return [
            V(w.$slots, w.$slots[`head(${String(E.key)})`] ? `head(${String(E.key)})` : "head()", _e(Se(I)), () => [
              ce(oe(s(sa)(E)), 1)
            ]),
            _.value && I.field.sortable && s(a).noSortableIcon === !1 ? (b(), F(pe, { key: 0 }, [
              ((D = (X = r.value) == null ? void 0 : X.find((Z) => Z.key === I.field.key)) == null ? void 0 : D.order) === "asc" ? V(
                w.$slots,
                w.$slots[`sortAsc(${String(I.field.key)})`] ? `sortAsc(${String(I.field.key)})` : "sortAsc()",
                _e(J({ key: 0 }, { ...I })),
                () => [
                  Xc
                ]
              ) : ((Q = (M = r.value) == null ? void 0 : M.find((Z) => Z.key === I.field.key)) == null ? void 0 : Q.order) === "desc" ? V(
                w.$slots,
                w.$slots[`sortDesc(${String(I.field.key)})`] ? `sortDesc(${String(I.field.key)})` : "sortDesc()",
                _e(J({ key: 1 }, { ...I })),
                () => [
                  Yc
                ]
              ) : V(
                w.$slots,
                w.$slots[`sortDefault(${String(I.field.key)})`] ? `sortDefault(${String(I.field.key)})` : "sortDefault()",
                _e(J({ key: 2 }, { ...I })),
                () => [
                  (b(), F("svg", Zc, Qc))
                ]
              )
            ], 64)) : ne("", !0)
          ];
        })
      }))
    ]), 1040, ["aria-busy", "items", "fields", "table-class"]));
  }
}), af = /* @__PURE__ */ q({
  inheritAttrs: !1,
  __name: "BTab",
  props: /* @__PURE__ */ be({
    active: { type: Boolean },
    buttonId: { default: void 0 },
    disabled: { type: Boolean, default: !1 },
    id: { default: void 0 },
    lazy: { type: Boolean, default: void 0 },
    lazyOnce: { type: Boolean, default: void 0 },
    noBody: { type: Boolean, default: !1 },
    tag: { default: "div" },
    title: { default: void 0 },
    titleItemClass: { default: void 0 },
    titleLinkAttrs: { default: void 0 },
    titleLinkClass: { default: void 0 }
  }, {
    active: { type: Boolean, default: !1 },
    activeModifiers: {}
  }),
  emits: ["update:active"],
  setup(t) {
    const e = U(t, "BTab"), l = je(), a = we(t, "active"), n = Ve(Ko, null), r = Ce(() => e.id, "tabpane"), u = Ce(() => e.buttonId, "tab"), i = H(!1), d = H(null), { onClick: c, ...f } = Lt(), p = h(
      () => ({
        id: r.value,
        buttonId: u.value,
        disabled: e.disabled,
        title: e.title,
        titleComponent: l.title,
        titleItemClass: e.titleItemClass,
        titleLinkAttrs: e.titleLinkAttrs,
        titleLinkClass: e.titleLinkClass,
        onClick: c,
        el: d.value
      })
    );
    De(() => {
      n && (n.registerTab(p), e.active && n.activateTab(r.value));
    }), ks(() => {
      n && n.unregisterTab(r.value);
    });
    const v = T(() => (n == null ? void 0 : n.activeId.value) === r.value), m = H(v.value), B = T(() => !!(n != null && n.lazy.value || (e.lazyOnce ?? e.lazy))), k = T(() => e.lazyOnce !== void 0), _ = T(() => v.value && !e.disabled), C = T(
      () => _.value || !B.value || B.value && k.value && i.value
    );
    de(v, (x) => {
      if (x) {
        a.value = !0, setTimeout(() => {
          m.value = !0;
        }, 0);
        return;
      }
      m.value = !1, a.value = !1;
    }), de(
      () => e.active,
      (x) => {
        if (n) {
          if (!x) {
            v.value && n.activateTab(void 0);
            return;
          }
          n.activateTab(r.value);
        }
      }
    );
    const g = h(() => [
      {
        active: v.value,
        show: m.value,
        "card-body": (n == null ? void 0 : n.card.value) && e.noBody === !1,
        fade: !(n != null && n.noFade.value)
      },
      m.value ? n == null ? void 0 : n.activeTabClass.value : n == null ? void 0 : n.inactiveTabClass.value,
      n == null ? void 0 : n.tabClass.value
    ]);
    return de(C, (x) => {
      x && !i.value && (i.value = !0);
    }), (x, y) => (b(), L(fe(s(e).tag), J({
      id: s(r),
      ref_key: "el",
      ref: d,
      class: ["tab-pane", g.value],
      role: "tabpanel",
      "aria-labelledby": s(u)
    }, f), {
      default: R(() => [
        C.value ? V(x.$slots, "default", { key: 0 }) : ne("", !0)
      ]),
      _: 3
    }, 16, ["id", "class", "aria-labelledby"]));
  }
}), lf = ["aria-orientation"], of = ["id", "aria-controls", "aria-selected", "onClick"], nf = /* @__PURE__ */ q({
  __name: "BTabs",
  props: /* @__PURE__ */ be({
    activeId: {},
    activeNavItemClass: { default: void 0 },
    activeTabClass: { default: void 0 },
    align: { default: void 0 },
    card: { type: Boolean, default: !1 },
    contentClass: { default: void 0 },
    end: { type: Boolean, default: !1 },
    fill: { type: Boolean, default: !1 },
    id: { default: void 0 },
    inactiveNavItemClass: { default: void 0 },
    inactiveTabClass: { default: void 0 },
    justified: { type: Boolean, default: !1 },
    lazy: { type: Boolean, default: !1 },
    modelValue: {},
    navClass: { default: void 0 },
    navItemClass: { default: void 0 },
    navWrapperClass: { default: void 0 },
    noFade: { type: Boolean, default: !1 },
    noNavStyle: { type: Boolean, default: !1 },
    pills: { type: Boolean, default: !1 },
    small: { type: Boolean, default: !1 },
    tag: { default: "div" },
    tabClass: { default: void 0 },
    vertical: { type: Boolean, default: !1 }
  }, {
    modelValue: {
      default: -1
    },
    modelModifiers: {},
    activeId: {
      default: void 0
    },
    activeIdModifiers: {}
  }),
  emits: /* @__PURE__ */ be(["activate-tab", "click"], ["update:modelValue", "update:activeId"]),
  setup(t, { emit: o }) {
    const l = U(t, "BTabs"), a = o, n = we(t, "modelValue"), r = we(t, "activeId"), u = va(), i = H([]), d = h(
      () => i.value.map((y) => {
        const $ = s(y), S = $.id === r.value;
        return {
          ...$,
          active: S,
          navItemClasses: [
            {
              active: S,
              disabled: $.disabled
            },
            S ? l.activeNavItemClass : l.inactiveNavItemClass,
            l.navItemClass,
            $.titleLinkClass
          ]
        };
      })
    ), c = T(() => !(d != null && d.value && d.value.length > 0)), f = h(() => ({
      "d-flex": l.vertical,
      "align-items-start": l.vertical
    })), p = Xt(() => l.align), v = h(() => ({
      "nav-pills": l.pills,
      "flex-column me-3": l.vertical,
      [p.value]: l.align !== void 0,
      "nav-fill": l.fill,
      "card-header-tabs": l.card,
      "nav-justified": l.justified,
      "nav-tabs": !l.noNavStyle && !l.pills,
      small: l.small
    })), m = (y) => {
      var $;
      if (y !== void 0) {
        const S = ($ = d.value[y]) == null ? void 0 : $.id;
        if (y > -1 && y < d.value.length && !d.value[y].disabled && (n.value < 0 || r.value !== S || n.value !== y)) {
          const Y = new ut("activate-tab", { cancelable: !0 });
          a("activate-tab", y, n.value, Y), Y.defaultPrevented || (r.value !== S && (r.value = S), n.value !== y && (n.value = y));
        }
      }
    }, B = (y, $) => {
      var S, Y, K;
      m($), $ >= 0 && !d.value[$].disabled && ((S = d.value[$]) != null && S.onClick) && typeof d.value[$].onClick == "function" && ((K = (Y = d.value[$]).onClick) == null || K.call(Y, y));
    }, k = (y) => {
      var $, S;
      d.value.length <= 0 || (n.value = _(n.value + y, y), (S = document.getElementById(($ = d.value[n.value]) == null ? void 0 : $.buttonId)) == null || S.focus());
    }, _ = (y, $) => {
      let S = y, Y = -1, K = -1;
      for (let P = 0; P < d.value.length; P++)
        d.value[P].disabled || (Y === -1 && (Y = P), K = P);
      for (; S >= Y && S <= K && d.value[S].disabled; )
        S += $;
      return S < Y && (S = Y), S > K && (S = K), S;
    };
    de(n, (y, $) => {
      if (y === $ || d.value.length <= 0)
        return;
      const S = _(y, y > $ ? 1 : -1);
      Oe(() => {
        m(S);
      });
    }), de(r, (y, $) => {
      const S = d.value.findIndex((Y) => Y.id === y);
      if (y !== $ && !(d.value.length <= 0)) {
        if (S === -1) {
          m(_(0, 1));
          return;
        }
        m(S);
      }
    });
    const C = (y) => {
      i.value.find(($) => $.value.id === y.value.id) ? i.value[i.value.findIndex(($) => $.value.id === y.value.id)] = y : i.value.push(y), i.value.sort(($, S) => {
        if (!Node || !$.value.el || !S.value.el)
          return 0;
        const Y = $.value.el.compareDocumentPosition(S.value.el);
        return Y & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : Y & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
      });
    }, g = (y) => {
      i.value = i.value.filter(($) => $.value.id !== y);
    };
    de(
      i,
      () => {
        x();
      },
      { deep: !0 }
    );
    const x = () => {
      var y;
      if (d.value.length === 0) {
        n.value = -1, r.value = void 0;
        return;
      }
      if (n.value >= 0 && !r.value && (r.value = (y = d.value[n.value]) == null ? void 0 : y.id), d.value.find(($) => $.id === r.value)) {
        m(d.value.findIndex(($) => $.id === r.value));
        return;
      }
      m(d.value.map(($) => !$.disabled).indexOf(!0));
    };
    return We(Ko, {
      lazy: T(() => l.lazy),
      card: T(() => l.card),
      noFade: T(() => l.noFade),
      activeTabClass: T(() => l.activeTabClass),
      inactiveTabClass: T(() => l.inactiveTabClass),
      tabClass: T(() => l.tabClass),
      registerTab: C,
      unregisterTab: g,
      activeId: r,
      activateTab: (y) => {
        const $ = d.value.findIndex((S) => S.id === y);
        if (y === void 0 || $ === -1) {
          m(_(0, 1));
          return;
        }
        m($);
      }
    }), (y, $) => (b(), L(fe(s(l).tag), {
      id: s(l).id,
      class: W(["tabs", f.value])
    }, {
      default: R(() => [
        ge(s(u).define, null, {
          default: R(() => [
            ae("div", {
              class: W(["tab-content", s(l).contentClass])
            }, [
              V(y.$slots, "default"),
              c.value ? (b(), F("div", {
                key: "bv-empty-tab",
                class: W(["tab-pane active", { "card-body": s(l).card }])
              }, [
                V(y.$slots, "empty")
              ], 2)) : ne("", !0)
            ], 2)
          ]),
          _: 3
        }),
        s(l).end ? (b(), L(s(u).reuse, { key: 0 })) : ne("", !0),
        ae("div", {
          class: W([
            s(l).navWrapperClass,
            { "card-header": s(l).card, "ms-auto": y.vertical && s(l).end }
          ])
        }, [
          ae("ul", {
            class: W(["nav", [v.value, s(l).navClass]]),
            role: "tablist",
            "aria-orientation": s(l).vertical ? "vertical" : "horizontal"
          }, [
            V(y.$slots, "tabs-start"),
            (b(!0), F(pe, null, ke(d.value, (S, Y) => (b(), F("li", {
              key: S.id,
              class: W(["nav-item", S.titleItemClass]),
              role: "presentation"
            }, [
              ae("button", J({
                id: S.buttonId,
                class: ["nav-link", S.navItemClasses],
                role: "tab",
                "aria-controls": S.id,
                "aria-selected": S.active,
                ref_for: !0
              }, S.titleLinkAttrs, {
                onKeydown: [
                  $[0] || ($[0] = Zt(xt((K) => k(-1), ["stop", "prevent"]), ["left"])),
                  $[1] || ($[1] = Zt(xt((K) => k(1), ["stop", "prevent"]), ["right"])),
                  $[2] || ($[2] = Zt(xt((K) => k(-999), ["stop", "prevent"]), ["page-up"])),
                  $[3] || ($[3] = Zt(xt((K) => k(999), ["stop", "prevent"]), ["page-down"]))
                ],
                onClick: xt((K) => B(K, Y), ["stop", "prevent"])
              }), [
                S.titleComponent ? (b(), L(fe(S.titleComponent), { key: 0 })) : (b(), F(pe, { key: 1 }, [
                  ce(oe(S.title), 1)
                ], 64))
              ], 16, of)
            ], 2))), 128)),
            V(y.$slots, "tabs-end")
          ], 10, lf)
        ], 2),
        s(l).end ? ne("", !0) : (b(), L(s(u).reuse, { key: 1 }))
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), sf = { id: "__BVID__toaster-container" }, rf = /* @__PURE__ */ q({
  __name: "BToastOrchestrator",
  props: {
    appendToast: { type: Boolean, default: !1 },
    teleportDisabled: { default: !1 },
    teleportTo: { default: "body" }
  },
  setup(t, { expose: o }) {
    const l = U(t, "BToastOrchestrator"), { remove: a, toasts: n, show: r, _setIsAppend: u, leave: i } = kn();
    de(
      () => l.appendToast,
      (c) => {
        u == null || u(c);
      },
      { immediate: !0 }
    );
    const d = (c) => xa(c, ["_modelValue", "_self", "pos"]);
    return o({
      remove: a,
      show: r,
      toasts: n
    }), (c, f) => (b(), L(_t, {
      to: s(l).teleportTo,
      disabled: s(l).teleportDisabled
    }, [
      ae("div", sf, [
        (b(!0), F(pe, null, ke(s(ai), (p, v) => (b(), F("div", {
          key: v,
          class: W([p, "toast-container position-fixed p-3"])
        }, [
          ge(vo, { name: "b-list" }, {
            default: R(() => {
              var m;
              return [
                (b(!0), F(pe, null, ke((m = s(n)) == null ? void 0 : m.filter((B) => B.value.props.pos === v), (B) => (b(), L(fe(B.value.component), J({
                  key: B.value.props._self,
                  ref_for: !0
                }, d(B.value.props), {
                  "model-value": B.value.props._modelValue,
                  "trans-props": { ...B.value.props.transProps, appear: !0 },
                  "onUpdate:modelValue": (k) => {
                    var _;
                    return (_ = s(i)) == null ? void 0 : _(B.value.props._self);
                  },
                  onHide: (k) => {
                    var _;
                    return (_ = s(a)) == null ? void 0 : _(B.value.props._self);
                  }
                }), null, 16, ["model-value", "trans-props", "onUpdate:modelValue", "onHide"]))), 128))
              ];
            }),
            _: 2
          }, 1024)
        ], 2))), 128))
      ])
    ], 8, ["to", "disabled"]));
  }
}), uf = /* @__PURE__ */ q({
  __name: "BTooltip",
  props: /* @__PURE__ */ be({
    interactive: { type: Boolean, default: void 0 },
    boundary: {},
    boundaryPadding: {},
    click: { type: Boolean, default: void 0 },
    closeOnHide: { type: Boolean },
    content: { default: void 0 },
    customClass: { default: void 0 },
    delay: { default: void 0 },
    floatingMiddleware: { default: void 0 },
    html: { type: Boolean, default: void 0 },
    id: { default: void 0 },
    inline: { type: Boolean, default: void 0 },
    manual: { type: Boolean, default: void 0 },
    modelValue: { type: Boolean },
    noAutoClose: { type: Boolean, default: void 0 },
    noFade: { type: Boolean, default: void 0 },
    noFlip: { type: Boolean, default: void 0 },
    noHide: { type: Boolean, default: void 0 },
    noShift: { type: Boolean, default: void 0 },
    noSize: { type: Boolean },
    noninteractive: { type: Boolean, default: void 0 },
    offset: { default: void 0 },
    placement: { default: void 0 },
    persistent: { type: Boolean },
    realtime: { type: Boolean, default: void 0 },
    reference: { default: void 0 },
    strategy: { default: void 0 },
    target: { default: void 0 },
    title: { default: void 0 },
    variant: { default: void 0 },
    teleportDisabled: { default: void 0 },
    teleportTo: { default: void 0 }
  }, {
    modelValue: { type: Boolean, default: void 0 },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(t, { expose: o }) {
    var u, i, d;
    const l = U(t, "BTooltip"), a = we(t, "modelValue"), n = h(() => {
      const { interactive: c, noninteractive: f, ...p } = l;
      return { noninteractive: f !== void 0 ? f : !c, ...p };
    }), r = H(null);
    return o({
      hide: (u = r.value) == null ? void 0 : u.hide,
      show: (i = r.value) == null ? void 0 : i.show,
      toggle: (d = r.value) == null ? void 0 : d.toggle
    }), (c, f) => (b(), L(dl, J({
      ref_key: "popover",
      ref: r
    }, n.value, {
      modelValue: a.value,
      "onUpdate:modelValue": f[0] || (f[0] = (p) => a.value = p),
      tooltip: ""
    }), tl({ _: 2 }, [
      ke(c.$slots, (p, v) => ({
        name: v,
        fn: R((m) => [
          V(c.$slots, v, _e(Se(m)))
        ])
      }))
    ]), 1040, ["modelValue"]));
  }
}), mf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BAccordion: Ji,
  BAccordionItem: eu,
  BAlert: au,
  BAvatar: uu,
  BAvatarGroup: du,
  BBadge: Un,
  BBreadcrumb: vu,
  BBreadcrumbItem: Kn,
  BButton: vt,
  BButtonGroup: pu,
  BButtonToolbar: bu,
  BCard: ts,
  BCardBody: Qn,
  BCardFooter: es,
  BCardGroup: gu,
  BCardHeader: Yn,
  BCardImg: hl,
  BCardSubtitle: Jn,
  BCardText: hu,
  BCardTitle: Zn,
  BCarousel: xu,
  BCarouselSlide: Ou,
  BCloseButton: zt,
  BCol: Dt,
  BCollapse: Wn,
  BContainer: Fu,
  BDropdown: as,
  BDropdownDivider: Lu,
  BDropdownForm: zu,
  BDropdownGroup: Du,
  BDropdownHeader: qu,
  BDropdownItem: Gu,
  BDropdownItemButton: Ku,
  BDropdownText: Yu,
  BForm: ls,
  BFormCheckbox: os,
  BFormCheckboxGroup: ud,
  BFormDatalist: td,
  BFormFile: fd,
  BFormFloatingLabel: od,
  BFormGroup: Bd,
  BFormInput: Zl,
  BFormInvalidFeedback: Ua,
  BFormRadio: ss,
  BFormRadioGroup: Sd,
  BFormRow: ia,
  BFormSelect: Nd,
  BFormSelectOption: Va,
  BFormSelectOptionGroup: rs,
  BFormSpinbutton: Id,
  BFormTag: is,
  BFormTags: Yd,
  BFormText: Ka,
  BFormTextarea: Jd,
  BFormValidFeedback: Xa,
  BImg: gl,
  BInput: Zl,
  BInputGroup: nc,
  BInputGroupText: sc,
  BLink: it,
  BListGroup: rc,
  BListGroupItem: ic,
  BModal: Wa,
  BModalOrchestrator: dc,
  BNav: cc,
  BNavForm: vc,
  BNavItem: mc,
  BNavItemDropdown: yc,
  BNavText: hc,
  BNavbar: Bc,
  BNavbarBrand: _c,
  BNavbarNav: wc,
  BNavbarToggle: Nc,
  BOffcanvas: Pc,
  BOverlay: ds,
  BPagination: Ec,
  BPlaceholder: Ue,
  BPlaceholderButton: cs,
  BPlaceholderCard: Lc,
  BPlaceholderTable: zc,
  BPlaceholderWrapper: Mc,
  BPopover: dl,
  BProgress: xn,
  BProgressBar: Sn,
  BRow: Hc,
  BSpinner: Aa,
  BTab: af,
  BTable: tf,
  BTableLite: ps,
  BTableSimple: Bl,
  BTabs: nf,
  BTbody: fs,
  BTd: Ft,
  BTfoot: Za,
  BTh: Ja,
  BThead: vs,
  BToast: $n,
  BToastOrchestrator: rf,
  BTooltip: uf,
  BTr: Qe,
  BTransition: $a
}, Symbol.toStringTag, { value: "Module" })), bf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  useBreadcrumb: cn,
  useColorMode: li,
  useModal: ci,
  useModalController: _n,
  useScrollspy: Cn,
  useToast: kn
}, Symbol.toStringTag, { value: "Module" })), yf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BvCarouselEvent: po,
  BvEvent: ut,
  BvTriggerableEvent: wt
}, Symbol.toStringTag, { value: "Module" })), gf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ComponentNames: qn,
  ComposableNames: Yi,
  DirectiveNames: Gn
}, Symbol.toStringTag, { value: "Module" })), io = "bootstrap-vue-next", df = (t) => t.toLowerCase().startsWith("v") ? t.slice(1) : t, hf = (t = {}) => ({
  install(o) {
    (t.breadcrumb ?? !0) && o.use(Vn), ((t.id ?? !0) || typeof t.id == "object") && o.use(Nn, t), (t.modalController ?? !0) && o.use(Mn), (t.modalManager ?? !0) && o.use(Hn), ((t.rtl ?? !0) || typeof t.rtl == "object") && o.use(Dn, t), (t.toast ?? !0) && o.use(An), o.use(jn, t);
  }
}), Bf = ({
  aliases: t = {},
  directives: o = !0,
  components: e = !0
} = {}) => {
  const l = typeof e == "boolean" ? { all: e } : e, a = new Set(Rl(l, qn)), n = typeof o == "boolean" ? { all: o } : o, r = new Set(
    Rl(n, Gn).map(df)
  );
  return [
    {
      type: "component",
      resolve: (i) => {
        if (a.has(i) || t[i])
          return {
            name: t[i] || i,
            from: io
          };
      }
    },
    {
      type: "directive",
      resolve: (i) => {
        if (r.has(i))
          return {
            name: `v${i}`,
            from: io
          };
      }
    }
  ];
};
export {
  Ji as BAccordion,
  eu as BAccordionItem,
  au as BAlert,
  uu as BAvatar,
  du as BAvatarGroup,
  Un as BBadge,
  vu as BBreadcrumb,
  Kn as BBreadcrumbItem,
  vt as BButton,
  pu as BButtonGroup,
  bu as BButtonToolbar,
  ts as BCard,
  Qn as BCardBody,
  es as BCardFooter,
  gu as BCardGroup,
  Yn as BCardHeader,
  hl as BCardImg,
  Jn as BCardSubtitle,
  hu as BCardText,
  Zn as BCardTitle,
  xu as BCarousel,
  Ou as BCarouselSlide,
  zt as BCloseButton,
  Dt as BCol,
  Wn as BCollapse,
  Fu as BContainer,
  as as BDropdown,
  Lu as BDropdownDivider,
  zu as BDropdownForm,
  Du as BDropdownGroup,
  qu as BDropdownHeader,
  Gu as BDropdownItem,
  Ku as BDropdownItemButton,
  Yu as BDropdownText,
  ls as BForm,
  os as BFormCheckbox,
  ud as BFormCheckboxGroup,
  td as BFormDatalist,
  fd as BFormFile,
  od as BFormFloatingLabel,
  Bd as BFormGroup,
  Zl as BFormInput,
  Ua as BFormInvalidFeedback,
  ss as BFormRadio,
  Sd as BFormRadioGroup,
  ia as BFormRow,
  Nd as BFormSelect,
  Va as BFormSelectOption,
  rs as BFormSelectOptionGroup,
  Id as BFormSpinbutton,
  is as BFormTag,
  Yd as BFormTags,
  Ka as BFormText,
  Jd as BFormTextarea,
  Xa as BFormValidFeedback,
  gl as BImg,
  Zl as BInput,
  nc as BInputGroup,
  sc as BInputGroupText,
  it as BLink,
  rc as BListGroup,
  ic as BListGroupItem,
  Wa as BModal,
  dc as BModalOrchestrator,
  cc as BNav,
  vc as BNavForm,
  mc as BNavItem,
  yc as BNavItemDropdown,
  hc as BNavText,
  Bc as BNavbar,
  _c as BNavbarBrand,
  wc as BNavbarNav,
  Nc as BNavbarToggle,
  Pc as BOffcanvas,
  ds as BOverlay,
  Ec as BPagination,
  Ue as BPlaceholder,
  cs as BPlaceholderButton,
  Lc as BPlaceholderCard,
  zc as BPlaceholderTable,
  Mc as BPlaceholderWrapper,
  dl as BPopover,
  xn as BProgress,
  Sn as BProgressBar,
  Hc as BRow,
  Aa as BSpinner,
  af as BTab,
  tf as BTable,
  ps as BTableLite,
  Bl as BTableSimple,
  nf as BTabs,
  fs as BTbody,
  Ft as BTd,
  Za as BTfoot,
  Ja as BTh,
  vs as BThead,
  $n as BToast,
  rf as BToastOrchestrator,
  uf as BTooltip,
  Qe as BTr,
  $a as BTransition,
  Bf as BootstrapVueNextResolver,
  po as BvCarouselEvent,
  ut as BvEvent,
  wt as BvTriggerableEvent,
  qn as ComponentNames,
  mf as Components,
  Yi as ComposableNames,
  bf as Composables,
  Gn as DirectiveNames,
  pf as Directives,
  vf as Plugins,
  gf as Types,
  yf as Utils,
  Vn as breadcrumbPlugin,
  hf as createBootstrap,
  jn as defaultsPlugin,
  Nn as idPlugin,
  Mn as modalControllerPlugin,
  Hn as modalManagerPlugin,
  Dn as rtlPlugin,
  An as toastPlugin,
  cn as useBreadcrumb,
  li as useColorMode,
  ci as useModal,
  _n as useModalController,
  Cn as useScrollspy,
  kn as useToast,
  Cc as vBColorMode,
  Ya as vBModal,
  Sc as vBPopover,
  xc as vBScrollspy,
  Ya as vBToggle,
  $c as vBTooltip
};
//# sourceMappingURL=bootstrap-vue-next.mjs.map
